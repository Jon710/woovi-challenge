{"ast":null,"code":"'use strict';\n\nvar generateID = require('../util/generateID');\nfunction wrapNetworkWithLogObserver(env, network) {\n  return {\n    execute: function execute(params, variables, cacheConfig, uploadables) {\n      var networkRequestId = generateID();\n      var logObserver = {\n        start: function start(subscription) {\n          env.__log({\n            name: 'network.start',\n            networkRequestId: networkRequestId,\n            params: params,\n            variables: variables,\n            cacheConfig: cacheConfig\n          });\n        },\n        next: function next(response) {\n          env.__log({\n            name: 'network.next',\n            networkRequestId: networkRequestId,\n            response: response\n          });\n        },\n        error: function error(_error) {\n          env.__log({\n            name: 'network.error',\n            networkRequestId: networkRequestId,\n            error: _error\n          });\n        },\n        complete: function complete() {\n          env.__log({\n            name: 'network.complete',\n            networkRequestId: networkRequestId\n          });\n        },\n        unsubscribe: function unsubscribe() {\n          env.__log({\n            name: 'network.unsubscribe',\n            networkRequestId: networkRequestId\n          });\n        }\n      };\n      var logRequestInfo = function logRequestInfo(info) {\n        env.__log({\n          name: 'network.info',\n          networkRequestId: networkRequestId,\n          info: info\n        });\n      };\n      return network.execute(params, variables, cacheConfig, uploadables, logRequestInfo)[\"do\"](logObserver);\n    }\n  };\n}\nmodule.exports = wrapNetworkWithLogObserver;","map":{"version":3,"names":["generateID","require","wrapNetworkWithLogObserver","env","network","execute","params","variables","cacheConfig","uploadables","networkRequestId","logObserver","start","subscription","__log","name","next","response","error","_error","complete","unsubscribe","logRequestInfo","info","module","exports"],"sources":["/Users/joaoluismoraes/Desktop/woovi-challenge/web/node_modules/relay-runtime/lib/network/wrapNetworkWithLogObserver.js"],"sourcesContent":["'use strict';\n\nvar generateID = require('../util/generateID');\nfunction wrapNetworkWithLogObserver(env, network) {\n  return {\n    execute: function execute(params, variables, cacheConfig, uploadables) {\n      var networkRequestId = generateID();\n      var logObserver = {\n        start: function start(subscription) {\n          env.__log({\n            name: 'network.start',\n            networkRequestId: networkRequestId,\n            params: params,\n            variables: variables,\n            cacheConfig: cacheConfig\n          });\n        },\n        next: function next(response) {\n          env.__log({\n            name: 'network.next',\n            networkRequestId: networkRequestId,\n            response: response\n          });\n        },\n        error: function error(_error) {\n          env.__log({\n            name: 'network.error',\n            networkRequestId: networkRequestId,\n            error: _error\n          });\n        },\n        complete: function complete() {\n          env.__log({\n            name: 'network.complete',\n            networkRequestId: networkRequestId\n          });\n        },\n        unsubscribe: function unsubscribe() {\n          env.__log({\n            name: 'network.unsubscribe',\n            networkRequestId: networkRequestId\n          });\n        }\n      };\n      var logRequestInfo = function logRequestInfo(info) {\n        env.__log({\n          name: 'network.info',\n          networkRequestId: networkRequestId,\n          info: info\n        });\n      };\n      return network.execute(params, variables, cacheConfig, uploadables, logRequestInfo)[\"do\"](logObserver);\n    }\n  };\n}\nmodule.exports = wrapNetworkWithLogObserver;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,UAAU,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAC9C,SAASC,0BAA0BA,CAACC,GAAG,EAAEC,OAAO,EAAE;EAChD,OAAO;IACLC,OAAO,EAAE,SAASA,OAAOA,CAACC,MAAM,EAAEC,SAAS,EAAEC,WAAW,EAAEC,WAAW,EAAE;MACrE,IAAIC,gBAAgB,GAAGV,UAAU,CAAC,CAAC;MACnC,IAAIW,WAAW,GAAG;QAChBC,KAAK,EAAE,SAASA,KAAKA,CAACC,YAAY,EAAE;UAClCV,GAAG,CAACW,KAAK,CAAC;YACRC,IAAI,EAAE,eAAe;YACrBL,gBAAgB,EAAEA,gBAAgB;YAClCJ,MAAM,EAAEA,MAAM;YACdC,SAAS,EAAEA,SAAS;YACpBC,WAAW,EAAEA;UACf,CAAC,CAAC;QACJ,CAAC;QACDQ,IAAI,EAAE,SAASA,IAAIA,CAACC,QAAQ,EAAE;UAC5Bd,GAAG,CAACW,KAAK,CAAC;YACRC,IAAI,EAAE,cAAc;YACpBL,gBAAgB,EAAEA,gBAAgB;YAClCO,QAAQ,EAAEA;UACZ,CAAC,CAAC;QACJ,CAAC;QACDC,KAAK,EAAE,SAASA,KAAKA,CAACC,MAAM,EAAE;UAC5BhB,GAAG,CAACW,KAAK,CAAC;YACRC,IAAI,EAAE,eAAe;YACrBL,gBAAgB,EAAEA,gBAAgB;YAClCQ,KAAK,EAAEC;UACT,CAAC,CAAC;QACJ,CAAC;QACDC,QAAQ,EAAE,SAASA,QAAQA,CAAA,EAAG;UAC5BjB,GAAG,CAACW,KAAK,CAAC;YACRC,IAAI,EAAE,kBAAkB;YACxBL,gBAAgB,EAAEA;UACpB,CAAC,CAAC;QACJ,CAAC;QACDW,WAAW,EAAE,SAASA,WAAWA,CAAA,EAAG;UAClClB,GAAG,CAACW,KAAK,CAAC;YACRC,IAAI,EAAE,qBAAqB;YAC3BL,gBAAgB,EAAEA;UACpB,CAAC,CAAC;QACJ;MACF,CAAC;MACD,IAAIY,cAAc,GAAG,SAASA,cAAcA,CAACC,IAAI,EAAE;QACjDpB,GAAG,CAACW,KAAK,CAAC;UACRC,IAAI,EAAE,cAAc;UACpBL,gBAAgB,EAAEA,gBAAgB;UAClCa,IAAI,EAAEA;QACR,CAAC,CAAC;MACJ,CAAC;MACD,OAAOnB,OAAO,CAACC,OAAO,CAACC,MAAM,EAAEC,SAAS,EAAEC,WAAW,EAAEC,WAAW,EAAEa,cAAc,CAAC,CAAC,IAAI,CAAC,CAACX,WAAW,CAAC;IACxG;EACF,CAAC;AACH;AACAa,MAAM,CAACC,OAAO,GAAGvB,0BAA0B"},"metadata":{},"sourceType":"script","externalDependencies":[]}