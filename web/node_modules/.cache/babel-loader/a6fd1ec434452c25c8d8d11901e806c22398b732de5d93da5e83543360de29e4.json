{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar invariant = require('invariant');\nvar React = require('react');\nvar _require = require('relay-runtime'),\n  fetchQueryDeduped = _require.__internal.fetchQueryDeduped,\n  Observable = _require.Observable,\n  PreloadableQueryRegistry = _require.PreloadableQueryRegistry,\n  RelayFeatureFlags = _require.RelayFeatureFlags,\n  ReplaySubject = _require.ReplaySubject,\n  createOperationDescriptor = _require.createOperationDescriptor,\n  getRequest = _require.getRequest,\n  getRequestIdentifier = _require.getRequestIdentifier;\nvar warning = require(\"fbjs/lib/warning\");\nvar RenderDispatcher = null;\nvar fetchKey = 100001;\nfunction useTrackLoadQueryInRender() {\n  if (RenderDispatcher === null) {\n    var _React$__SECRET_INTER, _React$__SECRET_INTER2;\n    RenderDispatcher = (_React$__SECRET_INTER = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React$__SECRET_INTER === void 0 ? void 0 : (_React$__SECRET_INTER2 = _React$__SECRET_INTER.ReactCurrentDispatcher) === null || _React$__SECRET_INTER2 === void 0 ? void 0 : _React$__SECRET_INTER2.current;\n  }\n}\nfunction loadQuery(environment, preloadableRequest, variables, options, environmentProviderOptions) {\n  var _React$__SECRET_INTER3, _React$__SECRET_INTER4, _options$__nameForWar, _options$fetchPolicy;\n  var CurrentDispatcher = (_React$__SECRET_INTER3 = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React$__SECRET_INTER3 === void 0 ? void 0 : (_React$__SECRET_INTER4 = _React$__SECRET_INTER3.ReactCurrentDispatcher) === null || _React$__SECRET_INTER4 === void 0 ? void 0 : _React$__SECRET_INTER4.current;\n  process.env.NODE_ENV !== \"production\" ? warning(RenderDispatcher == null || CurrentDispatcher !== RenderDispatcher, 'Relay: `%s` should not be called inside a React render function.', (_options$__nameForWar = options === null || options === void 0 ? void 0 : options.__nameForWarning) !== null && _options$__nameForWar !== void 0 ? _options$__nameForWar : 'loadQuery') : void 0;\n  fetchKey++;\n  var fetchPolicy = (_options$fetchPolicy = options === null || options === void 0 ? void 0 : options.fetchPolicy) !== null && _options$fetchPolicy !== void 0 ? _options$fetchPolicy : 'store-or-network';\n  var networkCacheConfig = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, options === null || options === void 0 ? void 0 : options.networkCacheConfig), {}, {\n    force: true\n  });\n  var retainReference;\n  var didExecuteNetworkSource = false;\n  var executeWithNetworkSource = function executeWithNetworkSource(operation, networkObservable) {\n    didExecuteNetworkSource = true;\n    return environment.executeWithSource({\n      operation: operation,\n      source: networkObservable\n    });\n  };\n  var executionSubject = new ReplaySubject();\n  var returnedObservable = Observable.create(function (sink) {\n    return executionSubject.subscribe(sink);\n  });\n  var unsubscribeFromNetworkRequest;\n  var networkError = null;\n  var didMakeNetworkRequest = false;\n  var makeNetworkRequest = function makeNetworkRequest(params) {\n    didMakeNetworkRequest = true;\n    var observable;\n    var subject = new ReplaySubject();\n    if (RelayFeatureFlags.ENABLE_LOAD_QUERY_REQUEST_DEDUPING === true) {\n      var identifier = 'raw-network-request-' + getRequestIdentifier(params, variables);\n      observable = fetchQueryDeduped(environment, identifier, function () {\n        var network = environment.getNetwork();\n        return network.execute(params, variables, networkCacheConfig);\n      });\n    } else {\n      var network = environment.getNetwork();\n      observable = network.execute(params, variables, networkCacheConfig);\n    }\n    var _observable$subscribe = observable.subscribe({\n        error: function error(err) {\n          networkError = err;\n          subject.error(err);\n        },\n        next: function next(data) {\n          subject.next(data);\n        },\n        complete: function complete() {\n          subject.complete();\n        }\n      }),\n      unsubscribe = _observable$subscribe.unsubscribe;\n    unsubscribeFromNetworkRequest = unsubscribe;\n    return Observable.create(function (sink) {\n      var subjectSubscription = subject.subscribe(sink);\n      return function () {\n        subjectSubscription.unsubscribe();\n        unsubscribeFromNetworkRequest();\n      };\n    });\n  };\n  var unsubscribeFromExecution;\n  var executeDeduped = function executeDeduped(operation, fetchFn) {\n    if (RelayFeatureFlags.ENABLE_LOAD_QUERY_REQUEST_DEDUPING === true) {\n      didMakeNetworkRequest = true;\n    }\n    var _fetchQueryDeduped$su = fetchQueryDeduped(environment, operation.request.identifier, fetchFn).subscribe({\n      error: function error(err) {\n        executionSubject.error(err);\n      },\n      next: function next(data) {\n        executionSubject.next(data);\n      },\n      complete: function complete() {\n        executionSubject.complete();\n      }\n    });\n    unsubscribeFromExecution = _fetchQueryDeduped$su.unsubscribe;\n  };\n  var checkAvailabilityAndExecute = function checkAvailabilityAndExecute(concreteRequest) {\n    var operation = createOperationDescriptor(concreteRequest, variables, networkCacheConfig);\n    retainReference = environment.retain(operation);\n    if (fetchPolicy === 'store-only') {\n      return;\n    }\n    var shouldFetch = fetchPolicy !== 'store-or-network' || environment.check(operation).status !== 'available';\n    if (shouldFetch) {\n      executeDeduped(operation, function () {\n        var networkObservable = makeNetworkRequest(concreteRequest.params);\n        var executeObservable = executeWithNetworkSource(operation, networkObservable);\n        return executeObservable;\n      });\n    }\n  };\n  var params;\n  var cancelOnLoadCallback;\n  var queryId;\n  if (preloadableRequest.kind === 'PreloadableConcreteRequest') {\n    var preloadableConcreteRequest = preloadableRequest;\n    params = preloadableConcreteRequest.params;\n    var _params = params;\n    queryId = _params.id;\n    !(queryId !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: `loadQuery` requires that preloadable query `%s` has a persisted query id', params.name) : invariant(false) : void 0;\n    var _module = PreloadableQueryRegistry.get(queryId);\n    if (_module != null) {\n      checkAvailabilityAndExecute(_module);\n    } else {\n      var networkObservable = fetchPolicy === 'store-only' ? null : makeNetworkRequest(params);\n      var _PreloadableQueryRegi = PreloadableQueryRegistry.onLoad(queryId, function (preloadedModule) {\n        cancelOnLoadCallback();\n        var operation = createOperationDescriptor(preloadedModule, variables, networkCacheConfig);\n        retainReference = environment.retain(operation);\n        if (networkObservable != null) {\n          executeDeduped(operation, function () {\n            return executeWithNetworkSource(operation, networkObservable);\n          });\n        }\n      });\n      cancelOnLoadCallback = _PreloadableQueryRegi.dispose;\n    }\n  } else {\n    var graphQlTaggedNode = preloadableRequest;\n    var request = getRequest(graphQlTaggedNode);\n    params = request.params;\n    queryId = params.cacheID != null ? params.cacheID : params.id;\n    checkAvailabilityAndExecute(request);\n  }\n  var isDisposed = false;\n  var isReleased = false;\n  var isNetworkRequestCancelled = false;\n  var releaseQuery = function releaseQuery() {\n    if (isReleased) {\n      return;\n    }\n    retainReference && retainReference.dispose();\n    isReleased = true;\n  };\n  var cancelNetworkRequest = function cancelNetworkRequest() {\n    if (isNetworkRequestCancelled) {\n      return;\n    }\n    if (didExecuteNetworkSource) {\n      unsubscribeFromExecution && unsubscribeFromExecution();\n    } else {\n      unsubscribeFromNetworkRequest && unsubscribeFromNetworkRequest();\n    }\n    cancelOnLoadCallback && cancelOnLoadCallback();\n    isNetworkRequestCancelled = true;\n  };\n  return {\n    kind: 'PreloadedQuery',\n    environment: environment,\n    environmentProviderOptions: environmentProviderOptions,\n    dispose: function dispose() {\n      if (isDisposed) {\n        return;\n      }\n      releaseQuery();\n      cancelNetworkRequest();\n      isDisposed = true;\n    },\n    releaseQuery: releaseQuery,\n    cancelNetworkRequest: cancelNetworkRequest,\n    fetchKey: fetchKey,\n    id: queryId,\n    get isDisposed() {\n      return isDisposed || isReleased;\n    },\n    get networkError() {\n      return networkError;\n    },\n    name: params.name,\n    networkCacheConfig: networkCacheConfig,\n    fetchPolicy: fetchPolicy,\n    source: didMakeNetworkRequest ? returnedObservable : undefined,\n    variables: variables\n  };\n}\nmodule.exports = {\n  loadQuery: loadQuery,\n  useTrackLoadQueryInRender: useTrackLoadQueryInRender\n};","map":{"version":3,"names":["_interopRequireDefault","require","_objectSpread2","invariant","React","_require","fetchQueryDeduped","__internal","Observable","PreloadableQueryRegistry","RelayFeatureFlags","ReplaySubject","createOperationDescriptor","getRequest","getRequestIdentifier","warning","RenderDispatcher","fetchKey","useTrackLoadQueryInRender","_React$__SECRET_INTER","_React$__SECRET_INTER2","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","current","loadQuery","environment","preloadableRequest","variables","options","environmentProviderOptions","_React$__SECRET_INTER3","_React$__SECRET_INTER4","_options$__nameForWar","_options$fetchPolicy","CurrentDispatcher","process","env","NODE_ENV","__nameForWarning","fetchPolicy","networkCacheConfig","force","retainReference","didExecuteNetworkSource","executeWithNetworkSource","operation","networkObservable","executeWithSource","source","executionSubject","returnedObservable","create","sink","subscribe","unsubscribeFromNetworkRequest","networkError","didMakeNetworkRequest","makeNetworkRequest","params","observable","subject","ENABLE_LOAD_QUERY_REQUEST_DEDUPING","identifier","network","getNetwork","execute","_observable$subscribe","error","err","next","data","complete","unsubscribe","subjectSubscription","unsubscribeFromExecution","executeDeduped","fetchFn","_fetchQueryDeduped$su","request","checkAvailabilityAndExecute","concreteRequest","retain","shouldFetch","check","status","executeObservable","cancelOnLoadCallback","queryId","kind","preloadableConcreteRequest","_params","id","name","_module","get","_PreloadableQueryRegi","onLoad","preloadedModule","dispose","graphQlTaggedNode","cacheID","isDisposed","isReleased","isNetworkRequestCancelled","releaseQuery","cancelNetworkRequest","undefined","module","exports"],"sources":["/Users/joaoluismoraes/Desktop/woovi-challenge/web/node_modules/react-relay/lib/relay-hooks/loadQuery.js"],"sourcesContent":["'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar invariant = require('invariant');\nvar React = require('react');\nvar _require = require('relay-runtime'),\n  fetchQueryDeduped = _require.__internal.fetchQueryDeduped,\n  Observable = _require.Observable,\n  PreloadableQueryRegistry = _require.PreloadableQueryRegistry,\n  RelayFeatureFlags = _require.RelayFeatureFlags,\n  ReplaySubject = _require.ReplaySubject,\n  createOperationDescriptor = _require.createOperationDescriptor,\n  getRequest = _require.getRequest,\n  getRequestIdentifier = _require.getRequestIdentifier;\nvar warning = require(\"fbjs/lib/warning\");\nvar RenderDispatcher = null;\nvar fetchKey = 100001;\nfunction useTrackLoadQueryInRender() {\n  if (RenderDispatcher === null) {\n    var _React$__SECRET_INTER, _React$__SECRET_INTER2;\n    RenderDispatcher = (_React$__SECRET_INTER = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React$__SECRET_INTER === void 0 ? void 0 : (_React$__SECRET_INTER2 = _React$__SECRET_INTER.ReactCurrentDispatcher) === null || _React$__SECRET_INTER2 === void 0 ? void 0 : _React$__SECRET_INTER2.current;\n  }\n}\nfunction loadQuery(environment, preloadableRequest, variables, options, environmentProviderOptions) {\n  var _React$__SECRET_INTER3, _React$__SECRET_INTER4, _options$__nameForWar, _options$fetchPolicy;\n  var CurrentDispatcher = (_React$__SECRET_INTER3 = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React$__SECRET_INTER3 === void 0 ? void 0 : (_React$__SECRET_INTER4 = _React$__SECRET_INTER3.ReactCurrentDispatcher) === null || _React$__SECRET_INTER4 === void 0 ? void 0 : _React$__SECRET_INTER4.current;\n  process.env.NODE_ENV !== \"production\" ? warning(RenderDispatcher == null || CurrentDispatcher !== RenderDispatcher, 'Relay: `%s` should not be called inside a React render function.', (_options$__nameForWar = options === null || options === void 0 ? void 0 : options.__nameForWarning) !== null && _options$__nameForWar !== void 0 ? _options$__nameForWar : 'loadQuery') : void 0;\n  fetchKey++;\n  var fetchPolicy = (_options$fetchPolicy = options === null || options === void 0 ? void 0 : options.fetchPolicy) !== null && _options$fetchPolicy !== void 0 ? _options$fetchPolicy : 'store-or-network';\n  var networkCacheConfig = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, options === null || options === void 0 ? void 0 : options.networkCacheConfig), {}, {\n    force: true\n  });\n  var retainReference;\n  var didExecuteNetworkSource = false;\n  var executeWithNetworkSource = function executeWithNetworkSource(operation, networkObservable) {\n    didExecuteNetworkSource = true;\n    return environment.executeWithSource({\n      operation: operation,\n      source: networkObservable\n    });\n  };\n  var executionSubject = new ReplaySubject();\n  var returnedObservable = Observable.create(function (sink) {\n    return executionSubject.subscribe(sink);\n  });\n  var unsubscribeFromNetworkRequest;\n  var networkError = null;\n  var didMakeNetworkRequest = false;\n  var makeNetworkRequest = function makeNetworkRequest(params) {\n    didMakeNetworkRequest = true;\n    var observable;\n    var subject = new ReplaySubject();\n    if (RelayFeatureFlags.ENABLE_LOAD_QUERY_REQUEST_DEDUPING === true) {\n      var identifier = 'raw-network-request-' + getRequestIdentifier(params, variables);\n      observable = fetchQueryDeduped(environment, identifier, function () {\n        var network = environment.getNetwork();\n        return network.execute(params, variables, networkCacheConfig);\n      });\n    } else {\n      var network = environment.getNetwork();\n      observable = network.execute(params, variables, networkCacheConfig);\n    }\n    var _observable$subscribe = observable.subscribe({\n        error: function error(err) {\n          networkError = err;\n          subject.error(err);\n        },\n        next: function next(data) {\n          subject.next(data);\n        },\n        complete: function complete() {\n          subject.complete();\n        }\n      }),\n      unsubscribe = _observable$subscribe.unsubscribe;\n    unsubscribeFromNetworkRequest = unsubscribe;\n    return Observable.create(function (sink) {\n      var subjectSubscription = subject.subscribe(sink);\n      return function () {\n        subjectSubscription.unsubscribe();\n        unsubscribeFromNetworkRequest();\n      };\n    });\n  };\n  var unsubscribeFromExecution;\n  var executeDeduped = function executeDeduped(operation, fetchFn) {\n    if (RelayFeatureFlags.ENABLE_LOAD_QUERY_REQUEST_DEDUPING === true) {\n      didMakeNetworkRequest = true;\n    }\n    var _fetchQueryDeduped$su = fetchQueryDeduped(environment, operation.request.identifier, fetchFn).subscribe({\n      error: function error(err) {\n        executionSubject.error(err);\n      },\n      next: function next(data) {\n        executionSubject.next(data);\n      },\n      complete: function complete() {\n        executionSubject.complete();\n      }\n    });\n    unsubscribeFromExecution = _fetchQueryDeduped$su.unsubscribe;\n  };\n  var checkAvailabilityAndExecute = function checkAvailabilityAndExecute(concreteRequest) {\n    var operation = createOperationDescriptor(concreteRequest, variables, networkCacheConfig);\n    retainReference = environment.retain(operation);\n    if (fetchPolicy === 'store-only') {\n      return;\n    }\n    var shouldFetch = fetchPolicy !== 'store-or-network' || environment.check(operation).status !== 'available';\n    if (shouldFetch) {\n      executeDeduped(operation, function () {\n        var networkObservable = makeNetworkRequest(concreteRequest.params);\n        var executeObservable = executeWithNetworkSource(operation, networkObservable);\n        return executeObservable;\n      });\n    }\n  };\n  var params;\n  var cancelOnLoadCallback;\n  var queryId;\n  if (preloadableRequest.kind === 'PreloadableConcreteRequest') {\n    var preloadableConcreteRequest = preloadableRequest;\n    params = preloadableConcreteRequest.params;\n    var _params = params;\n    queryId = _params.id;\n    !(queryId !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Relay: `loadQuery` requires that preloadable query `%s` has a persisted query id', params.name) : invariant(false) : void 0;\n    var _module = PreloadableQueryRegistry.get(queryId);\n    if (_module != null) {\n      checkAvailabilityAndExecute(_module);\n    } else {\n      var networkObservable = fetchPolicy === 'store-only' ? null : makeNetworkRequest(params);\n      var _PreloadableQueryRegi = PreloadableQueryRegistry.onLoad(queryId, function (preloadedModule) {\n        cancelOnLoadCallback();\n        var operation = createOperationDescriptor(preloadedModule, variables, networkCacheConfig);\n        retainReference = environment.retain(operation);\n        if (networkObservable != null) {\n          executeDeduped(operation, function () {\n            return executeWithNetworkSource(operation, networkObservable);\n          });\n        }\n      });\n      cancelOnLoadCallback = _PreloadableQueryRegi.dispose;\n    }\n  } else {\n    var graphQlTaggedNode = preloadableRequest;\n    var request = getRequest(graphQlTaggedNode);\n    params = request.params;\n    queryId = params.cacheID != null ? params.cacheID : params.id;\n    checkAvailabilityAndExecute(request);\n  }\n  var isDisposed = false;\n  var isReleased = false;\n  var isNetworkRequestCancelled = false;\n  var releaseQuery = function releaseQuery() {\n    if (isReleased) {\n      return;\n    }\n    retainReference && retainReference.dispose();\n    isReleased = true;\n  };\n  var cancelNetworkRequest = function cancelNetworkRequest() {\n    if (isNetworkRequestCancelled) {\n      return;\n    }\n    if (didExecuteNetworkSource) {\n      unsubscribeFromExecution && unsubscribeFromExecution();\n    } else {\n      unsubscribeFromNetworkRequest && unsubscribeFromNetworkRequest();\n    }\n    cancelOnLoadCallback && cancelOnLoadCallback();\n    isNetworkRequestCancelled = true;\n  };\n  return {\n    kind: 'PreloadedQuery',\n    environment: environment,\n    environmentProviderOptions: environmentProviderOptions,\n    dispose: function dispose() {\n      if (isDisposed) {\n        return;\n      }\n      releaseQuery();\n      cancelNetworkRequest();\n      isDisposed = true;\n    },\n    releaseQuery: releaseQuery,\n    cancelNetworkRequest: cancelNetworkRequest,\n    fetchKey: fetchKey,\n    id: queryId,\n    get isDisposed() {\n      return isDisposed || isReleased;\n    },\n    get networkError() {\n      return networkError;\n    },\n    name: params.name,\n    networkCacheConfig: networkCacheConfig,\n    fetchPolicy: fetchPolicy,\n    source: didMakeNetworkRequest ? returnedObservable : undefined,\n    variables: variables\n  };\n}\nmodule.exports = {\n  loadQuery: loadQuery,\n  useTrackLoadQueryInRender: useTrackLoadQueryInRender\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}