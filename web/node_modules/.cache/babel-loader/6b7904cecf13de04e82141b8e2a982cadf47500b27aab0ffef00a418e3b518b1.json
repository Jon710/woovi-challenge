{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _require = require('../util/RelayConcreteNode'),\n  ACTOR_CHANGE = _require.ACTOR_CHANGE,\n  CLIENT_COMPONENT = _require.CLIENT_COMPONENT,\n  CLIENT_EDGE_TO_CLIENT_OBJECT = _require.CLIENT_EDGE_TO_CLIENT_OBJECT,\n  CLIENT_EXTENSION = _require.CLIENT_EXTENSION,\n  CONDITION = _require.CONDITION,\n  DEFER = _require.DEFER,\n  FRAGMENT_SPREAD = _require.FRAGMENT_SPREAD,\n  INLINE_FRAGMENT = _require.INLINE_FRAGMENT,\n  LINKED_FIELD = _require.LINKED_FIELD,\n  LINKED_HANDLE = _require.LINKED_HANDLE,\n  MODULE_IMPORT = _require.MODULE_IMPORT,\n  RELAY_LIVE_RESOLVER = _require.RELAY_LIVE_RESOLVER,\n  RELAY_RESOLVER = _require.RELAY_RESOLVER,\n  SCALAR_FIELD = _require.SCALAR_FIELD,\n  SCALAR_HANDLE = _require.SCALAR_HANDLE,\n  STREAM = _require.STREAM,\n  TYPE_DISCRIMINATOR = _require.TYPE_DISCRIMINATOR;\nvar warning = require(\"fbjs/lib/warning\");\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar validateMutation = function validateMutation() {};\nif (process.env.NODE_ENV !== \"production\") {\n  var addFieldToDiff = function addFieldToDiff(path, diff, isScalar) {\n    var deepLoc = diff;\n    path.split('.').forEach(function (key, index, arr) {\n      if (deepLoc[key] == null) {\n        deepLoc[key] = {};\n      }\n      if (isScalar && index === arr.length - 1) {\n        deepLoc[key] = '<scalar>';\n      }\n      deepLoc = deepLoc[key];\n    });\n  };\n  validateMutation = function validateMutation(optimisticResponse, mutation, variables) {\n    var operationName = mutation.operation.name;\n    var context = {\n      path: 'ROOT',\n      visitedPaths: new Set(),\n      variables: variables || {},\n      missingDiff: {},\n      extraDiff: {},\n      moduleImportPaths: new Set()\n    };\n    validateSelections(optimisticResponse, mutation.operation.selections, context);\n    validateOptimisticResponse(optimisticResponse, context);\n    process.env.NODE_ENV !== \"production\" ? warning(context.missingDiff.ROOT == null, 'Expected `optimisticResponse` to match structure of server response for mutation `%s`, please define fields for all of\\n%s', operationName, JSON.stringify(context.missingDiff.ROOT, null, 2)) : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(context.extraDiff.ROOT == null, 'Expected `optimisticResponse` to match structure of server response for mutation `%s`, please remove all fields of\\n%s', operationName, JSON.stringify(context.extraDiff.ROOT, null, 2)) : void 0;\n  };\n  var validateSelections = function validateSelections(optimisticResponse, selections, context) {\n    selections.forEach(function (selection) {\n      return validateSelection(optimisticResponse, selection, context);\n    });\n  };\n  var validateSelection = function validateSelection(optimisticResponse, selection, context) {\n    switch (selection.kind) {\n      case CONDITION:\n        validateSelections(optimisticResponse, selection.selections, context);\n        return;\n      case CLIENT_COMPONENT:\n      case FRAGMENT_SPREAD:\n        validateSelections(optimisticResponse, selection.fragment.selections, context);\n        return;\n      case SCALAR_FIELD:\n      case LINKED_FIELD:\n        return validateField(optimisticResponse, selection, context);\n      case ACTOR_CHANGE:\n        return validateField(optimisticResponse, selection.linkedField, context);\n      case INLINE_FRAGMENT:\n        var type = selection.type;\n        var isConcreteType = selection.abstractKey == null;\n        validateAbstractKey(context, selection.abstractKey);\n        selection.selections.forEach(function (subselection) {\n          if (isConcreteType && optimisticResponse.__typename !== type) {\n            return;\n          }\n          validateSelection(optimisticResponse, subselection, context);\n        });\n        return;\n      case CLIENT_EXTENSION:\n        selection.selections.forEach(function (subselection) {\n          validateSelection(optimisticResponse, subselection, context);\n        });\n        return;\n      case MODULE_IMPORT:\n        return validateModuleImport(context);\n      case TYPE_DISCRIMINATOR:\n        return validateAbstractKey(context, selection.abstractKey);\n      case RELAY_RESOLVER:\n      case RELAY_LIVE_RESOLVER:\n      case CLIENT_EDGE_TO_CLIENT_OBJECT:\n      case LINKED_HANDLE:\n      case SCALAR_HANDLE:\n      case DEFER:\n      case STREAM:\n        {\n          return;\n        }\n      default:\n        selection;\n        return;\n    }\n  };\n  var validateModuleImport = function validateModuleImport(context) {\n    context.moduleImportPaths.add(context.path);\n  };\n  var validateAbstractKey = function validateAbstractKey(context, abstractKey) {\n    if (abstractKey != null) {\n      var path = \"\".concat(context.path, \".\").concat(abstractKey);\n      context.visitedPaths.add(path);\n    }\n  };\n  var validateField = function validateField(optimisticResponse, field, context) {\n    var fieldName = field.alias || field.name;\n    var path = \"\".concat(context.path, \".\").concat(fieldName);\n    context.visitedPaths.add(path);\n    switch (field.kind) {\n      case SCALAR_FIELD:\n        if (hasOwnProperty.call(optimisticResponse, fieldName) === false) {\n          addFieldToDiff(path, context.missingDiff, true);\n        }\n        return;\n      case LINKED_FIELD:\n        var selections = field.selections;\n        if (optimisticResponse[fieldName] === null || hasOwnProperty.call(optimisticResponse, fieldName) && optimisticResponse[fieldName] === undefined) {\n          return;\n        }\n        if (field.plural) {\n          if (Array.isArray(optimisticResponse[fieldName])) {\n            optimisticResponse[fieldName].forEach(function (r) {\n              if (r !== null) {\n                validateSelections(r, selections, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, context), {}, {\n                  path: path\n                }));\n              }\n            });\n            return;\n          } else {\n            addFieldToDiff(path, context.missingDiff);\n            return;\n          }\n        } else {\n          if (optimisticResponse[fieldName] instanceof Object) {\n            validateSelections(optimisticResponse[fieldName], selections, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, context), {}, {\n              path: path\n            }));\n            return;\n          } else {\n            addFieldToDiff(path, context.missingDiff);\n            return;\n          }\n        }\n    }\n  };\n  var validateOptimisticResponse = function validateOptimisticResponse(optimisticResponse, context) {\n    if (Array.isArray(optimisticResponse)) {\n      optimisticResponse.forEach(function (r) {\n        if (r instanceof Object) {\n          validateOptimisticResponse(r, context);\n        }\n      });\n      return;\n    }\n    Object.keys(optimisticResponse).forEach(function (key) {\n      var value = optimisticResponse[key];\n      var path = \"\".concat(context.path, \".\").concat(key);\n      if (context.moduleImportPaths.has(path)) {\n        return;\n      }\n      if (!context.visitedPaths.has(path)) {\n        addFieldToDiff(path, context.extraDiff);\n        return;\n      }\n      if (value instanceof Object) {\n        validateOptimisticResponse(value, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, context), {}, {\n          path: path\n        }));\n      }\n    });\n  };\n}\nmodule.exports = validateMutation;","map":{"version":3,"names":["_interopRequireDefault","require","_objectSpread2","_require","ACTOR_CHANGE","CLIENT_COMPONENT","CLIENT_EDGE_TO_CLIENT_OBJECT","CLIENT_EXTENSION","CONDITION","DEFER","FRAGMENT_SPREAD","INLINE_FRAGMENT","LINKED_FIELD","LINKED_HANDLE","MODULE_IMPORT","RELAY_LIVE_RESOLVER","RELAY_RESOLVER","SCALAR_FIELD","SCALAR_HANDLE","STREAM","TYPE_DISCRIMINATOR","warning","hasOwnProperty","Object","prototype","validateMutation","process","env","NODE_ENV","addFieldToDiff","path","diff","isScalar","deepLoc","split","forEach","key","index","arr","length","optimisticResponse","mutation","variables","operationName","operation","name","context","visitedPaths","Set","missingDiff","extraDiff","moduleImportPaths","validateSelections","selections","validateOptimisticResponse","ROOT","JSON","stringify","selection","validateSelection","kind","fragment","validateField","linkedField","type","isConcreteType","abstractKey","validateAbstractKey","subselection","__typename","validateModuleImport","add","concat","field","fieldName","alias","call","undefined","plural","Array","isArray","r","keys","value","has","module","exports"],"sources":["/Users/joaoluismoraes/Desktop/woovi-challenge/web/node_modules/relay-runtime/lib/mutations/validateMutation.js"],"sourcesContent":["'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar _require = require('../util/RelayConcreteNode'),\n  ACTOR_CHANGE = _require.ACTOR_CHANGE,\n  CLIENT_COMPONENT = _require.CLIENT_COMPONENT,\n  CLIENT_EDGE_TO_CLIENT_OBJECT = _require.CLIENT_EDGE_TO_CLIENT_OBJECT,\n  CLIENT_EXTENSION = _require.CLIENT_EXTENSION,\n  CONDITION = _require.CONDITION,\n  DEFER = _require.DEFER,\n  FRAGMENT_SPREAD = _require.FRAGMENT_SPREAD,\n  INLINE_FRAGMENT = _require.INLINE_FRAGMENT,\n  LINKED_FIELD = _require.LINKED_FIELD,\n  LINKED_HANDLE = _require.LINKED_HANDLE,\n  MODULE_IMPORT = _require.MODULE_IMPORT,\n  RELAY_LIVE_RESOLVER = _require.RELAY_LIVE_RESOLVER,\n  RELAY_RESOLVER = _require.RELAY_RESOLVER,\n  SCALAR_FIELD = _require.SCALAR_FIELD,\n  SCALAR_HANDLE = _require.SCALAR_HANDLE,\n  STREAM = _require.STREAM,\n  TYPE_DISCRIMINATOR = _require.TYPE_DISCRIMINATOR;\nvar warning = require(\"fbjs/lib/warning\");\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar validateMutation = function validateMutation() {};\nif (process.env.NODE_ENV !== \"production\") {\n  var addFieldToDiff = function addFieldToDiff(path, diff, isScalar) {\n    var deepLoc = diff;\n    path.split('.').forEach(function (key, index, arr) {\n      if (deepLoc[key] == null) {\n        deepLoc[key] = {};\n      }\n      if (isScalar && index === arr.length - 1) {\n        deepLoc[key] = '<scalar>';\n      }\n      deepLoc = deepLoc[key];\n    });\n  };\n  validateMutation = function validateMutation(optimisticResponse, mutation, variables) {\n    var operationName = mutation.operation.name;\n    var context = {\n      path: 'ROOT',\n      visitedPaths: new Set(),\n      variables: variables || {},\n      missingDiff: {},\n      extraDiff: {},\n      moduleImportPaths: new Set()\n    };\n    validateSelections(optimisticResponse, mutation.operation.selections, context);\n    validateOptimisticResponse(optimisticResponse, context);\n    process.env.NODE_ENV !== \"production\" ? warning(context.missingDiff.ROOT == null, 'Expected `optimisticResponse` to match structure of server response for mutation `%s`, please define fields for all of\\n%s', operationName, JSON.stringify(context.missingDiff.ROOT, null, 2)) : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(context.extraDiff.ROOT == null, 'Expected `optimisticResponse` to match structure of server response for mutation `%s`, please remove all fields of\\n%s', operationName, JSON.stringify(context.extraDiff.ROOT, null, 2)) : void 0;\n  };\n  var validateSelections = function validateSelections(optimisticResponse, selections, context) {\n    selections.forEach(function (selection) {\n      return validateSelection(optimisticResponse, selection, context);\n    });\n  };\n  var validateSelection = function validateSelection(optimisticResponse, selection, context) {\n    switch (selection.kind) {\n      case CONDITION:\n        validateSelections(optimisticResponse, selection.selections, context);\n        return;\n      case CLIENT_COMPONENT:\n      case FRAGMENT_SPREAD:\n        validateSelections(optimisticResponse, selection.fragment.selections, context);\n        return;\n      case SCALAR_FIELD:\n      case LINKED_FIELD:\n        return validateField(optimisticResponse, selection, context);\n      case ACTOR_CHANGE:\n        return validateField(optimisticResponse, selection.linkedField, context);\n      case INLINE_FRAGMENT:\n        var type = selection.type;\n        var isConcreteType = selection.abstractKey == null;\n        validateAbstractKey(context, selection.abstractKey);\n        selection.selections.forEach(function (subselection) {\n          if (isConcreteType && optimisticResponse.__typename !== type) {\n            return;\n          }\n          validateSelection(optimisticResponse, subselection, context);\n        });\n        return;\n      case CLIENT_EXTENSION:\n        selection.selections.forEach(function (subselection) {\n          validateSelection(optimisticResponse, subselection, context);\n        });\n        return;\n      case MODULE_IMPORT:\n        return validateModuleImport(context);\n      case TYPE_DISCRIMINATOR:\n        return validateAbstractKey(context, selection.abstractKey);\n      case RELAY_RESOLVER:\n      case RELAY_LIVE_RESOLVER:\n      case CLIENT_EDGE_TO_CLIENT_OBJECT:\n      case LINKED_HANDLE:\n      case SCALAR_HANDLE:\n      case DEFER:\n      case STREAM:\n        {\n          return;\n        }\n      default:\n        selection;\n        return;\n    }\n  };\n  var validateModuleImport = function validateModuleImport(context) {\n    context.moduleImportPaths.add(context.path);\n  };\n  var validateAbstractKey = function validateAbstractKey(context, abstractKey) {\n    if (abstractKey != null) {\n      var path = \"\".concat(context.path, \".\").concat(abstractKey);\n      context.visitedPaths.add(path);\n    }\n  };\n  var validateField = function validateField(optimisticResponse, field, context) {\n    var fieldName = field.alias || field.name;\n    var path = \"\".concat(context.path, \".\").concat(fieldName);\n    context.visitedPaths.add(path);\n    switch (field.kind) {\n      case SCALAR_FIELD:\n        if (hasOwnProperty.call(optimisticResponse, fieldName) === false) {\n          addFieldToDiff(path, context.missingDiff, true);\n        }\n        return;\n      case LINKED_FIELD:\n        var selections = field.selections;\n        if (optimisticResponse[fieldName] === null || hasOwnProperty.call(optimisticResponse, fieldName) && optimisticResponse[fieldName] === undefined) {\n          return;\n        }\n        if (field.plural) {\n          if (Array.isArray(optimisticResponse[fieldName])) {\n            optimisticResponse[fieldName].forEach(function (r) {\n              if (r !== null) {\n                validateSelections(r, selections, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, context), {}, {\n                  path: path\n                }));\n              }\n            });\n            return;\n          } else {\n            addFieldToDiff(path, context.missingDiff);\n            return;\n          }\n        } else {\n          if (optimisticResponse[fieldName] instanceof Object) {\n            validateSelections(optimisticResponse[fieldName], selections, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, context), {}, {\n              path: path\n            }));\n            return;\n          } else {\n            addFieldToDiff(path, context.missingDiff);\n            return;\n          }\n        }\n    }\n  };\n  var validateOptimisticResponse = function validateOptimisticResponse(optimisticResponse, context) {\n    if (Array.isArray(optimisticResponse)) {\n      optimisticResponse.forEach(function (r) {\n        if (r instanceof Object) {\n          validateOptimisticResponse(r, context);\n        }\n      });\n      return;\n    }\n    Object.keys(optimisticResponse).forEach(function (key) {\n      var value = optimisticResponse[key];\n      var path = \"\".concat(context.path, \".\").concat(key);\n      if (context.moduleImportPaths.has(path)) {\n        return;\n      }\n      if (!context.visitedPaths.has(path)) {\n        addFieldToDiff(path, context.extraDiff);\n        return;\n      }\n      if (value instanceof Object) {\n        validateOptimisticResponse(value, (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, context), {}, {\n          path: path\n        }));\n      }\n    });\n  };\n}\nmodule.exports = validateMutation;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}