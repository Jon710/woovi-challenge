{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar RelayObservable = require('../network/RelayObservable');\nvar generateID = require('../util/generateID');\nvar getOperation = require('../util/getOperation');\nvar RelayError = require('../util/RelayError');\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar stableCopy = require('../util/stableCopy');\nvar withDuration = require('../util/withDuration');\nvar _require = require('./ClientID'),\n  generateClientID = _require.generateClientID,\n  generateUniqueClientID = _require.generateUniqueClientID;\nvar _require2 = require('./RelayConcreteVariables'),\n  getLocalVariables = _require2.getLocalVariables;\nvar RelayModernRecord = require('./RelayModernRecord');\nvar _require3 = require('./RelayModernSelector'),\n  createNormalizationSelector = _require3.createNormalizationSelector,\n  createReaderSelector = _require3.createReaderSelector;\nvar RelayRecordSource = require('./RelayRecordSource');\nvar _require4 = require('./RelayStoreUtils'),\n  ROOT_TYPE = _require4.ROOT_TYPE,\n  TYPENAME_KEY = _require4.TYPENAME_KEY,\n  getStorageKey = _require4.getStorageKey;\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\nfunction execute(config) {\n  return new Executor(config);\n}\nvar Executor = /*#__PURE__*/function () {\n  function Executor(_ref2) {\n    var _this = this;\n    var actorIdentifier = _ref2.actorIdentifier,\n      getDataID = _ref2.getDataID,\n      getPublishQueue = _ref2.getPublishQueue,\n      getStore = _ref2.getStore,\n      isClientPayload = _ref2.isClientPayload,\n      operation = _ref2.operation,\n      operationExecutions = _ref2.operationExecutions,\n      operationLoader = _ref2.operationLoader,\n      operationTracker = _ref2.operationTracker,\n      optimisticConfig = _ref2.optimisticConfig,\n      scheduler = _ref2.scheduler,\n      shouldProcessClientComponents = _ref2.shouldProcessClientComponents,\n      sink = _ref2.sink,\n      source = _ref2.source,\n      treatMissingFieldsAsNull = _ref2.treatMissingFieldsAsNull,\n      updater = _ref2.updater,\n      log = _ref2.log,\n      normalizeResponse = _ref2.normalizeResponse;\n    this._actorIdentifier = actorIdentifier;\n    this._getDataID = getDataID;\n    this._treatMissingFieldsAsNull = treatMissingFieldsAsNull;\n    this._incrementalPayloadsPending = false;\n    this._incrementalResults = new Map();\n    this._log = log;\n    this._executeId = generateID();\n    this._nextSubscriptionId = 0;\n    this._operation = operation;\n    this._operationExecutions = operationExecutions;\n    this._operationLoader = operationLoader;\n    this._operationTracker = operationTracker;\n    this._operationUpdateEpochs = new Map();\n    this._optimisticUpdates = null;\n    this._pendingModulePayloadsCount = 0;\n    this._getPublishQueue = getPublishQueue;\n    this._scheduler = scheduler;\n    this._sink = sink;\n    this._source = new Map();\n    this._state = 'started';\n    this._getStore = getStore;\n    this._subscriptions = new Map();\n    this._updater = updater;\n    this._isClientPayload = isClientPayload === true;\n    this._isSubscriptionOperation = this._operation.request.node.params.operationKind === 'subscription';\n    this._shouldProcessClientComponents = shouldProcessClientComponents;\n    this._retainDisposables = new Map();\n    this._seenActors = new Set();\n    this._completeFns = [];\n    this._normalizeResponse = normalizeResponse;\n    var id = this._nextSubscriptionId++;\n    source.subscribe({\n      complete: function complete() {\n        return _this._complete(id);\n      },\n      error: function error(_error2) {\n        return _this._error(_error2);\n      },\n      next: function next(response) {\n        try {\n          _this._next(id, response);\n        } catch (error) {\n          sink.error(error);\n        }\n      },\n      start: function start(subscription) {\n        var _this$_operation$requ;\n        _this._start(id, subscription);\n        _this._log({\n          name: 'execute.start',\n          executeId: _this._executeId,\n          params: _this._operation.request.node.params,\n          variables: _this._operation.request.variables,\n          cacheConfig: (_this$_operation$requ = _this._operation.request.cacheConfig) !== null && _this$_operation$requ !== void 0 ? _this$_operation$requ : {}\n        });\n      }\n    });\n    if (optimisticConfig != null) {\n      this._processOptimisticResponse(optimisticConfig.response != null ? {\n        data: optimisticConfig.response\n      } : null, optimisticConfig.updater, false);\n    }\n  }\n  var _proto = Executor.prototype;\n  _proto.cancel = function cancel() {\n    var _this2 = this;\n    if (this._state === 'completed') {\n      return;\n    }\n    this._state = 'completed';\n    this._operationExecutions[\"delete\"](this._operation.request.identifier);\n    if (this._subscriptions.size !== 0) {\n      this._subscriptions.forEach(function (sub) {\n        return sub.unsubscribe();\n      });\n      this._subscriptions.clear();\n    }\n    var optimisticUpdates = this._optimisticUpdates;\n    if (optimisticUpdates !== null) {\n      this._optimisticUpdates = null;\n      optimisticUpdates.forEach(function (update) {\n        return _this2._getPublishQueueAndSaveActor().revertUpdate(update);\n      });\n      this._runPublishQueue();\n    }\n    this._incrementalResults.clear();\n    if (this._asyncStoreUpdateDisposable != null) {\n      this._asyncStoreUpdateDisposable.dispose();\n      this._asyncStoreUpdateDisposable = null;\n    }\n    this._completeFns = [];\n    this._completeOperationTracker();\n    this._disposeRetainedData();\n  };\n  _proto._updateActiveState = function _updateActiveState() {\n    var activeState;\n    switch (this._state) {\n      case 'started':\n        {\n          activeState = 'active';\n          break;\n        }\n      case 'loading_incremental':\n        {\n          activeState = 'active';\n          break;\n        }\n      case 'completed':\n        {\n          activeState = 'inactive';\n          break;\n        }\n      case 'loading_final':\n        {\n          activeState = this._pendingModulePayloadsCount > 0 ? 'active' : 'inactive';\n          break;\n        }\n      default:\n        this._state;\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: invalid executor state.') : invariant(false) : void 0;\n    }\n    this._operationExecutions.set(this._operation.request.identifier, activeState);\n  };\n  _proto._schedule = function _schedule(task) {\n    var _this3 = this;\n    var scheduler = this._scheduler;\n    if (scheduler != null) {\n      var id = this._nextSubscriptionId++;\n      RelayObservable.create(function (sink) {\n        var cancellationToken = scheduler.schedule(function () {\n          try {\n            task();\n            sink.complete();\n          } catch (error) {\n            sink.error(error);\n          }\n        });\n        return function () {\n          return scheduler.cancel(cancellationToken);\n        };\n      }).subscribe({\n        complete: function complete() {\n          return _this3._complete(id);\n        },\n        error: function error(_error3) {\n          return _this3._error(_error3);\n        },\n        start: function start(subscription) {\n          return _this3._start(id, subscription);\n        }\n      });\n    } else {\n      task();\n    }\n  };\n  _proto._complete = function _complete(id) {\n    this._subscriptions[\"delete\"](id);\n    if (this._subscriptions.size === 0) {\n      this.cancel();\n      this._sink.complete();\n      this._log({\n        name: 'execute.complete',\n        executeId: this._executeId\n      });\n    }\n  };\n  _proto._error = function _error(error) {\n    this.cancel();\n    this._sink.error(error);\n    this._log({\n      name: 'execute.error',\n      executeId: this._executeId,\n      error: error\n    });\n  };\n  _proto._start = function _start(id, subscription) {\n    this._subscriptions.set(id, subscription);\n    this._updateActiveState();\n  };\n  _proto._next = function _next(_id, response) {\n    var _this4 = this;\n    this._schedule(function () {\n      var _withDuration = withDuration(function () {\n          _this4._handleNext(response);\n          _this4._maybeCompleteSubscriptionOperationTracking();\n        }),\n        duration = _withDuration[0];\n      _this4._log({\n        name: 'execute.next',\n        executeId: _this4._executeId,\n        response: response,\n        duration: duration\n      });\n    });\n  };\n  _proto._handleErrorResponse = function _handleErrorResponse(responses) {\n    var _this5 = this;\n    var results = [];\n    responses.forEach(function (response) {\n      if (response.data === null && response.extensions != null && !response.hasOwnProperty('errors')) {\n        return;\n      } else if (response.data == null) {\n        var errors = response.hasOwnProperty('errors') && response.errors != null ? response.errors : null;\n        var messages = errors ? errors.map(function (_ref3) {\n          var message = _ref3.message;\n          return message;\n        }).join('\\n') : '(No errors)';\n        var error = RelayError.create('RelayNetwork', 'No data returned for operation `' + _this5._operation.request.node.params.name + '`, got error(s):\\n' + messages + '\\n\\nSee the error `source` property for more information.');\n        error.source = {\n          errors: errors,\n          operation: _this5._operation.request.node,\n          variables: _this5._operation.request.variables\n        };\n        error.stack;\n        throw error;\n      } else {\n        var responseWithData = response;\n        results.push(responseWithData);\n      }\n    });\n    return results;\n  };\n  _proto._handleOptimisticResponses = function _handleOptimisticResponses(responses) {\n    var _response$extensions;\n    if (responses.length > 1) {\n      if (responses.some(function (responsePart) {\n        var _responsePart$extensi;\n        return ((_responsePart$extensi = responsePart.extensions) === null || _responsePart$extensi === void 0 ? void 0 : _responsePart$extensi.isOptimistic) === true;\n      })) {\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Optimistic responses cannot be batched.') : invariant(false) : void 0;\n      }\n      return false;\n    }\n    var response = responses[0];\n    var isOptimistic = ((_response$extensions = response.extensions) === null || _response$extensions === void 0 ? void 0 : _response$extensions.isOptimistic) === true;\n    if (isOptimistic && this._state !== 'started') {\n      !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: optimistic payload received after server payload.') : invariant(false) : void 0;\n    }\n    if (isOptimistic) {\n      this._processOptimisticResponse(response, null, this._treatMissingFieldsAsNull);\n      this._sink.next(response);\n      return true;\n    }\n    return false;\n  };\n  _proto._handleNext = function _handleNext(response) {\n    if (this._state === 'completed') {\n      return;\n    }\n    this._seenActors.clear();\n    var responses = Array.isArray(response) ? response : [response];\n    var responsesWithData = this._handleErrorResponse(responses);\n    if (responsesWithData.length === 0) {\n      var isFinal = responses.some(function (x) {\n        var _x$extensions;\n        return ((_x$extensions = x.extensions) === null || _x$extensions === void 0 ? void 0 : _x$extensions.is_final) === true;\n      });\n      if (isFinal) {\n        this._state = 'loading_final';\n        this._updateActiveState();\n        this._incrementalPayloadsPending = false;\n      }\n      this._sink.next(response);\n      return;\n    }\n    var isOptimistic = this._handleOptimisticResponses(responsesWithData);\n    if (isOptimistic) {\n      return;\n    }\n    var _partitionGraphQLResp = partitionGraphQLResponses(responsesWithData),\n      nonIncrementalResponses = _partitionGraphQLResp[0],\n      incrementalResponses = _partitionGraphQLResp[1];\n    var hasNonIncrementalResponses = nonIncrementalResponses.length > 0;\n    if (hasNonIncrementalResponses) {\n      if (this._isSubscriptionOperation) {\n        var nextID = generateUniqueClientID();\n        this._operation = {\n          request: this._operation.request,\n          fragment: createReaderSelector(this._operation.fragment.node, nextID, this._operation.fragment.variables, this._operation.fragment.owner),\n          root: createNormalizationSelector(this._operation.root.node, nextID, this._operation.root.variables)\n        };\n      }\n      var payloadFollowups = this._processResponses(nonIncrementalResponses);\n      this._processPayloadFollowups(payloadFollowups);\n    }\n    if (incrementalResponses.length > 0) {\n      var _payloadFollowups = this._processIncrementalResponses(incrementalResponses);\n      this._processPayloadFollowups(_payloadFollowups);\n    }\n    if (this._isSubscriptionOperation) {\n      if (responsesWithData[0].extensions == null) {\n        responsesWithData[0].extensions = {\n          __relay_subscription_root_id: this._operation.fragment.dataID\n        };\n      } else {\n        responsesWithData[0].extensions.__relay_subscription_root_id = this._operation.fragment.dataID;\n      }\n    }\n    var updatedOwners = this._runPublishQueue(hasNonIncrementalResponses ? this._operation : undefined);\n    if (hasNonIncrementalResponses) {\n      if (this._incrementalPayloadsPending) {\n        this._retainData();\n      }\n    }\n    this._updateOperationTracker(updatedOwners);\n    this._sink.next(response);\n  };\n  _proto._processOptimisticResponse = function _processOptimisticResponse(response, updater, treatMissingFieldsAsNull) {\n    var _this6 = this;\n    !(this._optimisticUpdates === null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: environment.execute: only support one optimistic response per ' + 'execute.') : invariant(false) : void 0;\n    if (response == null && updater == null) {\n      return;\n    }\n    var optimisticUpdates = [];\n    if (response) {\n      var payload = this._normalizeResponse(response, this._operation.root, ROOT_TYPE, {\n        actorIdentifier: this._actorIdentifier,\n        getDataID: this._getDataID,\n        path: [],\n        shouldProcessClientComponents: this._shouldProcessClientComponents,\n        treatMissingFieldsAsNull: treatMissingFieldsAsNull\n      });\n      validateOptimisticResponsePayload(payload);\n      optimisticUpdates.push({\n        operation: this._operation,\n        payload: payload,\n        updater: updater\n      });\n      this._processOptimisticFollowups(payload, optimisticUpdates);\n    } else if (updater) {\n      optimisticUpdates.push({\n        operation: this._operation,\n        payload: {\n          errors: null,\n          fieldPayloads: null,\n          incrementalPlaceholders: null,\n          followupPayloads: null,\n          source: RelayRecordSource.create(),\n          isFinal: false\n        },\n        updater: updater\n      });\n    }\n    this._optimisticUpdates = optimisticUpdates;\n    optimisticUpdates.forEach(function (update) {\n      return _this6._getPublishQueueAndSaveActor().applyUpdate(update);\n    });\n    var updatedOwners = this._runPublishQueue();\n    if (RelayFeatureFlags.ENABLE_OPERATION_TRACKER_OPTIMISTIC_UPDATES) {\n      this._updateOperationTracker(updatedOwners);\n    }\n  };\n  _proto._processOptimisticFollowups = function _processOptimisticFollowups(payload, optimisticUpdates) {\n    if (payload.followupPayloads && payload.followupPayloads.length) {\n      var followupPayloads = payload.followupPayloads;\n      var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(followupPayloads),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var followupPayload = _step.value;\n          switch (followupPayload.kind) {\n            case 'ModuleImportPayload':\n              var operationLoader = this._expectOperationLoader();\n              var operation = operationLoader.get(followupPayload.operationReference);\n              if (operation == null) {\n                this._processAsyncOptimisticModuleImport(followupPayload);\n              } else {\n                var moduleImportOptimisticUpdates = this._processOptimisticModuleImport(operation, followupPayload);\n                optimisticUpdates.push.apply(optimisticUpdates, (0, _toConsumableArray2[\"default\"])(moduleImportOptimisticUpdates));\n              }\n              break;\n            case 'ActorPayload':\n              process.env.NODE_ENV !== \"production\" ? warning(false, 'OperationExecutor: Unexpected optimistic ActorPayload. These updates are not supported.') : void 0;\n              break;\n            default:\n              followupPayload;\n              !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Unexpected followup kind `%s`. when processing optimistic updates.', followupPayload.kind) : invariant(false) : void 0;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  };\n  _proto._normalizeFollowupPayload = function _normalizeFollowupPayload(followupPayload, normalizationNode) {\n    var variables;\n    if (normalizationNode.kind === 'SplitOperation' && followupPayload.kind === 'ModuleImportPayload') {\n      variables = getLocalVariables(followupPayload.variables, normalizationNode.argumentDefinitions, followupPayload.args);\n    } else {\n      variables = followupPayload.variables;\n    }\n    var selector = createNormalizationSelector(normalizationNode, followupPayload.dataID, variables);\n    return this._normalizeResponse({\n      data: followupPayload.data\n    }, selector, followupPayload.typeName, {\n      actorIdentifier: this._actorIdentifier,\n      getDataID: this._getDataID,\n      path: followupPayload.path,\n      treatMissingFieldsAsNull: this._treatMissingFieldsAsNull,\n      shouldProcessClientComponents: this._shouldProcessClientComponents\n    });\n  };\n  _proto._processOptimisticModuleImport = function _processOptimisticModuleImport(normalizationRootNode, moduleImportPayload) {\n    var operation = getOperation(normalizationRootNode);\n    var optimisticUpdates = [];\n    var modulePayload = this._normalizeFollowupPayload(moduleImportPayload, operation);\n    validateOptimisticResponsePayload(modulePayload);\n    optimisticUpdates.push({\n      operation: this._operation,\n      payload: modulePayload,\n      updater: null\n    });\n    this._processOptimisticFollowups(modulePayload, optimisticUpdates);\n    return optimisticUpdates;\n  };\n  _proto._processAsyncOptimisticModuleImport = function _processAsyncOptimisticModuleImport(moduleImportPayload) {\n    var _this7 = this;\n    this._expectOperationLoader().load(moduleImportPayload.operationReference).then(function (operation) {\n      if (operation == null || _this7._state !== 'started') {\n        return;\n      }\n      var moduleImportOptimisticUpdates = _this7._processOptimisticModuleImport(operation, moduleImportPayload);\n      moduleImportOptimisticUpdates.forEach(function (update) {\n        return _this7._getPublishQueueAndSaveActor().applyUpdate(update);\n      });\n      if (_this7._optimisticUpdates == null) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'OperationExecutor: Unexpected ModuleImport optimistic ' + 'update in operation %s.' + _this7._operation.request.node.params.name) : void 0;\n      } else {\n        var _this$_optimisticUpda;\n        (_this$_optimisticUpda = _this7._optimisticUpdates).push.apply(_this$_optimisticUpda, (0, _toConsumableArray2[\"default\"])(moduleImportOptimisticUpdates));\n        _this7._runPublishQueue();\n      }\n    });\n  };\n  _proto._processResponses = function _processResponses(responses) {\n    var _this8 = this;\n    if (this._optimisticUpdates !== null) {\n      this._optimisticUpdates.forEach(function (update) {\n        _this8._getPublishQueueAndSaveActor().revertUpdate(update);\n      });\n      this._optimisticUpdates = null;\n    }\n    this._incrementalPayloadsPending = false;\n    this._incrementalResults.clear();\n    this._source.clear();\n    return responses.map(function (payloadPart) {\n      var relayPayload = _this8._normalizeResponse(payloadPart, _this8._operation.root, ROOT_TYPE, {\n        actorIdentifier: _this8._actorIdentifier,\n        getDataID: _this8._getDataID,\n        path: [],\n        treatMissingFieldsAsNull: _this8._treatMissingFieldsAsNull,\n        shouldProcessClientComponents: _this8._shouldProcessClientComponents\n      });\n      _this8._getPublishQueueAndSaveActor().commitPayload(_this8._operation, relayPayload, _this8._updater);\n      return relayPayload;\n    });\n  };\n  _proto._processPayloadFollowups = function _processPayloadFollowups(payloads) {\n    var _this9 = this;\n    if (this._state === 'completed') {\n      return;\n    }\n    payloads.forEach(function (payload) {\n      var incrementalPlaceholders = payload.incrementalPlaceholders,\n        followupPayloads = payload.followupPayloads,\n        isFinal = payload.isFinal;\n      _this9._state = isFinal ? 'loading_final' : 'loading_incremental';\n      _this9._updateActiveState();\n      if (isFinal) {\n        _this9._incrementalPayloadsPending = false;\n      }\n      if (followupPayloads && followupPayloads.length !== 0) {\n        followupPayloads.forEach(function (followupPayload) {\n          var _followupPayload$acto;\n          var prevActorIdentifier = _this9._actorIdentifier;\n          _this9._actorIdentifier = (_followupPayload$acto = followupPayload.actorIdentifier) !== null && _followupPayload$acto !== void 0 ? _followupPayload$acto : _this9._actorIdentifier;\n          _this9._processFollowupPayload(followupPayload);\n          _this9._actorIdentifier = prevActorIdentifier;\n        });\n      }\n      if (incrementalPlaceholders && incrementalPlaceholders.length !== 0) {\n        _this9._incrementalPayloadsPending = _this9._state !== 'loading_final';\n        incrementalPlaceholders.forEach(function (incrementalPlaceholder) {\n          var _incrementalPlacehold;\n          var prevActorIdentifier = _this9._actorIdentifier;\n          _this9._actorIdentifier = (_incrementalPlacehold = incrementalPlaceholder.actorIdentifier) !== null && _incrementalPlacehold !== void 0 ? _incrementalPlacehold : _this9._actorIdentifier;\n          _this9._processIncrementalPlaceholder(payload, incrementalPlaceholder);\n          _this9._actorIdentifier = prevActorIdentifier;\n        });\n        if (_this9._isClientPayload || _this9._state === 'loading_final') {\n          process.env.NODE_ENV !== \"production\" ? warning(_this9._isClientPayload, 'RelayModernEnvironment: Operation `%s` contains @defer/@stream ' + 'directives but was executed in non-streaming mode. See ' + 'https://fburl.com/relay-incremental-delivery-non-streaming-warning.', _this9._operation.request.node.params.name) : void 0;\n          var relayPayloads = [];\n          incrementalPlaceholders.forEach(function (placeholder) {\n            if (placeholder.kind === 'defer') {\n              relayPayloads.push(_this9._processDeferResponse(placeholder.label, placeholder.path, placeholder, {\n                data: placeholder.data\n              }));\n            }\n          });\n          if (relayPayloads.length > 0) {\n            _this9._processPayloadFollowups(relayPayloads);\n          }\n        }\n      }\n    });\n  };\n  _proto._maybeCompleteSubscriptionOperationTracking = function _maybeCompleteSubscriptionOperationTracking() {\n    if (!this._isSubscriptionOperation) {\n      return;\n    }\n    if (this._pendingModulePayloadsCount === 0 && this._incrementalPayloadsPending === false) {\n      this._completeOperationTracker();\n    }\n  };\n  _proto._processFollowupPayload = function _processFollowupPayload(followupPayload) {\n    var _this10 = this;\n    switch (followupPayload.kind) {\n      case 'ModuleImportPayload':\n        var operationLoader = this._expectOperationLoader();\n        var node = operationLoader.get(followupPayload.operationReference);\n        if (node != null) {\n          this._processFollowupPayloadWithNormalizationNode(followupPayload, getOperation(node));\n        } else {\n          var id = this._nextSubscriptionId++;\n          this._pendingModulePayloadsCount++;\n          var decrementPendingCount = function decrementPendingCount() {\n            _this10._pendingModulePayloadsCount--;\n            _this10._maybeCompleteSubscriptionOperationTracking();\n          };\n          var networkObservable = RelayObservable.from(new Promise(function (resolve, reject) {\n            operationLoader.load(followupPayload.operationReference).then(resolve, reject);\n          }));\n          RelayObservable.create(function (sink) {\n            var cancellationToken;\n            var subscription = networkObservable.subscribe({\n              next: function next(loadedNode) {\n                if (loadedNode != null) {\n                  var publishModuleImportPayload = function publishModuleImportPayload() {\n                    try {\n                      var operation = getOperation(loadedNode);\n                      var batchAsyncModuleUpdatesFN = RelayFeatureFlags.BATCH_ASYNC_MODULE_UPDATES_FN;\n                      var shouldScheduleAsyncStoreUpdate = batchAsyncModuleUpdatesFN != null && _this10._pendingModulePayloadsCount > 1;\n                      var _withDuration2 = withDuration(function () {\n                          _this10._handleFollowupPayload(followupPayload, operation);\n                          if (shouldScheduleAsyncStoreUpdate) {\n                            _this10._scheduleAsyncStoreUpdate(batchAsyncModuleUpdatesFN, sink.complete);\n                          } else {\n                            var updatedOwners = _this10._runPublishQueue();\n                            _this10._updateOperationTracker(updatedOwners);\n                          }\n                        }),\n                        duration = _withDuration2[0];\n                      _this10._log({\n                        name: 'execute.async.module',\n                        executeId: _this10._executeId,\n                        operationName: operation.name,\n                        duration: duration\n                      });\n                      if (!shouldScheduleAsyncStoreUpdate) {\n                        sink.complete();\n                      }\n                    } catch (error) {\n                      sink.error(error);\n                    }\n                  };\n                  var scheduler = _this10._scheduler;\n                  if (scheduler == null) {\n                    publishModuleImportPayload();\n                  } else {\n                    cancellationToken = scheduler.schedule(publishModuleImportPayload);\n                  }\n                } else {\n                  sink.complete();\n                }\n              },\n              error: sink.error\n            });\n            return function () {\n              subscription.unsubscribe();\n              if (_this10._scheduler != null && cancellationToken != null) {\n                _this10._scheduler.cancel(cancellationToken);\n              }\n            };\n          }).subscribe({\n            complete: function complete() {\n              _this10._complete(id);\n              decrementPendingCount();\n            },\n            error: function error(_error4) {\n              _this10._error(_error4);\n              decrementPendingCount();\n            },\n            start: function start(subscription) {\n              return _this10._start(id, subscription);\n            }\n          });\n        }\n        break;\n      case 'ActorPayload':\n        this._processFollowupPayloadWithNormalizationNode(followupPayload, followupPayload.node);\n        break;\n      default:\n        followupPayload;\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Unexpected followup kind `%s`.', followupPayload.kind) : invariant(false) : void 0;\n    }\n  };\n  _proto._processFollowupPayloadWithNormalizationNode = function _processFollowupPayloadWithNormalizationNode(followupPayload, normalizationNode) {\n    this._handleFollowupPayload(followupPayload, normalizationNode);\n    this._maybeCompleteSubscriptionOperationTracking();\n  };\n  _proto._handleFollowupPayload = function _handleFollowupPayload(followupPayload, normalizationNode) {\n    var relayPayload = this._normalizeFollowupPayload(followupPayload, normalizationNode);\n    this._getPublishQueueAndSaveActor().commitPayload(this._operation, relayPayload);\n    this._processPayloadFollowups([relayPayload]);\n  };\n  _proto._processIncrementalPlaceholder = function _processIncrementalPlaceholder(relayPayload, placeholder) {\n    var _relayPayload$fieldPa;\n    var label = placeholder.label,\n      path = placeholder.path;\n    var pathKey = path.map(String).join('.');\n    var resultForLabel = this._incrementalResults.get(label);\n    if (resultForLabel == null) {\n      resultForLabel = new Map();\n      this._incrementalResults.set(label, resultForLabel);\n    }\n    var resultForPath = resultForLabel.get(pathKey);\n    var pendingResponses = resultForPath != null && resultForPath.kind === 'response' ? resultForPath.responses : null;\n    resultForLabel.set(pathKey, {\n      kind: 'placeholder',\n      placeholder: placeholder\n    });\n    var parentID;\n    if (placeholder.kind === 'stream') {\n      parentID = placeholder.parentID;\n    } else if (placeholder.kind === 'defer') {\n      parentID = placeholder.selector.dataID;\n    } else {\n      placeholder;\n      !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Unsupported incremental placeholder kind `%s`.', placeholder.kind) : invariant(false) : void 0;\n    }\n    var parentRecord = relayPayload.source.get(parentID);\n    var parentPayloads = ((_relayPayload$fieldPa = relayPayload.fieldPayloads) !== null && _relayPayload$fieldPa !== void 0 ? _relayPayload$fieldPa : []).filter(function (fieldPayload) {\n      var fieldID = generateClientID(fieldPayload.dataID, fieldPayload.fieldKey);\n      return fieldPayload.dataID === parentID || fieldID === parentID;\n    });\n    !(parentRecord != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected record `%s` to exist.', parentID) : invariant(false) : void 0;\n    var nextParentRecord;\n    var nextParentPayloads;\n    var previousParentEntry = this._source.get(parentID);\n    if (previousParentEntry != null) {\n      nextParentRecord = RelayModernRecord.update(previousParentEntry.record, parentRecord);\n      var handlePayloads = new Map();\n      var dedupePayload = function dedupePayload(payload) {\n        var key = stableStringify(payload);\n        handlePayloads.set(key, payload);\n      };\n      previousParentEntry.fieldPayloads.forEach(dedupePayload);\n      parentPayloads.forEach(dedupePayload);\n      nextParentPayloads = Array.from(handlePayloads.values());\n    } else {\n      nextParentRecord = parentRecord;\n      nextParentPayloads = parentPayloads;\n    }\n    this._source.set(parentID, {\n      record: nextParentRecord,\n      fieldPayloads: nextParentPayloads\n    });\n    if (pendingResponses != null) {\n      var payloadFollowups = this._processIncrementalResponses(pendingResponses);\n      this._processPayloadFollowups(payloadFollowups);\n    }\n  };\n  _proto._processIncrementalResponses = function _processIncrementalResponses(incrementalResponses) {\n    var _this11 = this;\n    var relayPayloads = [];\n    incrementalResponses.forEach(function (incrementalResponse) {\n      var label = incrementalResponse.label,\n        path = incrementalResponse.path,\n        response = incrementalResponse.response;\n      var resultForLabel = _this11._incrementalResults.get(label);\n      if (resultForLabel == null) {\n        resultForLabel = new Map();\n        _this11._incrementalResults.set(label, resultForLabel);\n      }\n      if (label.indexOf('$defer$') !== -1) {\n        var pathKey = path.map(String).join('.');\n        var resultForPath = resultForLabel.get(pathKey);\n        if (resultForPath == null) {\n          resultForPath = {\n            kind: 'response',\n            responses: [incrementalResponse]\n          };\n          resultForLabel.set(pathKey, resultForPath);\n          return;\n        } else if (resultForPath.kind === 'response') {\n          resultForPath.responses.push(incrementalResponse);\n          return;\n        }\n        var placeholder = resultForPath.placeholder;\n        !(placeholder.kind === 'defer') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected data for path `%s` for label `%s` ' + 'to be data for @defer, was `@%s`.', pathKey, label, placeholder.kind) : invariant(false) : void 0;\n        relayPayloads.push(_this11._processDeferResponse(label, path, placeholder, response));\n      } else {\n        var _pathKey = path.slice(0, -2).map(String).join('.');\n        var _resultForPath = resultForLabel.get(_pathKey);\n        if (_resultForPath == null) {\n          _resultForPath = {\n            kind: 'response',\n            responses: [incrementalResponse]\n          };\n          resultForLabel.set(_pathKey, _resultForPath);\n          return;\n        } else if (_resultForPath.kind === 'response') {\n          _resultForPath.responses.push(incrementalResponse);\n          return;\n        }\n        var _placeholder = _resultForPath.placeholder;\n        !(_placeholder.kind === 'stream') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected data for path `%s` for label `%s` ' + 'to be data for @stream, was `@%s`.', _pathKey, label, _placeholder.kind) : invariant(false) : void 0;\n        relayPayloads.push(_this11._processStreamResponse(label, path, _placeholder, response));\n      }\n    });\n    return relayPayloads;\n  };\n  _proto._processDeferResponse = function _processDeferResponse(label, path, placeholder, response) {\n    var _placeholder$actorIde;\n    var parentID = placeholder.selector.dataID;\n    var prevActorIdentifier = this._actorIdentifier;\n    this._actorIdentifier = (_placeholder$actorIde = placeholder.actorIdentifier) !== null && _placeholder$actorIde !== void 0 ? _placeholder$actorIde : this._actorIdentifier;\n    var relayPayload = this._normalizeResponse(response, placeholder.selector, placeholder.typeName, {\n      actorIdentifier: this._actorIdentifier,\n      getDataID: this._getDataID,\n      path: placeholder.path,\n      treatMissingFieldsAsNull: this._treatMissingFieldsAsNull,\n      shouldProcessClientComponents: this._shouldProcessClientComponents\n    });\n    this._getPublishQueueAndSaveActor().commitPayload(this._operation, relayPayload);\n    var parentEntry = this._source.get(parentID);\n    !(parentEntry != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected the parent record `%s` for @defer ' + 'data to exist.', parentID) : invariant(false) : void 0;\n    var fieldPayloads = parentEntry.fieldPayloads;\n    if (fieldPayloads.length !== 0) {\n      var _response$extensions2;\n      var handleFieldsRelayPayload = {\n        errors: null,\n        fieldPayloads: fieldPayloads,\n        incrementalPlaceholders: null,\n        followupPayloads: null,\n        source: RelayRecordSource.create(),\n        isFinal: ((_response$extensions2 = response.extensions) === null || _response$extensions2 === void 0 ? void 0 : _response$extensions2.is_final) === true\n      };\n      this._getPublishQueueAndSaveActor().commitPayload(this._operation, handleFieldsRelayPayload);\n    }\n    this._actorIdentifier = prevActorIdentifier;\n    return relayPayload;\n  };\n  _proto._processStreamResponse = function _processStreamResponse(label, path, placeholder, response) {\n    var parentID = placeholder.parentID,\n      node = placeholder.node,\n      variables = placeholder.variables,\n      actorIdentifier = placeholder.actorIdentifier;\n    var prevActorIdentifier = this._actorIdentifier;\n    this._actorIdentifier = actorIdentifier !== null && actorIdentifier !== void 0 ? actorIdentifier : this._actorIdentifier;\n    var field = node.selections[0];\n    !(field != null && field.kind === 'LinkedField' && field.plural === true) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected @stream to be used on a plural field.') : invariant(false) : void 0;\n    var _this$_normalizeStrea = this._normalizeStreamItem(response, parentID, field, variables, path, placeholder.path),\n      fieldPayloads = _this$_normalizeStrea.fieldPayloads,\n      itemID = _this$_normalizeStrea.itemID,\n      itemIndex = _this$_normalizeStrea.itemIndex,\n      prevIDs = _this$_normalizeStrea.prevIDs,\n      relayPayload = _this$_normalizeStrea.relayPayload,\n      storageKey = _this$_normalizeStrea.storageKey;\n    this._getPublishQueueAndSaveActor().commitPayload(this._operation, relayPayload, function (store) {\n      var currentParentRecord = store.get(parentID);\n      if (currentParentRecord == null) {\n        return;\n      }\n      var currentItems = currentParentRecord.getLinkedRecords(storageKey);\n      if (currentItems == null) {\n        return;\n      }\n      if (currentItems.length !== prevIDs.length || currentItems.some(function (currentItem, index) {\n        return prevIDs[index] !== (currentItem && currentItem.getDataID());\n      })) {\n        return;\n      }\n      var nextItems = (0, _toConsumableArray2[\"default\"])(currentItems);\n      nextItems[itemIndex] = store.get(itemID);\n      currentParentRecord.setLinkedRecords(nextItems, storageKey);\n    });\n    if (fieldPayloads.length !== 0) {\n      var handleFieldsRelayPayload = {\n        errors: null,\n        fieldPayloads: fieldPayloads,\n        incrementalPlaceholders: null,\n        followupPayloads: null,\n        source: RelayRecordSource.create(),\n        isFinal: false\n      };\n      this._getPublishQueueAndSaveActor().commitPayload(this._operation, handleFieldsRelayPayload);\n    }\n    this._actorIdentifier = prevActorIdentifier;\n    return relayPayload;\n  };\n  _proto._normalizeStreamItem = function _normalizeStreamItem(response, parentID, field, variables, path, normalizationPath) {\n    var _field$alias, _field$concreteType, _ref, _this$_getDataID;\n    var data = response.data;\n    !(typeof data === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected the GraphQL @stream payload `data` ' + 'value to be an object.') : invariant(false) : void 0;\n    var responseKey = (_field$alias = field.alias) !== null && _field$alias !== void 0 ? _field$alias : field.name;\n    var storageKey = getStorageKey(field, variables);\n    var parentEntry = this._source.get(parentID);\n    !(parentEntry != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected the parent record `%s` for @stream ' + 'data to exist.', parentID) : invariant(false) : void 0;\n    var parentRecord = parentEntry.record,\n      fieldPayloads = parentEntry.fieldPayloads;\n    var prevIDs = RelayModernRecord.getLinkedRecordIDs(parentRecord, storageKey);\n    !(prevIDs != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected record `%s` to have fetched field ' + '`%s` with @stream.', parentID, field.name) : invariant(false) : void 0;\n    var finalPathEntry = path[path.length - 1];\n    var itemIndex = parseInt(finalPathEntry, 10);\n    !(itemIndex === finalPathEntry && itemIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected path for @stream to end in a ' + 'positive integer index, got `%s`', finalPathEntry) : invariant(false) : void 0;\n    var typeName = (_field$concreteType = field.concreteType) !== null && _field$concreteType !== void 0 ? _field$concreteType : data[TYPENAME_KEY];\n    !(typeof typeName === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected @stream field `%s` to have a ' + '__typename.', field.name) : invariant(false) : void 0;\n    var itemID = (_ref = (_this$_getDataID = this._getDataID(data, typeName)) !== null && _this$_getDataID !== void 0 ? _this$_getDataID : prevIDs === null || prevIDs === void 0 ? void 0 : prevIDs[itemIndex]) !== null && _ref !== void 0 ? _ref : generateClientID(parentID, storageKey, itemIndex);\n    !(typeof itemID === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected id of elements of field `%s` to ' + 'be strings.', storageKey) : invariant(false) : void 0;\n    var selector = createNormalizationSelector(field, itemID, variables);\n    var nextParentRecord = RelayModernRecord.clone(parentRecord);\n    var nextIDs = (0, _toConsumableArray2[\"default\"])(prevIDs);\n    nextIDs[itemIndex] = itemID;\n    RelayModernRecord.setLinkedRecordIDs(nextParentRecord, storageKey, nextIDs);\n    this._source.set(parentID, {\n      record: nextParentRecord,\n      fieldPayloads: fieldPayloads\n    });\n    var relayPayload = this._normalizeResponse(response, selector, typeName, {\n      actorIdentifier: this._actorIdentifier,\n      getDataID: this._getDataID,\n      path: [].concat((0, _toConsumableArray2[\"default\"])(normalizationPath), [responseKey, String(itemIndex)]),\n      treatMissingFieldsAsNull: this._treatMissingFieldsAsNull,\n      shouldProcessClientComponents: this._shouldProcessClientComponents\n    });\n    return {\n      fieldPayloads: fieldPayloads,\n      itemID: itemID,\n      itemIndex: itemIndex,\n      prevIDs: prevIDs,\n      relayPayload: relayPayload,\n      storageKey: storageKey\n    };\n  };\n  _proto._scheduleAsyncStoreUpdate = function _scheduleAsyncStoreUpdate(scheduleFn, completeFn) {\n    var _this12 = this;\n    this._completeFns.push(completeFn);\n    if (this._asyncStoreUpdateDisposable != null) {\n      return;\n    }\n    this._asyncStoreUpdateDisposable = scheduleFn(function () {\n      _this12._asyncStoreUpdateDisposable = null;\n      var updatedOwners = _this12._runPublishQueue();\n      _this12._updateOperationTracker(updatedOwners);\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(_this12._completeFns),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var complete = _step2.value;\n          complete();\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      _this12._completeFns = [];\n    });\n  };\n  _proto._updateOperationTracker = function _updateOperationTracker(updatedOwners) {\n    if (updatedOwners != null && updatedOwners.length > 0) {\n      this._operationTracker.update(this._operation.request, new Set(updatedOwners));\n    }\n  };\n  _proto._completeOperationTracker = function _completeOperationTracker() {\n    this._operationTracker.complete(this._operation.request);\n  };\n  _proto._getPublishQueueAndSaveActor = function _getPublishQueueAndSaveActor() {\n    this._seenActors.add(this._actorIdentifier);\n    return this._getPublishQueue(this._actorIdentifier);\n  };\n  _proto._getActorsToVisit = function _getActorsToVisit() {\n    if (this._seenActors.size === 0) {\n      return new Set([this._actorIdentifier]);\n    } else {\n      return this._seenActors;\n    }\n  };\n  _proto._runPublishQueue = function _runPublishQueue(operation) {\n    var updatedOwners = new Set();\n    var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(this._getActorsToVisit()),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var actorIdentifier = _step3.value;\n        var owners = this._getPublishQueue(actorIdentifier).run(operation);\n        owners.forEach(function (owner) {\n          return updatedOwners.add(owner);\n        });\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    return Array.from(updatedOwners);\n  };\n  _proto._retainData = function _retainData() {\n    var _iterator4 = (0, _createForOfIteratorHelper2[\"default\"])(this._getActorsToVisit()),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var actorIdentifier = _step4.value;\n        if (!this._retainDisposables.has(actorIdentifier)) {\n          this._retainDisposables.set(actorIdentifier, this._getStore(actorIdentifier).retain(this._operation));\n        }\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  };\n  _proto._disposeRetainedData = function _disposeRetainedData() {\n    var _iterator5 = (0, _createForOfIteratorHelper2[\"default\"])(this._retainDisposables.values()),\n      _step5;\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var disposable = _step5.value;\n        disposable.dispose();\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n    this._retainDisposables.clear();\n  };\n  _proto._expectOperationLoader = function _expectOperationLoader() {\n    var operationLoader = this._operationLoader;\n    !operationLoader ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected an operationLoader to be ' + 'configured when using `@match`.') : invariant(false) : void 0;\n    return operationLoader;\n  };\n  return Executor;\n}();\nfunction partitionGraphQLResponses(responses) {\n  var nonIncrementalResponses = [];\n  var incrementalResponses = [];\n  responses.forEach(function (response) {\n    if (response.path != null || response.label != null) {\n      var label = response.label,\n        path = response.path;\n      if (label == null || path == null) {\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: invalid incremental payload, expected ' + '`path` and `label` to either both be null/undefined, or ' + '`path` to be an `Array<string | number>` and `label` to be a ' + '`string`.') : invariant(false) : void 0;\n      }\n      incrementalResponses.push({\n        label: label,\n        path: path,\n        response: response\n      });\n    } else {\n      nonIncrementalResponses.push(response);\n    }\n  });\n  return [nonIncrementalResponses, incrementalResponses];\n}\nfunction stableStringify(value) {\n  var _JSON$stringify;\n  return (_JSON$stringify = JSON.stringify(stableCopy(value))) !== null && _JSON$stringify !== void 0 ? _JSON$stringify : '';\n}\nfunction validateOptimisticResponsePayload(payload) {\n  var incrementalPlaceholders = payload.incrementalPlaceholders;\n  if (incrementalPlaceholders != null && incrementalPlaceholders.length !== 0) {\n    !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: optimistic responses cannot be returned ' + 'for operations that use incremental data delivery (@defer, ' + '@stream, and @stream_connection).') : invariant(false) : void 0;\n  }\n}\nmodule.exports = {\n  execute: execute\n};","map":{"version":3,"names":["_interopRequireDefault","require","_createForOfIteratorHelper2","_toConsumableArray2","RelayObservable","generateID","getOperation","RelayError","RelayFeatureFlags","stableCopy","withDuration","_require","generateClientID","generateUniqueClientID","_require2","getLocalVariables","RelayModernRecord","_require3","createNormalizationSelector","createReaderSelector","RelayRecordSource","_require4","ROOT_TYPE","TYPENAME_KEY","getStorageKey","invariant","warning","execute","config","Executor","_ref2","_this","actorIdentifier","getDataID","getPublishQueue","getStore","isClientPayload","operation","operationExecutions","operationLoader","operationTracker","optimisticConfig","scheduler","shouldProcessClientComponents","sink","source","treatMissingFieldsAsNull","updater","log","normalizeResponse","_actorIdentifier","_getDataID","_treatMissingFieldsAsNull","_incrementalPayloadsPending","_incrementalResults","Map","_log","_executeId","_nextSubscriptionId","_operation","_operationExecutions","_operationLoader","_operationTracker","_operationUpdateEpochs","_optimisticUpdates","_pendingModulePayloadsCount","_getPublishQueue","_scheduler","_sink","_source","_state","_getStore","_subscriptions","_updater","_isClientPayload","_isSubscriptionOperation","request","node","params","operationKind","_shouldProcessClientComponents","_retainDisposables","_seenActors","Set","_completeFns","_normalizeResponse","id","subscribe","complete","_complete","error","_error2","_error","next","response","_next","start","subscription","_this$_operation$requ","_start","name","executeId","variables","cacheConfig","_processOptimisticResponse","data","_proto","prototype","cancel","_this2","identifier","size","forEach","sub","unsubscribe","clear","optimisticUpdates","update","_getPublishQueueAndSaveActor","revertUpdate","_runPublishQueue","_asyncStoreUpdateDisposable","dispose","_completeOperationTracker","_disposeRetainedData","_updateActiveState","activeState","process","env","NODE_ENV","set","_schedule","task","_this3","create","cancellationToken","schedule","_error3","_id","_this4","_withDuration","_handleNext","_maybeCompleteSubscriptionOperationTracking","duration","_handleErrorResponse","responses","_this5","results","extensions","hasOwnProperty","errors","messages","map","_ref3","message","join","stack","responseWithData","push","_handleOptimisticResponses","_response$extensions","length","some","responsePart","_responsePart$extensi","isOptimistic","Array","isArray","responsesWithData","isFinal","x","_x$extensions","is_final","_partitionGraphQLResp","partitionGraphQLResponses","nonIncrementalResponses","incrementalResponses","hasNonIncrementalResponses","nextID","fragment","owner","root","payloadFollowups","_processResponses","_processPayloadFollowups","_payloadFollowups","_processIncrementalResponses","__relay_subscription_root_id","dataID","updatedOwners","undefined","_retainData","_updateOperationTracker","_this6","payload","path","validateOptimisticResponsePayload","_processOptimisticFollowups","fieldPayloads","incrementalPlaceholders","followupPayloads","applyUpdate","ENABLE_OPERATION_TRACKER_OPTIMISTIC_UPDATES","_iterator","_step","s","n","done","followupPayload","value","kind","_expectOperationLoader","get","operationReference","_processAsyncOptimisticModuleImport","moduleImportOptimisticUpdates","_processOptimisticModuleImport","apply","err","e","f","_normalizeFollowupPayload","normalizationNode","argumentDefinitions","args","selector","typeName","normalizationRootNode","moduleImportPayload","modulePayload","_this7","load","then","_this$_optimisticUpda","_this8","payloadPart","relayPayload","commitPayload","payloads","_this9","_followupPayload$acto","prevActorIdentifier","_processFollowupPayload","incrementalPlaceholder","_incrementalPlacehold","_processIncrementalPlaceholder","relayPayloads","placeholder","_processDeferResponse","label","_this10","_processFollowupPayloadWithNormalizationNode","decrementPendingCount","networkObservable","from","Promise","resolve","reject","loadedNode","publishModuleImportPayload","batchAsyncModuleUpdatesFN","BATCH_ASYNC_MODULE_UPDATES_FN","shouldScheduleAsyncStoreUpdate","_withDuration2","_handleFollowupPayload","_scheduleAsyncStoreUpdate","operationName","_error4","_relayPayload$fieldPa","pathKey","String","resultForLabel","resultForPath","pendingResponses","parentID","parentRecord","parentPayloads","filter","fieldPayload","fieldID","fieldKey","nextParentRecord","nextParentPayloads","previousParentEntry","record","handlePayloads","dedupePayload","key","stableStringify","values","_this11","incrementalResponse","indexOf","_pathKey","slice","_resultForPath","_placeholder","_processStreamResponse","_placeholder$actorIde","parentEntry","_response$extensions2","handleFieldsRelayPayload","field","selections","plural","_this$_normalizeStrea","_normalizeStreamItem","itemID","itemIndex","prevIDs","storageKey","store","currentParentRecord","currentItems","getLinkedRecords","currentItem","index","nextItems","setLinkedRecords","normalizationPath","_field$alias","_field$concreteType","_ref","_this$_getDataID","responseKey","alias","getLinkedRecordIDs","finalPathEntry","parseInt","concreteType","clone","nextIDs","setLinkedRecordIDs","concat","scheduleFn","completeFn","_this12","_iterator2","_step2","add","_getActorsToVisit","_iterator3","_step3","owners","run","_iterator4","_step4","has","retain","_iterator5","_step5","disposable","_JSON$stringify","JSON","stringify","module","exports"],"sources":["/Users/joaoluismoraes/Desktop/woovi-challenge/web/node_modules/relay-runtime/lib/store/OperationExecutor.js"],"sourcesContent":["'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar RelayObservable = require('../network/RelayObservable');\nvar generateID = require('../util/generateID');\nvar getOperation = require('../util/getOperation');\nvar RelayError = require('../util/RelayError');\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar stableCopy = require('../util/stableCopy');\nvar withDuration = require('../util/withDuration');\nvar _require = require('./ClientID'),\n  generateClientID = _require.generateClientID,\n  generateUniqueClientID = _require.generateUniqueClientID;\nvar _require2 = require('./RelayConcreteVariables'),\n  getLocalVariables = _require2.getLocalVariables;\nvar RelayModernRecord = require('./RelayModernRecord');\nvar _require3 = require('./RelayModernSelector'),\n  createNormalizationSelector = _require3.createNormalizationSelector,\n  createReaderSelector = _require3.createReaderSelector;\nvar RelayRecordSource = require('./RelayRecordSource');\nvar _require4 = require('./RelayStoreUtils'),\n  ROOT_TYPE = _require4.ROOT_TYPE,\n  TYPENAME_KEY = _require4.TYPENAME_KEY,\n  getStorageKey = _require4.getStorageKey;\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\nfunction execute(config) {\n  return new Executor(config);\n}\nvar Executor = /*#__PURE__*/function () {\n  function Executor(_ref2) {\n    var _this = this;\n    var actorIdentifier = _ref2.actorIdentifier,\n      getDataID = _ref2.getDataID,\n      getPublishQueue = _ref2.getPublishQueue,\n      getStore = _ref2.getStore,\n      isClientPayload = _ref2.isClientPayload,\n      operation = _ref2.operation,\n      operationExecutions = _ref2.operationExecutions,\n      operationLoader = _ref2.operationLoader,\n      operationTracker = _ref2.operationTracker,\n      optimisticConfig = _ref2.optimisticConfig,\n      scheduler = _ref2.scheduler,\n      shouldProcessClientComponents = _ref2.shouldProcessClientComponents,\n      sink = _ref2.sink,\n      source = _ref2.source,\n      treatMissingFieldsAsNull = _ref2.treatMissingFieldsAsNull,\n      updater = _ref2.updater,\n      log = _ref2.log,\n      normalizeResponse = _ref2.normalizeResponse;\n    this._actorIdentifier = actorIdentifier;\n    this._getDataID = getDataID;\n    this._treatMissingFieldsAsNull = treatMissingFieldsAsNull;\n    this._incrementalPayloadsPending = false;\n    this._incrementalResults = new Map();\n    this._log = log;\n    this._executeId = generateID();\n    this._nextSubscriptionId = 0;\n    this._operation = operation;\n    this._operationExecutions = operationExecutions;\n    this._operationLoader = operationLoader;\n    this._operationTracker = operationTracker;\n    this._operationUpdateEpochs = new Map();\n    this._optimisticUpdates = null;\n    this._pendingModulePayloadsCount = 0;\n    this._getPublishQueue = getPublishQueue;\n    this._scheduler = scheduler;\n    this._sink = sink;\n    this._source = new Map();\n    this._state = 'started';\n    this._getStore = getStore;\n    this._subscriptions = new Map();\n    this._updater = updater;\n    this._isClientPayload = isClientPayload === true;\n    this._isSubscriptionOperation = this._operation.request.node.params.operationKind === 'subscription';\n    this._shouldProcessClientComponents = shouldProcessClientComponents;\n    this._retainDisposables = new Map();\n    this._seenActors = new Set();\n    this._completeFns = [];\n    this._normalizeResponse = normalizeResponse;\n    var id = this._nextSubscriptionId++;\n    source.subscribe({\n      complete: function complete() {\n        return _this._complete(id);\n      },\n      error: function error(_error2) {\n        return _this._error(_error2);\n      },\n      next: function next(response) {\n        try {\n          _this._next(id, response);\n        } catch (error) {\n          sink.error(error);\n        }\n      },\n      start: function start(subscription) {\n        var _this$_operation$requ;\n        _this._start(id, subscription);\n        _this._log({\n          name: 'execute.start',\n          executeId: _this._executeId,\n          params: _this._operation.request.node.params,\n          variables: _this._operation.request.variables,\n          cacheConfig: (_this$_operation$requ = _this._operation.request.cacheConfig) !== null && _this$_operation$requ !== void 0 ? _this$_operation$requ : {}\n        });\n      }\n    });\n    if (optimisticConfig != null) {\n      this._processOptimisticResponse(optimisticConfig.response != null ? {\n        data: optimisticConfig.response\n      } : null, optimisticConfig.updater, false);\n    }\n  }\n  var _proto = Executor.prototype;\n  _proto.cancel = function cancel() {\n    var _this2 = this;\n    if (this._state === 'completed') {\n      return;\n    }\n    this._state = 'completed';\n    this._operationExecutions[\"delete\"](this._operation.request.identifier);\n    if (this._subscriptions.size !== 0) {\n      this._subscriptions.forEach(function (sub) {\n        return sub.unsubscribe();\n      });\n      this._subscriptions.clear();\n    }\n    var optimisticUpdates = this._optimisticUpdates;\n    if (optimisticUpdates !== null) {\n      this._optimisticUpdates = null;\n      optimisticUpdates.forEach(function (update) {\n        return _this2._getPublishQueueAndSaveActor().revertUpdate(update);\n      });\n      this._runPublishQueue();\n    }\n    this._incrementalResults.clear();\n    if (this._asyncStoreUpdateDisposable != null) {\n      this._asyncStoreUpdateDisposable.dispose();\n      this._asyncStoreUpdateDisposable = null;\n    }\n    this._completeFns = [];\n    this._completeOperationTracker();\n    this._disposeRetainedData();\n  };\n  _proto._updateActiveState = function _updateActiveState() {\n    var activeState;\n    switch (this._state) {\n      case 'started':\n        {\n          activeState = 'active';\n          break;\n        }\n      case 'loading_incremental':\n        {\n          activeState = 'active';\n          break;\n        }\n      case 'completed':\n        {\n          activeState = 'inactive';\n          break;\n        }\n      case 'loading_final':\n        {\n          activeState = this._pendingModulePayloadsCount > 0 ? 'active' : 'inactive';\n          break;\n        }\n      default:\n        this._state;\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: invalid executor state.') : invariant(false) : void 0;\n    }\n    this._operationExecutions.set(this._operation.request.identifier, activeState);\n  };\n  _proto._schedule = function _schedule(task) {\n    var _this3 = this;\n    var scheduler = this._scheduler;\n    if (scheduler != null) {\n      var id = this._nextSubscriptionId++;\n      RelayObservable.create(function (sink) {\n        var cancellationToken = scheduler.schedule(function () {\n          try {\n            task();\n            sink.complete();\n          } catch (error) {\n            sink.error(error);\n          }\n        });\n        return function () {\n          return scheduler.cancel(cancellationToken);\n        };\n      }).subscribe({\n        complete: function complete() {\n          return _this3._complete(id);\n        },\n        error: function error(_error3) {\n          return _this3._error(_error3);\n        },\n        start: function start(subscription) {\n          return _this3._start(id, subscription);\n        }\n      });\n    } else {\n      task();\n    }\n  };\n  _proto._complete = function _complete(id) {\n    this._subscriptions[\"delete\"](id);\n    if (this._subscriptions.size === 0) {\n      this.cancel();\n      this._sink.complete();\n      this._log({\n        name: 'execute.complete',\n        executeId: this._executeId\n      });\n    }\n  };\n  _proto._error = function _error(error) {\n    this.cancel();\n    this._sink.error(error);\n    this._log({\n      name: 'execute.error',\n      executeId: this._executeId,\n      error: error\n    });\n  };\n  _proto._start = function _start(id, subscription) {\n    this._subscriptions.set(id, subscription);\n    this._updateActiveState();\n  };\n  _proto._next = function _next(_id, response) {\n    var _this4 = this;\n    this._schedule(function () {\n      var _withDuration = withDuration(function () {\n          _this4._handleNext(response);\n          _this4._maybeCompleteSubscriptionOperationTracking();\n        }),\n        duration = _withDuration[0];\n      _this4._log({\n        name: 'execute.next',\n        executeId: _this4._executeId,\n        response: response,\n        duration: duration\n      });\n    });\n  };\n  _proto._handleErrorResponse = function _handleErrorResponse(responses) {\n    var _this5 = this;\n    var results = [];\n    responses.forEach(function (response) {\n      if (response.data === null && response.extensions != null && !response.hasOwnProperty('errors')) {\n        return;\n      } else if (response.data == null) {\n        var errors = response.hasOwnProperty('errors') && response.errors != null ? response.errors : null;\n        var messages = errors ? errors.map(function (_ref3) {\n          var message = _ref3.message;\n          return message;\n        }).join('\\n') : '(No errors)';\n        var error = RelayError.create('RelayNetwork', 'No data returned for operation `' + _this5._operation.request.node.params.name + '`, got error(s):\\n' + messages + '\\n\\nSee the error `source` property for more information.');\n        error.source = {\n          errors: errors,\n          operation: _this5._operation.request.node,\n          variables: _this5._operation.request.variables\n        };\n        error.stack;\n        throw error;\n      } else {\n        var responseWithData = response;\n        results.push(responseWithData);\n      }\n    });\n    return results;\n  };\n  _proto._handleOptimisticResponses = function _handleOptimisticResponses(responses) {\n    var _response$extensions;\n    if (responses.length > 1) {\n      if (responses.some(function (responsePart) {\n        var _responsePart$extensi;\n        return ((_responsePart$extensi = responsePart.extensions) === null || _responsePart$extensi === void 0 ? void 0 : _responsePart$extensi.isOptimistic) === true;\n      })) {\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Optimistic responses cannot be batched.') : invariant(false) : void 0;\n      }\n      return false;\n    }\n    var response = responses[0];\n    var isOptimistic = ((_response$extensions = response.extensions) === null || _response$extensions === void 0 ? void 0 : _response$extensions.isOptimistic) === true;\n    if (isOptimistic && this._state !== 'started') {\n      !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: optimistic payload received after server payload.') : invariant(false) : void 0;\n    }\n    if (isOptimistic) {\n      this._processOptimisticResponse(response, null, this._treatMissingFieldsAsNull);\n      this._sink.next(response);\n      return true;\n    }\n    return false;\n  };\n  _proto._handleNext = function _handleNext(response) {\n    if (this._state === 'completed') {\n      return;\n    }\n    this._seenActors.clear();\n    var responses = Array.isArray(response) ? response : [response];\n    var responsesWithData = this._handleErrorResponse(responses);\n    if (responsesWithData.length === 0) {\n      var isFinal = responses.some(function (x) {\n        var _x$extensions;\n        return ((_x$extensions = x.extensions) === null || _x$extensions === void 0 ? void 0 : _x$extensions.is_final) === true;\n      });\n      if (isFinal) {\n        this._state = 'loading_final';\n        this._updateActiveState();\n        this._incrementalPayloadsPending = false;\n      }\n      this._sink.next(response);\n      return;\n    }\n    var isOptimistic = this._handleOptimisticResponses(responsesWithData);\n    if (isOptimistic) {\n      return;\n    }\n    var _partitionGraphQLResp = partitionGraphQLResponses(responsesWithData),\n      nonIncrementalResponses = _partitionGraphQLResp[0],\n      incrementalResponses = _partitionGraphQLResp[1];\n    var hasNonIncrementalResponses = nonIncrementalResponses.length > 0;\n    if (hasNonIncrementalResponses) {\n      if (this._isSubscriptionOperation) {\n        var nextID = generateUniqueClientID();\n        this._operation = {\n          request: this._operation.request,\n          fragment: createReaderSelector(this._operation.fragment.node, nextID, this._operation.fragment.variables, this._operation.fragment.owner),\n          root: createNormalizationSelector(this._operation.root.node, nextID, this._operation.root.variables)\n        };\n      }\n      var payloadFollowups = this._processResponses(nonIncrementalResponses);\n      this._processPayloadFollowups(payloadFollowups);\n    }\n    if (incrementalResponses.length > 0) {\n      var _payloadFollowups = this._processIncrementalResponses(incrementalResponses);\n      this._processPayloadFollowups(_payloadFollowups);\n    }\n    if (this._isSubscriptionOperation) {\n      if (responsesWithData[0].extensions == null) {\n        responsesWithData[0].extensions = {\n          __relay_subscription_root_id: this._operation.fragment.dataID\n        };\n      } else {\n        responsesWithData[0].extensions.__relay_subscription_root_id = this._operation.fragment.dataID;\n      }\n    }\n    var updatedOwners = this._runPublishQueue(hasNonIncrementalResponses ? this._operation : undefined);\n    if (hasNonIncrementalResponses) {\n      if (this._incrementalPayloadsPending) {\n        this._retainData();\n      }\n    }\n    this._updateOperationTracker(updatedOwners);\n    this._sink.next(response);\n  };\n  _proto._processOptimisticResponse = function _processOptimisticResponse(response, updater, treatMissingFieldsAsNull) {\n    var _this6 = this;\n    !(this._optimisticUpdates === null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: environment.execute: only support one optimistic response per ' + 'execute.') : invariant(false) : void 0;\n    if (response == null && updater == null) {\n      return;\n    }\n    var optimisticUpdates = [];\n    if (response) {\n      var payload = this._normalizeResponse(response, this._operation.root, ROOT_TYPE, {\n        actorIdentifier: this._actorIdentifier,\n        getDataID: this._getDataID,\n        path: [],\n        shouldProcessClientComponents: this._shouldProcessClientComponents,\n        treatMissingFieldsAsNull: treatMissingFieldsAsNull\n      });\n      validateOptimisticResponsePayload(payload);\n      optimisticUpdates.push({\n        operation: this._operation,\n        payload: payload,\n        updater: updater\n      });\n      this._processOptimisticFollowups(payload, optimisticUpdates);\n    } else if (updater) {\n      optimisticUpdates.push({\n        operation: this._operation,\n        payload: {\n          errors: null,\n          fieldPayloads: null,\n          incrementalPlaceholders: null,\n          followupPayloads: null,\n          source: RelayRecordSource.create(),\n          isFinal: false\n        },\n        updater: updater\n      });\n    }\n    this._optimisticUpdates = optimisticUpdates;\n    optimisticUpdates.forEach(function (update) {\n      return _this6._getPublishQueueAndSaveActor().applyUpdate(update);\n    });\n    var updatedOwners = this._runPublishQueue();\n    if (RelayFeatureFlags.ENABLE_OPERATION_TRACKER_OPTIMISTIC_UPDATES) {\n      this._updateOperationTracker(updatedOwners);\n    }\n  };\n  _proto._processOptimisticFollowups = function _processOptimisticFollowups(payload, optimisticUpdates) {\n    if (payload.followupPayloads && payload.followupPayloads.length) {\n      var followupPayloads = payload.followupPayloads;\n      var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(followupPayloads),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var followupPayload = _step.value;\n          switch (followupPayload.kind) {\n            case 'ModuleImportPayload':\n              var operationLoader = this._expectOperationLoader();\n              var operation = operationLoader.get(followupPayload.operationReference);\n              if (operation == null) {\n                this._processAsyncOptimisticModuleImport(followupPayload);\n              } else {\n                var moduleImportOptimisticUpdates = this._processOptimisticModuleImport(operation, followupPayload);\n                optimisticUpdates.push.apply(optimisticUpdates, (0, _toConsumableArray2[\"default\"])(moduleImportOptimisticUpdates));\n              }\n              break;\n            case 'ActorPayload':\n              process.env.NODE_ENV !== \"production\" ? warning(false, 'OperationExecutor: Unexpected optimistic ActorPayload. These updates are not supported.') : void 0;\n              break;\n            default:\n              followupPayload;\n              !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Unexpected followup kind `%s`. when processing optimistic updates.', followupPayload.kind) : invariant(false) : void 0;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  };\n  _proto._normalizeFollowupPayload = function _normalizeFollowupPayload(followupPayload, normalizationNode) {\n    var variables;\n    if (normalizationNode.kind === 'SplitOperation' && followupPayload.kind === 'ModuleImportPayload') {\n      variables = getLocalVariables(followupPayload.variables, normalizationNode.argumentDefinitions, followupPayload.args);\n    } else {\n      variables = followupPayload.variables;\n    }\n    var selector = createNormalizationSelector(normalizationNode, followupPayload.dataID, variables);\n    return this._normalizeResponse({\n      data: followupPayload.data\n    }, selector, followupPayload.typeName, {\n      actorIdentifier: this._actorIdentifier,\n      getDataID: this._getDataID,\n      path: followupPayload.path,\n      treatMissingFieldsAsNull: this._treatMissingFieldsAsNull,\n      shouldProcessClientComponents: this._shouldProcessClientComponents\n    });\n  };\n  _proto._processOptimisticModuleImport = function _processOptimisticModuleImport(normalizationRootNode, moduleImportPayload) {\n    var operation = getOperation(normalizationRootNode);\n    var optimisticUpdates = [];\n    var modulePayload = this._normalizeFollowupPayload(moduleImportPayload, operation);\n    validateOptimisticResponsePayload(modulePayload);\n    optimisticUpdates.push({\n      operation: this._operation,\n      payload: modulePayload,\n      updater: null\n    });\n    this._processOptimisticFollowups(modulePayload, optimisticUpdates);\n    return optimisticUpdates;\n  };\n  _proto._processAsyncOptimisticModuleImport = function _processAsyncOptimisticModuleImport(moduleImportPayload) {\n    var _this7 = this;\n    this._expectOperationLoader().load(moduleImportPayload.operationReference).then(function (operation) {\n      if (operation == null || _this7._state !== 'started') {\n        return;\n      }\n      var moduleImportOptimisticUpdates = _this7._processOptimisticModuleImport(operation, moduleImportPayload);\n      moduleImportOptimisticUpdates.forEach(function (update) {\n        return _this7._getPublishQueueAndSaveActor().applyUpdate(update);\n      });\n      if (_this7._optimisticUpdates == null) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'OperationExecutor: Unexpected ModuleImport optimistic ' + 'update in operation %s.' + _this7._operation.request.node.params.name) : void 0;\n      } else {\n        var _this$_optimisticUpda;\n        (_this$_optimisticUpda = _this7._optimisticUpdates).push.apply(_this$_optimisticUpda, (0, _toConsumableArray2[\"default\"])(moduleImportOptimisticUpdates));\n        _this7._runPublishQueue();\n      }\n    });\n  };\n  _proto._processResponses = function _processResponses(responses) {\n    var _this8 = this;\n    if (this._optimisticUpdates !== null) {\n      this._optimisticUpdates.forEach(function (update) {\n        _this8._getPublishQueueAndSaveActor().revertUpdate(update);\n      });\n      this._optimisticUpdates = null;\n    }\n    this._incrementalPayloadsPending = false;\n    this._incrementalResults.clear();\n    this._source.clear();\n    return responses.map(function (payloadPart) {\n      var relayPayload = _this8._normalizeResponse(payloadPart, _this8._operation.root, ROOT_TYPE, {\n        actorIdentifier: _this8._actorIdentifier,\n        getDataID: _this8._getDataID,\n        path: [],\n        treatMissingFieldsAsNull: _this8._treatMissingFieldsAsNull,\n        shouldProcessClientComponents: _this8._shouldProcessClientComponents\n      });\n      _this8._getPublishQueueAndSaveActor().commitPayload(_this8._operation, relayPayload, _this8._updater);\n      return relayPayload;\n    });\n  };\n  _proto._processPayloadFollowups = function _processPayloadFollowups(payloads) {\n    var _this9 = this;\n    if (this._state === 'completed') {\n      return;\n    }\n    payloads.forEach(function (payload) {\n      var incrementalPlaceholders = payload.incrementalPlaceholders,\n        followupPayloads = payload.followupPayloads,\n        isFinal = payload.isFinal;\n      _this9._state = isFinal ? 'loading_final' : 'loading_incremental';\n      _this9._updateActiveState();\n      if (isFinal) {\n        _this9._incrementalPayloadsPending = false;\n      }\n      if (followupPayloads && followupPayloads.length !== 0) {\n        followupPayloads.forEach(function (followupPayload) {\n          var _followupPayload$acto;\n          var prevActorIdentifier = _this9._actorIdentifier;\n          _this9._actorIdentifier = (_followupPayload$acto = followupPayload.actorIdentifier) !== null && _followupPayload$acto !== void 0 ? _followupPayload$acto : _this9._actorIdentifier;\n          _this9._processFollowupPayload(followupPayload);\n          _this9._actorIdentifier = prevActorIdentifier;\n        });\n      }\n      if (incrementalPlaceholders && incrementalPlaceholders.length !== 0) {\n        _this9._incrementalPayloadsPending = _this9._state !== 'loading_final';\n        incrementalPlaceholders.forEach(function (incrementalPlaceholder) {\n          var _incrementalPlacehold;\n          var prevActorIdentifier = _this9._actorIdentifier;\n          _this9._actorIdentifier = (_incrementalPlacehold = incrementalPlaceholder.actorIdentifier) !== null && _incrementalPlacehold !== void 0 ? _incrementalPlacehold : _this9._actorIdentifier;\n          _this9._processIncrementalPlaceholder(payload, incrementalPlaceholder);\n          _this9._actorIdentifier = prevActorIdentifier;\n        });\n        if (_this9._isClientPayload || _this9._state === 'loading_final') {\n          process.env.NODE_ENV !== \"production\" ? warning(_this9._isClientPayload, 'RelayModernEnvironment: Operation `%s` contains @defer/@stream ' + 'directives but was executed in non-streaming mode. See ' + 'https://fburl.com/relay-incremental-delivery-non-streaming-warning.', _this9._operation.request.node.params.name) : void 0;\n          var relayPayloads = [];\n          incrementalPlaceholders.forEach(function (placeholder) {\n            if (placeholder.kind === 'defer') {\n              relayPayloads.push(_this9._processDeferResponse(placeholder.label, placeholder.path, placeholder, {\n                data: placeholder.data\n              }));\n            }\n          });\n          if (relayPayloads.length > 0) {\n            _this9._processPayloadFollowups(relayPayloads);\n          }\n        }\n      }\n    });\n  };\n  _proto._maybeCompleteSubscriptionOperationTracking = function _maybeCompleteSubscriptionOperationTracking() {\n    if (!this._isSubscriptionOperation) {\n      return;\n    }\n    if (this._pendingModulePayloadsCount === 0 && this._incrementalPayloadsPending === false) {\n      this._completeOperationTracker();\n    }\n  };\n  _proto._processFollowupPayload = function _processFollowupPayload(followupPayload) {\n    var _this10 = this;\n    switch (followupPayload.kind) {\n      case 'ModuleImportPayload':\n        var operationLoader = this._expectOperationLoader();\n        var node = operationLoader.get(followupPayload.operationReference);\n        if (node != null) {\n          this._processFollowupPayloadWithNormalizationNode(followupPayload, getOperation(node));\n        } else {\n          var id = this._nextSubscriptionId++;\n          this._pendingModulePayloadsCount++;\n          var decrementPendingCount = function decrementPendingCount() {\n            _this10._pendingModulePayloadsCount--;\n            _this10._maybeCompleteSubscriptionOperationTracking();\n          };\n          var networkObservable = RelayObservable.from(new Promise(function (resolve, reject) {\n            operationLoader.load(followupPayload.operationReference).then(resolve, reject);\n          }));\n          RelayObservable.create(function (sink) {\n            var cancellationToken;\n            var subscription = networkObservable.subscribe({\n              next: function next(loadedNode) {\n                if (loadedNode != null) {\n                  var publishModuleImportPayload = function publishModuleImportPayload() {\n                    try {\n                      var operation = getOperation(loadedNode);\n                      var batchAsyncModuleUpdatesFN = RelayFeatureFlags.BATCH_ASYNC_MODULE_UPDATES_FN;\n                      var shouldScheduleAsyncStoreUpdate = batchAsyncModuleUpdatesFN != null && _this10._pendingModulePayloadsCount > 1;\n                      var _withDuration2 = withDuration(function () {\n                          _this10._handleFollowupPayload(followupPayload, operation);\n                          if (shouldScheduleAsyncStoreUpdate) {\n                            _this10._scheduleAsyncStoreUpdate(batchAsyncModuleUpdatesFN, sink.complete);\n                          } else {\n                            var updatedOwners = _this10._runPublishQueue();\n                            _this10._updateOperationTracker(updatedOwners);\n                          }\n                        }),\n                        duration = _withDuration2[0];\n                      _this10._log({\n                        name: 'execute.async.module',\n                        executeId: _this10._executeId,\n                        operationName: operation.name,\n                        duration: duration\n                      });\n                      if (!shouldScheduleAsyncStoreUpdate) {\n                        sink.complete();\n                      }\n                    } catch (error) {\n                      sink.error(error);\n                    }\n                  };\n                  var scheduler = _this10._scheduler;\n                  if (scheduler == null) {\n                    publishModuleImportPayload();\n                  } else {\n                    cancellationToken = scheduler.schedule(publishModuleImportPayload);\n                  }\n                } else {\n                  sink.complete();\n                }\n              },\n              error: sink.error\n            });\n            return function () {\n              subscription.unsubscribe();\n              if (_this10._scheduler != null && cancellationToken != null) {\n                _this10._scheduler.cancel(cancellationToken);\n              }\n            };\n          }).subscribe({\n            complete: function complete() {\n              _this10._complete(id);\n              decrementPendingCount();\n            },\n            error: function error(_error4) {\n              _this10._error(_error4);\n              decrementPendingCount();\n            },\n            start: function start(subscription) {\n              return _this10._start(id, subscription);\n            }\n          });\n        }\n        break;\n      case 'ActorPayload':\n        this._processFollowupPayloadWithNormalizationNode(followupPayload, followupPayload.node);\n        break;\n      default:\n        followupPayload;\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Unexpected followup kind `%s`.', followupPayload.kind) : invariant(false) : void 0;\n    }\n  };\n  _proto._processFollowupPayloadWithNormalizationNode = function _processFollowupPayloadWithNormalizationNode(followupPayload, normalizationNode) {\n    this._handleFollowupPayload(followupPayload, normalizationNode);\n    this._maybeCompleteSubscriptionOperationTracking();\n  };\n  _proto._handleFollowupPayload = function _handleFollowupPayload(followupPayload, normalizationNode) {\n    var relayPayload = this._normalizeFollowupPayload(followupPayload, normalizationNode);\n    this._getPublishQueueAndSaveActor().commitPayload(this._operation, relayPayload);\n    this._processPayloadFollowups([relayPayload]);\n  };\n  _proto._processIncrementalPlaceholder = function _processIncrementalPlaceholder(relayPayload, placeholder) {\n    var _relayPayload$fieldPa;\n    var label = placeholder.label,\n      path = placeholder.path;\n    var pathKey = path.map(String).join('.');\n    var resultForLabel = this._incrementalResults.get(label);\n    if (resultForLabel == null) {\n      resultForLabel = new Map();\n      this._incrementalResults.set(label, resultForLabel);\n    }\n    var resultForPath = resultForLabel.get(pathKey);\n    var pendingResponses = resultForPath != null && resultForPath.kind === 'response' ? resultForPath.responses : null;\n    resultForLabel.set(pathKey, {\n      kind: 'placeholder',\n      placeholder: placeholder\n    });\n    var parentID;\n    if (placeholder.kind === 'stream') {\n      parentID = placeholder.parentID;\n    } else if (placeholder.kind === 'defer') {\n      parentID = placeholder.selector.dataID;\n    } else {\n      placeholder;\n      !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Unsupported incremental placeholder kind `%s`.', placeholder.kind) : invariant(false) : void 0;\n    }\n    var parentRecord = relayPayload.source.get(parentID);\n    var parentPayloads = ((_relayPayload$fieldPa = relayPayload.fieldPayloads) !== null && _relayPayload$fieldPa !== void 0 ? _relayPayload$fieldPa : []).filter(function (fieldPayload) {\n      var fieldID = generateClientID(fieldPayload.dataID, fieldPayload.fieldKey);\n      return fieldPayload.dataID === parentID || fieldID === parentID;\n    });\n    !(parentRecord != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected record `%s` to exist.', parentID) : invariant(false) : void 0;\n    var nextParentRecord;\n    var nextParentPayloads;\n    var previousParentEntry = this._source.get(parentID);\n    if (previousParentEntry != null) {\n      nextParentRecord = RelayModernRecord.update(previousParentEntry.record, parentRecord);\n      var handlePayloads = new Map();\n      var dedupePayload = function dedupePayload(payload) {\n        var key = stableStringify(payload);\n        handlePayloads.set(key, payload);\n      };\n      previousParentEntry.fieldPayloads.forEach(dedupePayload);\n      parentPayloads.forEach(dedupePayload);\n      nextParentPayloads = Array.from(handlePayloads.values());\n    } else {\n      nextParentRecord = parentRecord;\n      nextParentPayloads = parentPayloads;\n    }\n    this._source.set(parentID, {\n      record: nextParentRecord,\n      fieldPayloads: nextParentPayloads\n    });\n    if (pendingResponses != null) {\n      var payloadFollowups = this._processIncrementalResponses(pendingResponses);\n      this._processPayloadFollowups(payloadFollowups);\n    }\n  };\n  _proto._processIncrementalResponses = function _processIncrementalResponses(incrementalResponses) {\n    var _this11 = this;\n    var relayPayloads = [];\n    incrementalResponses.forEach(function (incrementalResponse) {\n      var label = incrementalResponse.label,\n        path = incrementalResponse.path,\n        response = incrementalResponse.response;\n      var resultForLabel = _this11._incrementalResults.get(label);\n      if (resultForLabel == null) {\n        resultForLabel = new Map();\n        _this11._incrementalResults.set(label, resultForLabel);\n      }\n      if (label.indexOf('$defer$') !== -1) {\n        var pathKey = path.map(String).join('.');\n        var resultForPath = resultForLabel.get(pathKey);\n        if (resultForPath == null) {\n          resultForPath = {\n            kind: 'response',\n            responses: [incrementalResponse]\n          };\n          resultForLabel.set(pathKey, resultForPath);\n          return;\n        } else if (resultForPath.kind === 'response') {\n          resultForPath.responses.push(incrementalResponse);\n          return;\n        }\n        var placeholder = resultForPath.placeholder;\n        !(placeholder.kind === 'defer') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected data for path `%s` for label `%s` ' + 'to be data for @defer, was `@%s`.', pathKey, label, placeholder.kind) : invariant(false) : void 0;\n        relayPayloads.push(_this11._processDeferResponse(label, path, placeholder, response));\n      } else {\n        var _pathKey = path.slice(0, -2).map(String).join('.');\n        var _resultForPath = resultForLabel.get(_pathKey);\n        if (_resultForPath == null) {\n          _resultForPath = {\n            kind: 'response',\n            responses: [incrementalResponse]\n          };\n          resultForLabel.set(_pathKey, _resultForPath);\n          return;\n        } else if (_resultForPath.kind === 'response') {\n          _resultForPath.responses.push(incrementalResponse);\n          return;\n        }\n        var _placeholder = _resultForPath.placeholder;\n        !(_placeholder.kind === 'stream') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected data for path `%s` for label `%s` ' + 'to be data for @stream, was `@%s`.', _pathKey, label, _placeholder.kind) : invariant(false) : void 0;\n        relayPayloads.push(_this11._processStreamResponse(label, path, _placeholder, response));\n      }\n    });\n    return relayPayloads;\n  };\n  _proto._processDeferResponse = function _processDeferResponse(label, path, placeholder, response) {\n    var _placeholder$actorIde;\n    var parentID = placeholder.selector.dataID;\n    var prevActorIdentifier = this._actorIdentifier;\n    this._actorIdentifier = (_placeholder$actorIde = placeholder.actorIdentifier) !== null && _placeholder$actorIde !== void 0 ? _placeholder$actorIde : this._actorIdentifier;\n    var relayPayload = this._normalizeResponse(response, placeholder.selector, placeholder.typeName, {\n      actorIdentifier: this._actorIdentifier,\n      getDataID: this._getDataID,\n      path: placeholder.path,\n      treatMissingFieldsAsNull: this._treatMissingFieldsAsNull,\n      shouldProcessClientComponents: this._shouldProcessClientComponents\n    });\n    this._getPublishQueueAndSaveActor().commitPayload(this._operation, relayPayload);\n    var parentEntry = this._source.get(parentID);\n    !(parentEntry != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected the parent record `%s` for @defer ' + 'data to exist.', parentID) : invariant(false) : void 0;\n    var fieldPayloads = parentEntry.fieldPayloads;\n    if (fieldPayloads.length !== 0) {\n      var _response$extensions2;\n      var handleFieldsRelayPayload = {\n        errors: null,\n        fieldPayloads: fieldPayloads,\n        incrementalPlaceholders: null,\n        followupPayloads: null,\n        source: RelayRecordSource.create(),\n        isFinal: ((_response$extensions2 = response.extensions) === null || _response$extensions2 === void 0 ? void 0 : _response$extensions2.is_final) === true\n      };\n      this._getPublishQueueAndSaveActor().commitPayload(this._operation, handleFieldsRelayPayload);\n    }\n    this._actorIdentifier = prevActorIdentifier;\n    return relayPayload;\n  };\n  _proto._processStreamResponse = function _processStreamResponse(label, path, placeholder, response) {\n    var parentID = placeholder.parentID,\n      node = placeholder.node,\n      variables = placeholder.variables,\n      actorIdentifier = placeholder.actorIdentifier;\n    var prevActorIdentifier = this._actorIdentifier;\n    this._actorIdentifier = actorIdentifier !== null && actorIdentifier !== void 0 ? actorIdentifier : this._actorIdentifier;\n    var field = node.selections[0];\n    !(field != null && field.kind === 'LinkedField' && field.plural === true) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected @stream to be used on a plural field.') : invariant(false) : void 0;\n    var _this$_normalizeStrea = this._normalizeStreamItem(response, parentID, field, variables, path, placeholder.path),\n      fieldPayloads = _this$_normalizeStrea.fieldPayloads,\n      itemID = _this$_normalizeStrea.itemID,\n      itemIndex = _this$_normalizeStrea.itemIndex,\n      prevIDs = _this$_normalizeStrea.prevIDs,\n      relayPayload = _this$_normalizeStrea.relayPayload,\n      storageKey = _this$_normalizeStrea.storageKey;\n    this._getPublishQueueAndSaveActor().commitPayload(this._operation, relayPayload, function (store) {\n      var currentParentRecord = store.get(parentID);\n      if (currentParentRecord == null) {\n        return;\n      }\n      var currentItems = currentParentRecord.getLinkedRecords(storageKey);\n      if (currentItems == null) {\n        return;\n      }\n      if (currentItems.length !== prevIDs.length || currentItems.some(function (currentItem, index) {\n        return prevIDs[index] !== (currentItem && currentItem.getDataID());\n      })) {\n        return;\n      }\n      var nextItems = (0, _toConsumableArray2[\"default\"])(currentItems);\n      nextItems[itemIndex] = store.get(itemID);\n      currentParentRecord.setLinkedRecords(nextItems, storageKey);\n    });\n    if (fieldPayloads.length !== 0) {\n      var handleFieldsRelayPayload = {\n        errors: null,\n        fieldPayloads: fieldPayloads,\n        incrementalPlaceholders: null,\n        followupPayloads: null,\n        source: RelayRecordSource.create(),\n        isFinal: false\n      };\n      this._getPublishQueueAndSaveActor().commitPayload(this._operation, handleFieldsRelayPayload);\n    }\n    this._actorIdentifier = prevActorIdentifier;\n    return relayPayload;\n  };\n  _proto._normalizeStreamItem = function _normalizeStreamItem(response, parentID, field, variables, path, normalizationPath) {\n    var _field$alias, _field$concreteType, _ref, _this$_getDataID;\n    var data = response.data;\n    !(typeof data === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected the GraphQL @stream payload `data` ' + 'value to be an object.') : invariant(false) : void 0;\n    var responseKey = (_field$alias = field.alias) !== null && _field$alias !== void 0 ? _field$alias : field.name;\n    var storageKey = getStorageKey(field, variables);\n    var parentEntry = this._source.get(parentID);\n    !(parentEntry != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected the parent record `%s` for @stream ' + 'data to exist.', parentID) : invariant(false) : void 0;\n    var parentRecord = parentEntry.record,\n      fieldPayloads = parentEntry.fieldPayloads;\n    var prevIDs = RelayModernRecord.getLinkedRecordIDs(parentRecord, storageKey);\n    !(prevIDs != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected record `%s` to have fetched field ' + '`%s` with @stream.', parentID, field.name) : invariant(false) : void 0;\n    var finalPathEntry = path[path.length - 1];\n    var itemIndex = parseInt(finalPathEntry, 10);\n    !(itemIndex === finalPathEntry && itemIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected path for @stream to end in a ' + 'positive integer index, got `%s`', finalPathEntry) : invariant(false) : void 0;\n    var typeName = (_field$concreteType = field.concreteType) !== null && _field$concreteType !== void 0 ? _field$concreteType : data[TYPENAME_KEY];\n    !(typeof typeName === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected @stream field `%s` to have a ' + '__typename.', field.name) : invariant(false) : void 0;\n    var itemID = (_ref = (_this$_getDataID = this._getDataID(data, typeName)) !== null && _this$_getDataID !== void 0 ? _this$_getDataID : prevIDs === null || prevIDs === void 0 ? void 0 : prevIDs[itemIndex]) !== null && _ref !== void 0 ? _ref : generateClientID(parentID, storageKey, itemIndex);\n    !(typeof itemID === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected id of elements of field `%s` to ' + 'be strings.', storageKey) : invariant(false) : void 0;\n    var selector = createNormalizationSelector(field, itemID, variables);\n    var nextParentRecord = RelayModernRecord.clone(parentRecord);\n    var nextIDs = (0, _toConsumableArray2[\"default\"])(prevIDs);\n    nextIDs[itemIndex] = itemID;\n    RelayModernRecord.setLinkedRecordIDs(nextParentRecord, storageKey, nextIDs);\n    this._source.set(parentID, {\n      record: nextParentRecord,\n      fieldPayloads: fieldPayloads\n    });\n    var relayPayload = this._normalizeResponse(response, selector, typeName, {\n      actorIdentifier: this._actorIdentifier,\n      getDataID: this._getDataID,\n      path: [].concat((0, _toConsumableArray2[\"default\"])(normalizationPath), [responseKey, String(itemIndex)]),\n      treatMissingFieldsAsNull: this._treatMissingFieldsAsNull,\n      shouldProcessClientComponents: this._shouldProcessClientComponents\n    });\n    return {\n      fieldPayloads: fieldPayloads,\n      itemID: itemID,\n      itemIndex: itemIndex,\n      prevIDs: prevIDs,\n      relayPayload: relayPayload,\n      storageKey: storageKey\n    };\n  };\n  _proto._scheduleAsyncStoreUpdate = function _scheduleAsyncStoreUpdate(scheduleFn, completeFn) {\n    var _this12 = this;\n    this._completeFns.push(completeFn);\n    if (this._asyncStoreUpdateDisposable != null) {\n      return;\n    }\n    this._asyncStoreUpdateDisposable = scheduleFn(function () {\n      _this12._asyncStoreUpdateDisposable = null;\n      var updatedOwners = _this12._runPublishQueue();\n      _this12._updateOperationTracker(updatedOwners);\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(_this12._completeFns),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var complete = _step2.value;\n          complete();\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      _this12._completeFns = [];\n    });\n  };\n  _proto._updateOperationTracker = function _updateOperationTracker(updatedOwners) {\n    if (updatedOwners != null && updatedOwners.length > 0) {\n      this._operationTracker.update(this._operation.request, new Set(updatedOwners));\n    }\n  };\n  _proto._completeOperationTracker = function _completeOperationTracker() {\n    this._operationTracker.complete(this._operation.request);\n  };\n  _proto._getPublishQueueAndSaveActor = function _getPublishQueueAndSaveActor() {\n    this._seenActors.add(this._actorIdentifier);\n    return this._getPublishQueue(this._actorIdentifier);\n  };\n  _proto._getActorsToVisit = function _getActorsToVisit() {\n    if (this._seenActors.size === 0) {\n      return new Set([this._actorIdentifier]);\n    } else {\n      return this._seenActors;\n    }\n  };\n  _proto._runPublishQueue = function _runPublishQueue(operation) {\n    var updatedOwners = new Set();\n    var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(this._getActorsToVisit()),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var actorIdentifier = _step3.value;\n        var owners = this._getPublishQueue(actorIdentifier).run(operation);\n        owners.forEach(function (owner) {\n          return updatedOwners.add(owner);\n        });\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    return Array.from(updatedOwners);\n  };\n  _proto._retainData = function _retainData() {\n    var _iterator4 = (0, _createForOfIteratorHelper2[\"default\"])(this._getActorsToVisit()),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var actorIdentifier = _step4.value;\n        if (!this._retainDisposables.has(actorIdentifier)) {\n          this._retainDisposables.set(actorIdentifier, this._getStore(actorIdentifier).retain(this._operation));\n        }\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  };\n  _proto._disposeRetainedData = function _disposeRetainedData() {\n    var _iterator5 = (0, _createForOfIteratorHelper2[\"default\"])(this._retainDisposables.values()),\n      _step5;\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var disposable = _step5.value;\n        disposable.dispose();\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n    this._retainDisposables.clear();\n  };\n  _proto._expectOperationLoader = function _expectOperationLoader() {\n    var operationLoader = this._operationLoader;\n    !operationLoader ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected an operationLoader to be ' + 'configured when using `@match`.') : invariant(false) : void 0;\n    return operationLoader;\n  };\n  return Executor;\n}();\nfunction partitionGraphQLResponses(responses) {\n  var nonIncrementalResponses = [];\n  var incrementalResponses = [];\n  responses.forEach(function (response) {\n    if (response.path != null || response.label != null) {\n      var label = response.label,\n        path = response.path;\n      if (label == null || path == null) {\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: invalid incremental payload, expected ' + '`path` and `label` to either both be null/undefined, or ' + '`path` to be an `Array<string | number>` and `label` to be a ' + '`string`.') : invariant(false) : void 0;\n      }\n      incrementalResponses.push({\n        label: label,\n        path: path,\n        response: response\n      });\n    } else {\n      nonIncrementalResponses.push(response);\n    }\n  });\n  return [nonIncrementalResponses, incrementalResponses];\n}\nfunction stableStringify(value) {\n  var _JSON$stringify;\n  return (_JSON$stringify = JSON.stringify(stableCopy(value))) !== null && _JSON$stringify !== void 0 ? _JSON$stringify : '';\n}\nfunction validateOptimisticResponsePayload(payload) {\n  var incrementalPlaceholders = payload.incrementalPlaceholders;\n  if (incrementalPlaceholders != null && incrementalPlaceholders.length !== 0) {\n    !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: optimistic responses cannot be returned ' + 'for operations that use incremental data delivery (@defer, ' + '@stream, and @stream_connection).') : invariant(false) : void 0;\n  }\n}\nmodule.exports = {\n  execute: execute\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}