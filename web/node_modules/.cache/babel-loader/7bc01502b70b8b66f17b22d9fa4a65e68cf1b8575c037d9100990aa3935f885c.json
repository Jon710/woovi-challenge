{"ast":null,"code":"'use strict';\n\nvar Observable = require('../network/RelayObservable');\nvar RelayReplaySubject = require('../util/RelayReplaySubject');\nvar invariant = require('invariant');\nvar WEAKMAP_SUPPORTED = typeof WeakMap === 'function';\nvar requestCachesByEnvironment = WEAKMAP_SUPPORTED ? new WeakMap() : new Map();\nfunction fetchQuery(environment, operation) {\n  return fetchQueryDeduped(environment, operation.request.identifier, function () {\n    return environment.execute({\n      operation: operation\n    });\n  });\n}\nfunction fetchQueryDeduped(environment, identifier, fetchFn) {\n  return Observable.create(function (sink) {\n    var requestCache = getRequestCache(environment);\n    var cachedRequest = requestCache.get(identifier);\n    if (!cachedRequest) {\n      fetchFn()[\"finally\"](function () {\n        return requestCache[\"delete\"](identifier);\n      }).subscribe({\n        start: function start(subscription) {\n          cachedRequest = {\n            identifier: identifier,\n            subject: new RelayReplaySubject(),\n            subjectForInFlightStatus: new RelayReplaySubject(),\n            subscription: subscription,\n            promise: null\n          };\n          requestCache.set(identifier, cachedRequest);\n        },\n        next: function next(response) {\n          var cachedReq = getCachedRequest(requestCache, identifier);\n          cachedReq.subject.next(response);\n          cachedReq.subjectForInFlightStatus.next(response);\n        },\n        error: function error(_error) {\n          var cachedReq = getCachedRequest(requestCache, identifier);\n          cachedReq.subject.error(_error);\n          cachedReq.subjectForInFlightStatus.error(_error);\n        },\n        complete: function complete() {\n          var cachedReq = getCachedRequest(requestCache, identifier);\n          cachedReq.subject.complete();\n          cachedReq.subjectForInFlightStatus.complete();\n        },\n        unsubscribe: function unsubscribe(subscription) {\n          var cachedReq = getCachedRequest(requestCache, identifier);\n          cachedReq.subject.unsubscribe();\n          cachedReq.subjectForInFlightStatus.unsubscribe();\n        }\n      });\n    }\n    !(cachedRequest != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[fetchQueryInternal] fetchQueryDeduped: Expected `start` to be ' + 'called synchronously') : invariant(false) : void 0;\n    return getObservableForCachedRequest(requestCache, cachedRequest).subscribe(sink);\n  });\n}\nfunction getObservableForCachedRequest(requestCache, cachedRequest) {\n  return Observable.create(function (sink) {\n    var subscription = cachedRequest.subject.subscribe(sink);\n    return function () {\n      subscription.unsubscribe();\n      var cachedRequestInstance = requestCache.get(cachedRequest.identifier);\n      if (cachedRequestInstance) {\n        var requestSubscription = cachedRequestInstance.subscription;\n        if (requestSubscription != null && cachedRequestInstance.subject.getObserverCount() === 0) {\n          requestSubscription.unsubscribe();\n          requestCache[\"delete\"](cachedRequest.identifier);\n        }\n      }\n    };\n  });\n}\nfunction getActiveStatusObservableForCachedRequest(environment, requestCache, cachedRequest) {\n  return Observable.create(function (sink) {\n    var subscription = cachedRequest.subjectForInFlightStatus.subscribe({\n      error: sink.error,\n      next: function next(response) {\n        if (!environment.isRequestActive(cachedRequest.identifier)) {\n          sink.complete();\n          return;\n        }\n        sink.next();\n      },\n      complete: sink.complete,\n      unsubscribe: sink.complete\n    });\n    return function () {\n      subscription.unsubscribe();\n    };\n  });\n}\nfunction getPromiseForActiveRequest(environment, request) {\n  var requestCache = getRequestCache(environment);\n  var cachedRequest = requestCache.get(request.identifier);\n  if (!cachedRequest) {\n    return null;\n  }\n  if (!environment.isRequestActive(cachedRequest.identifier)) {\n    return null;\n  }\n  var promise = new Promise(function (resolve, reject) {\n    var resolveOnNext = false;\n    getActiveStatusObservableForCachedRequest(environment, requestCache, cachedRequest).subscribe({\n      complete: resolve,\n      error: reject,\n      next: function next(response) {\n        if (resolveOnNext) {\n          resolve(response);\n        }\n      }\n    });\n    resolveOnNext = true;\n  });\n  return promise;\n}\nfunction getObservableForActiveRequest(environment, request) {\n  var requestCache = getRequestCache(environment);\n  var cachedRequest = requestCache.get(request.identifier);\n  if (!cachedRequest) {\n    return null;\n  }\n  if (!environment.isRequestActive(cachedRequest.identifier)) {\n    return null;\n  }\n  return getActiveStatusObservableForCachedRequest(environment, requestCache, cachedRequest);\n}\nfunction getRequestCache(environment) {\n  var cached = requestCachesByEnvironment.get(environment);\n  if (cached != null) {\n    return cached;\n  }\n  var requestCache = new Map();\n  requestCachesByEnvironment.set(environment, requestCache);\n  return requestCache;\n}\nfunction getCachedRequest(requestCache, identifier) {\n  var cached = requestCache.get(identifier);\n  !(cached != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[fetchQueryInternal] getCachedRequest: Expected request to be cached') : invariant(false) : void 0;\n  return cached;\n}\nmodule.exports = {\n  fetchQuery: fetchQuery,\n  fetchQueryDeduped: fetchQueryDeduped,\n  getPromiseForActiveRequest: getPromiseForActiveRequest,\n  getObservableForActiveRequest: getObservableForActiveRequest\n};","map":{"version":3,"names":["Observable","require","RelayReplaySubject","invariant","WEAKMAP_SUPPORTED","WeakMap","requestCachesByEnvironment","Map","fetchQuery","environment","operation","fetchQueryDeduped","request","identifier","execute","fetchFn","create","sink","requestCache","getRequestCache","cachedRequest","get","subscribe","start","subscription","subject","subjectForInFlightStatus","promise","set","next","response","cachedReq","getCachedRequest","error","_error","complete","unsubscribe","process","env","NODE_ENV","getObservableForCachedRequest","cachedRequestInstance","requestSubscription","getObserverCount","getActiveStatusObservableForCachedRequest","isRequestActive","getPromiseForActiveRequest","Promise","resolve","reject","resolveOnNext","getObservableForActiveRequest","cached","module","exports"],"sources":["/Users/joaoluismoraes/Desktop/woovi-challenge/web/node_modules/relay-runtime/lib/query/fetchQueryInternal.js"],"sourcesContent":["'use strict';\n\nvar Observable = require('../network/RelayObservable');\nvar RelayReplaySubject = require('../util/RelayReplaySubject');\nvar invariant = require('invariant');\nvar WEAKMAP_SUPPORTED = typeof WeakMap === 'function';\nvar requestCachesByEnvironment = WEAKMAP_SUPPORTED ? new WeakMap() : new Map();\nfunction fetchQuery(environment, operation) {\n  return fetchQueryDeduped(environment, operation.request.identifier, function () {\n    return environment.execute({\n      operation: operation\n    });\n  });\n}\nfunction fetchQueryDeduped(environment, identifier, fetchFn) {\n  return Observable.create(function (sink) {\n    var requestCache = getRequestCache(environment);\n    var cachedRequest = requestCache.get(identifier);\n    if (!cachedRequest) {\n      fetchFn()[\"finally\"](function () {\n        return requestCache[\"delete\"](identifier);\n      }).subscribe({\n        start: function start(subscription) {\n          cachedRequest = {\n            identifier: identifier,\n            subject: new RelayReplaySubject(),\n            subjectForInFlightStatus: new RelayReplaySubject(),\n            subscription: subscription,\n            promise: null\n          };\n          requestCache.set(identifier, cachedRequest);\n        },\n        next: function next(response) {\n          var cachedReq = getCachedRequest(requestCache, identifier);\n          cachedReq.subject.next(response);\n          cachedReq.subjectForInFlightStatus.next(response);\n        },\n        error: function error(_error) {\n          var cachedReq = getCachedRequest(requestCache, identifier);\n          cachedReq.subject.error(_error);\n          cachedReq.subjectForInFlightStatus.error(_error);\n        },\n        complete: function complete() {\n          var cachedReq = getCachedRequest(requestCache, identifier);\n          cachedReq.subject.complete();\n          cachedReq.subjectForInFlightStatus.complete();\n        },\n        unsubscribe: function unsubscribe(subscription) {\n          var cachedReq = getCachedRequest(requestCache, identifier);\n          cachedReq.subject.unsubscribe();\n          cachedReq.subjectForInFlightStatus.unsubscribe();\n        }\n      });\n    }\n    !(cachedRequest != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[fetchQueryInternal] fetchQueryDeduped: Expected `start` to be ' + 'called synchronously') : invariant(false) : void 0;\n    return getObservableForCachedRequest(requestCache, cachedRequest).subscribe(sink);\n  });\n}\nfunction getObservableForCachedRequest(requestCache, cachedRequest) {\n  return Observable.create(function (sink) {\n    var subscription = cachedRequest.subject.subscribe(sink);\n    return function () {\n      subscription.unsubscribe();\n      var cachedRequestInstance = requestCache.get(cachedRequest.identifier);\n      if (cachedRequestInstance) {\n        var requestSubscription = cachedRequestInstance.subscription;\n        if (requestSubscription != null && cachedRequestInstance.subject.getObserverCount() === 0) {\n          requestSubscription.unsubscribe();\n          requestCache[\"delete\"](cachedRequest.identifier);\n        }\n      }\n    };\n  });\n}\nfunction getActiveStatusObservableForCachedRequest(environment, requestCache, cachedRequest) {\n  return Observable.create(function (sink) {\n    var subscription = cachedRequest.subjectForInFlightStatus.subscribe({\n      error: sink.error,\n      next: function next(response) {\n        if (!environment.isRequestActive(cachedRequest.identifier)) {\n          sink.complete();\n          return;\n        }\n        sink.next();\n      },\n      complete: sink.complete,\n      unsubscribe: sink.complete\n    });\n    return function () {\n      subscription.unsubscribe();\n    };\n  });\n}\nfunction getPromiseForActiveRequest(environment, request) {\n  var requestCache = getRequestCache(environment);\n  var cachedRequest = requestCache.get(request.identifier);\n  if (!cachedRequest) {\n    return null;\n  }\n  if (!environment.isRequestActive(cachedRequest.identifier)) {\n    return null;\n  }\n  var promise = new Promise(function (resolve, reject) {\n    var resolveOnNext = false;\n    getActiveStatusObservableForCachedRequest(environment, requestCache, cachedRequest).subscribe({\n      complete: resolve,\n      error: reject,\n      next: function next(response) {\n        if (resolveOnNext) {\n          resolve(response);\n        }\n      }\n    });\n    resolveOnNext = true;\n  });\n  return promise;\n}\nfunction getObservableForActiveRequest(environment, request) {\n  var requestCache = getRequestCache(environment);\n  var cachedRequest = requestCache.get(request.identifier);\n  if (!cachedRequest) {\n    return null;\n  }\n  if (!environment.isRequestActive(cachedRequest.identifier)) {\n    return null;\n  }\n  return getActiveStatusObservableForCachedRequest(environment, requestCache, cachedRequest);\n}\nfunction getRequestCache(environment) {\n  var cached = requestCachesByEnvironment.get(environment);\n  if (cached != null) {\n    return cached;\n  }\n  var requestCache = new Map();\n  requestCachesByEnvironment.set(environment, requestCache);\n  return requestCache;\n}\nfunction getCachedRequest(requestCache, identifier) {\n  var cached = requestCache.get(identifier);\n  !(cached != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[fetchQueryInternal] getCachedRequest: Expected request to be cached') : invariant(false) : void 0;\n  return cached;\n}\nmodule.exports = {\n  fetchQuery: fetchQuery,\n  fetchQueryDeduped: fetchQueryDeduped,\n  getPromiseForActiveRequest: getPromiseForActiveRequest,\n  getObservableForActiveRequest: getObservableForActiveRequest\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}