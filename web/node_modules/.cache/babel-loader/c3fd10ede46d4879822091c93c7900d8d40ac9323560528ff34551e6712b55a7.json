{"ast":null,"code":"'use strict';\n\nvar _require = require('../store/RelayStoreUtils'),\n  ROOT_TYPE = _require.ROOT_TYPE,\n  getStorageKey = _require.getStorageKey;\nvar _require2 = require('./readUpdatableFragment'),\n  _readUpdatableFragment = _require2.readUpdatableFragment;\nvar _require3 = require('./readUpdatableQuery'),\n  _readUpdatableQuery = _require3.readUpdatableQuery;\nvar invariant = require('invariant');\nvar RelayRecordSourceSelectorProxy = /*#__PURE__*/function () {\n  function RelayRecordSourceSelectorProxy(mutator, recordSource, readSelector, missingFieldHandlers) {\n    this.__mutator = mutator;\n    this.__recordSource = recordSource;\n    this._readSelector = readSelector;\n    this._missingFieldHandlers = missingFieldHandlers;\n  }\n  var _proto = RelayRecordSourceSelectorProxy.prototype;\n  _proto.create = function create(dataID, typeName) {\n    return this.__recordSource.create(dataID, typeName);\n  };\n  _proto[\"delete\"] = function _delete(dataID) {\n    this.__recordSource[\"delete\"](dataID);\n  };\n  _proto.get = function get(dataID) {\n    return this.__recordSource.get(dataID);\n  };\n  _proto.getRoot = function getRoot() {\n    return this.__recordSource.getRoot();\n  };\n  _proto.getOperationRoot = function getOperationRoot() {\n    var root = this.__recordSource.get(this._readSelector.dataID);\n    if (!root) {\n      root = this.__recordSource.create(this._readSelector.dataID, ROOT_TYPE);\n    }\n    return root;\n  };\n  _proto._getRootField = function _getRootField(selector, fieldName, plural) {\n    var field = selector.node.selections.find(function (selection) {\n      return selection.kind === 'LinkedField' && selection.name === fieldName || selection.kind === 'RequiredField' && selection.field.name === fieldName;\n    });\n    if (field && field.kind === 'RequiredField') {\n      field = field.field;\n    }\n    !(field && field.kind === 'LinkedField') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceSelectorProxy#getRootField(): Cannot find root ' + 'field `%s`, no such field is defined on GraphQL document `%s`.', fieldName, selector.node.name) : invariant(false) : void 0;\n    !(field.plural === plural) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceSelectorProxy#getRootField(): Expected root field ' + '`%s` to be %s.', fieldName, plural ? 'plural' : 'singular') : invariant(false) : void 0;\n    return field;\n  };\n  _proto.getRootField = function getRootField(fieldName) {\n    var field = this._getRootField(this._readSelector, fieldName, false);\n    var storageKey = getStorageKey(field, this._readSelector.variables);\n    return this.getOperationRoot().getLinkedRecord(storageKey);\n  };\n  _proto.getPluralRootField = function getPluralRootField(fieldName) {\n    var field = this._getRootField(this._readSelector, fieldName, true);\n    var storageKey = getStorageKey(field, this._readSelector.variables);\n    return this.getOperationRoot().getLinkedRecords(storageKey);\n  };\n  _proto.invalidateStore = function invalidateStore() {\n    this.__recordSource.invalidateStore();\n  };\n  _proto.readUpdatableQuery = function readUpdatableQuery(query, variables) {\n    return _readUpdatableQuery(query, variables, this, this._missingFieldHandlers);\n  };\n  _proto.readUpdatableFragment = function readUpdatableFragment(fragment, fragmentReference) {\n    return _readUpdatableFragment(fragment, fragmentReference, this, this._missingFieldHandlers);\n  };\n  return RelayRecordSourceSelectorProxy;\n}();\nmodule.exports = RelayRecordSourceSelectorProxy;","map":{"version":3,"names":["_require","require","ROOT_TYPE","getStorageKey","_require2","_readUpdatableFragment","readUpdatableFragment","_require3","_readUpdatableQuery","readUpdatableQuery","invariant","RelayRecordSourceSelectorProxy","mutator","recordSource","readSelector","missingFieldHandlers","__mutator","__recordSource","_readSelector","_missingFieldHandlers","_proto","prototype","create","dataID","typeName","_delete","get","getRoot","getOperationRoot","root","_getRootField","selector","fieldName","plural","field","node","selections","find","selection","kind","name","process","env","NODE_ENV","getRootField","storageKey","variables","getLinkedRecord","getPluralRootField","getLinkedRecords","invalidateStore","query","fragment","fragmentReference","module","exports"],"sources":["/Users/joaoluismoraes/Desktop/woovi-challenge/web/node_modules/relay-runtime/lib/mutations/RelayRecordSourceSelectorProxy.js"],"sourcesContent":["'use strict';\n\nvar _require = require('../store/RelayStoreUtils'),\n  ROOT_TYPE = _require.ROOT_TYPE,\n  getStorageKey = _require.getStorageKey;\nvar _require2 = require('./readUpdatableFragment'),\n  _readUpdatableFragment = _require2.readUpdatableFragment;\nvar _require3 = require('./readUpdatableQuery'),\n  _readUpdatableQuery = _require3.readUpdatableQuery;\nvar invariant = require('invariant');\nvar RelayRecordSourceSelectorProxy = /*#__PURE__*/function () {\n  function RelayRecordSourceSelectorProxy(mutator, recordSource, readSelector, missingFieldHandlers) {\n    this.__mutator = mutator;\n    this.__recordSource = recordSource;\n    this._readSelector = readSelector;\n    this._missingFieldHandlers = missingFieldHandlers;\n  }\n  var _proto = RelayRecordSourceSelectorProxy.prototype;\n  _proto.create = function create(dataID, typeName) {\n    return this.__recordSource.create(dataID, typeName);\n  };\n  _proto[\"delete\"] = function _delete(dataID) {\n    this.__recordSource[\"delete\"](dataID);\n  };\n  _proto.get = function get(dataID) {\n    return this.__recordSource.get(dataID);\n  };\n  _proto.getRoot = function getRoot() {\n    return this.__recordSource.getRoot();\n  };\n  _proto.getOperationRoot = function getOperationRoot() {\n    var root = this.__recordSource.get(this._readSelector.dataID);\n    if (!root) {\n      root = this.__recordSource.create(this._readSelector.dataID, ROOT_TYPE);\n    }\n    return root;\n  };\n  _proto._getRootField = function _getRootField(selector, fieldName, plural) {\n    var field = selector.node.selections.find(function (selection) {\n      return selection.kind === 'LinkedField' && selection.name === fieldName || selection.kind === 'RequiredField' && selection.field.name === fieldName;\n    });\n    if (field && field.kind === 'RequiredField') {\n      field = field.field;\n    }\n    !(field && field.kind === 'LinkedField') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceSelectorProxy#getRootField(): Cannot find root ' + 'field `%s`, no such field is defined on GraphQL document `%s`.', fieldName, selector.node.name) : invariant(false) : void 0;\n    !(field.plural === plural) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceSelectorProxy#getRootField(): Expected root field ' + '`%s` to be %s.', fieldName, plural ? 'plural' : 'singular') : invariant(false) : void 0;\n    return field;\n  };\n  _proto.getRootField = function getRootField(fieldName) {\n    var field = this._getRootField(this._readSelector, fieldName, false);\n    var storageKey = getStorageKey(field, this._readSelector.variables);\n    return this.getOperationRoot().getLinkedRecord(storageKey);\n  };\n  _proto.getPluralRootField = function getPluralRootField(fieldName) {\n    var field = this._getRootField(this._readSelector, fieldName, true);\n    var storageKey = getStorageKey(field, this._readSelector.variables);\n    return this.getOperationRoot().getLinkedRecords(storageKey);\n  };\n  _proto.invalidateStore = function invalidateStore() {\n    this.__recordSource.invalidateStore();\n  };\n  _proto.readUpdatableQuery = function readUpdatableQuery(query, variables) {\n    return _readUpdatableQuery(query, variables, this, this._missingFieldHandlers);\n  };\n  _proto.readUpdatableFragment = function readUpdatableFragment(fragment, fragmentReference) {\n    return _readUpdatableFragment(fragment, fragmentReference, this, this._missingFieldHandlers);\n  };\n  return RelayRecordSourceSelectorProxy;\n}();\nmodule.exports = RelayRecordSourceSelectorProxy;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}