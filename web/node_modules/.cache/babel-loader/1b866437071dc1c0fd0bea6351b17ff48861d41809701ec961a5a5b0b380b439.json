{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _toPropertyKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toPropertyKey\"));\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar deepFreeze = require('../util/deepFreeze');\nvar _require = require('./ClientID'),\n  generateClientObjectClientID = _require.generateClientObjectClientID,\n  isClientID = _require.isClientID;\nvar _require2 = require('./experimental-live-resolvers/LiveResolverSuspenseSentinel'),\n  isSuspenseSentinel = _require2.isSuspenseSentinel;\nvar _require3 = require('./RelayStoreUtils'),\n  ACTOR_IDENTIFIER_KEY = _require3.ACTOR_IDENTIFIER_KEY,\n  ERRORS_KEY = _require3.ERRORS_KEY,\n  ID_KEY = _require3.ID_KEY,\n  INVALIDATED_AT_KEY = _require3.INVALIDATED_AT_KEY,\n  REF_KEY = _require3.REF_KEY,\n  REFS_KEY = _require3.REFS_KEY,\n  RELAY_RESOLVER_VALUE_KEY = _require3.RELAY_RESOLVER_VALUE_KEY,\n  ROOT_ID = _require3.ROOT_ID,\n  TYPENAME_KEY = _require3.TYPENAME_KEY;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\nfunction clone(record) {\n  return (0, _objectSpread2[\"default\"])({}, record);\n}\nfunction copyFields(source, sink) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      if (key !== ID_KEY && key !== TYPENAME_KEY) {\n        sink[key] = source[key];\n      }\n    }\n  }\n}\nfunction create(dataID, typeName) {\n  var record = {};\n  record[ID_KEY] = dataID;\n  record[TYPENAME_KEY] = typeName;\n  return record;\n}\nfunction fromObject(json) {\n  return json;\n}\nfunction getDataID(record) {\n  return record[ID_KEY];\n}\nfunction getFields(record) {\n  if (ERRORS_KEY in record) {\n    return Object.keys(record).filter(function (field) {\n      return field !== ERRORS_KEY;\n    });\n  }\n  return Object.keys(record);\n}\nfunction getType(record) {\n  return record[TYPENAME_KEY];\n}\nfunction getErrors(record, storageKey) {\n  var _record$ERRORS_KEY;\n  return (_record$ERRORS_KEY = record[ERRORS_KEY]) === null || _record$ERRORS_KEY === void 0 ? void 0 : _record$ERRORS_KEY[storageKey];\n}\nfunction getValue(record, storageKey) {\n  var value = record[storageKey];\n  if (value && typeof value === 'object') {\n    !(!value.hasOwnProperty(REF_KEY) && !value.hasOwnProperty(REFS_KEY)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getValue(): Expected a scalar (non-link) value for `%s.%s` ' + 'but found %s.', record[ID_KEY], storageKey, value.hasOwnProperty(REF_KEY) ? 'a linked record' : 'plural linked records') : invariant(false) : void 0;\n  }\n  return value;\n}\nfunction hasValue(record, storageKey) {\n  return storageKey in record;\n}\nfunction getLinkedRecordID(record, storageKey) {\n  var maybeLink = record[storageKey];\n  if (maybeLink == null) {\n    return maybeLink;\n  }\n  var link = maybeLink;\n  !(typeof link === 'object' && link && typeof link[REF_KEY] === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getLinkedRecordID(): Expected `%s.%s` to be a linked ID, ' + 'was `%s`.%s', record[ID_KEY], storageKey, JSON.stringify(link), typeof link === 'object' && link[REFS_KEY] !== undefined ? ' It appears to be a plural linked record: did you mean to call ' + 'getLinkedRecords() instead of getLinkedRecord()?' : '') : invariant(false) : void 0;\n  return link[REF_KEY];\n}\nfunction getLinkedRecordIDs(record, storageKey) {\n  var links = record[storageKey];\n  if (links == null) {\n    return links;\n  }\n  !(typeof links === 'object' && Array.isArray(links[REFS_KEY])) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getLinkedRecordIDs(): Expected `%s.%s` to contain an array ' + 'of linked IDs, got `%s`.%s', record[ID_KEY], storageKey, JSON.stringify(links), typeof links === 'object' && links[REF_KEY] !== undefined ? ' It appears to be a singular linked record: did you mean to call ' + 'getLinkedRecord() instead of getLinkedRecords()?' : '') : invariant(false) : void 0;\n  return links[REFS_KEY];\n}\nfunction getInvalidationEpoch(record) {\n  if (record == null) {\n    return null;\n  }\n  var invalidatedAt = record[INVALIDATED_AT_KEY];\n  if (typeof invalidatedAt !== 'number') {\n    return null;\n  }\n  return invalidatedAt;\n}\nfunction update(prevRecord, nextRecord) {\n  var _updated2;\n  if (process.env.NODE_ENV !== \"production\") {\n    var _getType, _getType2;\n    var prevID = getDataID(prevRecord);\n    var nextID = getDataID(nextRecord);\n    process.env.NODE_ENV !== \"production\" ? warning(prevID === nextID, 'RelayModernRecord: Invalid record update, expected both versions of ' + 'the record to have the same id, got `%s` and `%s`.', prevID, nextID) : void 0;\n    var prevType = (_getType = getType(prevRecord)) !== null && _getType !== void 0 ? _getType : null;\n    var nextType = (_getType2 = getType(nextRecord)) !== null && _getType2 !== void 0 ? _getType2 : null;\n    process.env.NODE_ENV !== \"production\" ? warning(isClientID(nextID) && nextID !== ROOT_ID || prevType === nextType, 'RelayModernRecord: Invalid record update, expected both versions of ' + 'record `%s` to have the same `%s` but got conflicting types `%s` ' + 'and `%s`. The GraphQL server likely violated the globally unique ' + 'id requirement by returning the same id for different objects.', prevID, TYPENAME_KEY, prevType, nextType) : void 0;\n  }\n  var prevErrorsByKey = prevRecord[ERRORS_KEY];\n  var nextErrorsByKey = nextRecord[ERRORS_KEY];\n  var updated = null;\n  if (prevErrorsByKey == null && nextErrorsByKey == null) {\n    var _updated;\n    for (var storageKey in nextRecord) {\n      if (updated || !areEqual(prevRecord[storageKey], nextRecord[storageKey])) {\n        updated = updated !== null ? updated : (0, _objectSpread2[\"default\"])({}, prevRecord);\n        updated[storageKey] = nextRecord[storageKey];\n      }\n    }\n    return (_updated = updated) !== null && _updated !== void 0 ? _updated : prevRecord;\n  }\n  for (var _storageKey2 in nextRecord) {\n    if (_storageKey2 === ERRORS_KEY) {\n      continue;\n    }\n    var nextValue = nextRecord[_storageKey2];\n    var nextErrors = nextErrorsByKey === null || nextErrorsByKey === void 0 ? void 0 : nextErrorsByKey[_storageKey2];\n    if (updated == null) {\n      var prevValue = prevRecord[_storageKey2];\n      var prevErrors = prevErrorsByKey === null || prevErrorsByKey === void 0 ? void 0 : prevErrorsByKey[_storageKey2];\n      if (areEqual(prevValue, nextValue) && areEqual(prevErrors, nextErrors)) {\n        continue;\n      }\n      updated = (0, _objectSpread2[\"default\"])({}, prevRecord);\n      if (prevErrorsByKey != null) {\n        updated[ERRORS_KEY] = (0, _objectSpread2[\"default\"])({}, prevErrorsByKey);\n      }\n    }\n    setValue(updated, _storageKey2, nextValue);\n    setErrors(updated, _storageKey2, nextErrors);\n  }\n  return (_updated2 = updated) !== null && _updated2 !== void 0 ? _updated2 : prevRecord;\n}\nfunction merge(record1, record2) {\n  if (process.env.NODE_ENV !== \"production\") {\n    var _getType3, _getType4;\n    var prevID = getDataID(record1);\n    var nextID = getDataID(record2);\n    process.env.NODE_ENV !== \"production\" ? warning(prevID === nextID, 'RelayModernRecord: Invalid record merge, expected both versions of ' + 'the record to have the same id, got `%s` and `%s`.', prevID, nextID) : void 0;\n    var prevType = (_getType3 = getType(record1)) !== null && _getType3 !== void 0 ? _getType3 : null;\n    var nextType = (_getType4 = getType(record2)) !== null && _getType4 !== void 0 ? _getType4 : null;\n    process.env.NODE_ENV !== \"production\" ? warning(isClientID(nextID) && nextID !== ROOT_ID || prevType === nextType, 'RelayModernRecord: Invalid record merge, expected both versions of ' + 'record `%s` to have the same `%s` but got conflicting types `%s` ' + 'and `%s`. The GraphQL server likely violated the globally unique ' + 'id requirement by returning the same id for different objects.', prevID, TYPENAME_KEY, prevType, nextType) : void 0;\n  }\n  if (ERRORS_KEY in record1 || ERRORS_KEY in record2) {\n    var errors1 = record1[ERRORS_KEY],\n      fields1 = (0, _objectWithoutPropertiesLoose2[\"default\"])(record1, [ERRORS_KEY].map(_toPropertyKey2[\"default\"]));\n    var errors2 = record2[ERRORS_KEY],\n      fields2 = (0, _objectWithoutPropertiesLoose2[\"default\"])(record2, [ERRORS_KEY].map(_toPropertyKey2[\"default\"]));\n    var updated = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, fields1), fields2);\n    if (errors1 == null && errors2 == null) {\n      return updated;\n    }\n    var updatedErrors = {};\n    for (var storageKey in errors1) {\n      if (fields2.hasOwnProperty(storageKey)) {\n        continue;\n      }\n      updatedErrors[storageKey] = errors1[storageKey];\n    }\n    for (var _storageKey3 in errors2) {\n      updatedErrors[_storageKey3] = errors2[_storageKey3];\n    }\n    for (var _storageKey in updatedErrors) {\n      updated[ERRORS_KEY] = updatedErrors;\n      break;\n    }\n    return updated;\n  } else {\n    return (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, record1), record2);\n  }\n}\nfunction freeze(record) {\n  deepFreeze(record);\n}\nfunction setErrors(record, storageKey, errors) {\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? warning(storageKey in record, 'RelayModernRecord: Invalid error update, `%s` should not be undefined.', storageKey) : void 0;\n  }\n  var errorsByStorageKey = record[ERRORS_KEY];\n  if (errors != null && errors.length > 0) {\n    if (errorsByStorageKey == null) {\n      record[ERRORS_KEY] = (0, _defineProperty2[\"default\"])({}, storageKey, errors);\n    } else {\n      errorsByStorageKey[storageKey] = errors;\n    }\n  } else if (errorsByStorageKey != null) {\n    if (delete errorsByStorageKey[storageKey]) {\n      for (var otherStorageKey in errorsByStorageKey) {\n        if (errorsByStorageKey.hasOwnProperty(otherStorageKey)) {\n          return;\n        }\n      }\n      delete record[ERRORS_KEY];\n    }\n  }\n}\nfunction setValue(record, storageKey, value) {\n  if (process.env.NODE_ENV !== \"production\") {\n    var prevID = getDataID(record);\n    if (storageKey === ID_KEY) {\n      process.env.NODE_ENV !== \"production\" ? warning(prevID === value, 'RelayModernRecord: Invalid field update, expected both versions of ' + 'the record to have the same id, got `%s` and `%s`.', prevID, value) : void 0;\n    } else if (storageKey === TYPENAME_KEY) {\n      var _getType5;\n      var prevType = (_getType5 = getType(record)) !== null && _getType5 !== void 0 ? _getType5 : null;\n      var nextType = value !== null && value !== void 0 ? value : null;\n      process.env.NODE_ENV !== \"production\" ? warning(isClientID(getDataID(record)) && getDataID(record) !== ROOT_ID || prevType === nextType, 'RelayModernRecord: Invalid field update, expected both versions of ' + 'record `%s` to have the same `%s` but got conflicting types `%s` ' + 'and `%s`. The GraphQL server likely violated the globally unique ' + 'id requirement by returning the same id for different objects.', prevID, TYPENAME_KEY, prevType, nextType) : void 0;\n    }\n  }\n  record[storageKey] = value;\n}\nfunction setLinkedRecordID(record, storageKey, linkedID) {\n  var link = {};\n  link[REF_KEY] = linkedID;\n  record[storageKey] = link;\n}\nfunction setLinkedRecordIDs(record, storageKey, linkedIDs) {\n  var links = {};\n  links[REFS_KEY] = linkedIDs;\n  record[storageKey] = links;\n}\nfunction setActorLinkedRecordID(record, storageKey, actorIdentifier, linkedID) {\n  var link = {};\n  link[REF_KEY] = linkedID;\n  link[ACTOR_IDENTIFIER_KEY] = actorIdentifier;\n  record[storageKey] = link;\n}\nfunction getActorLinkedRecordID(record, storageKey) {\n  var link = record[storageKey];\n  if (link == null) {\n    return link;\n  }\n  !(typeof link === 'object' && typeof link[REF_KEY] === 'string' && link[ACTOR_IDENTIFIER_KEY] != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getActorLinkedRecordID(): Expected `%s.%s` to be an actor specific linked ID, ' + 'was `%s`.', record[ID_KEY], storageKey, JSON.stringify(link)) : invariant(false) : void 0;\n  return [link[ACTOR_IDENTIFIER_KEY], link[REF_KEY]];\n}\nfunction getResolverLinkedRecordID(record, typeName) {\n  var id = getValue(record, RELAY_RESOLVER_VALUE_KEY);\n  if (id == null || isSuspenseSentinel(id)) {\n    return null;\n  }\n  if (typeof id === 'object') {\n    id = id.id;\n  }\n  !(typeof id === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getResolverLinkedRecordID(): Expected value to be a linked ID, ' + 'was `%s`.', JSON.stringify(id)) : invariant(false) : void 0;\n  return generateClientObjectClientID(typeName, id);\n}\nfunction getResolverLinkedRecordIDs(record, typeName) {\n  var resolverValue = getValue(record, RELAY_RESOLVER_VALUE_KEY);\n  if (resolverValue == null || isSuspenseSentinel(resolverValue)) {\n    return null;\n  }\n  !Array.isArray(resolverValue) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getResolverLinkedRecordIDs(): Expected value to be an array of linked IDs, ' + 'was `%s`.', JSON.stringify(resolverValue)) : invariant(false) : void 0;\n  return resolverValue.map(function (id) {\n    if (id == null) {\n      return null;\n    }\n    if (typeof id === 'object') {\n      id = id.id;\n    }\n    !(typeof id === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getResolverLinkedRecordIDs(): Expected item within resolver linked field to be a DataID, ' + 'was `%s`.', JSON.stringify(id)) : invariant(false) : void 0;\n    return generateClientObjectClientID(typeName, id);\n  });\n}\nfunction toJSON(record) {\n  return record;\n}\nmodule.exports = {\n  clone: clone,\n  copyFields: copyFields,\n  create: create,\n  freeze: freeze,\n  fromObject: fromObject,\n  getDataID: getDataID,\n  getErrors: getErrors,\n  getFields: getFields,\n  getInvalidationEpoch: getInvalidationEpoch,\n  getLinkedRecordID: getLinkedRecordID,\n  getLinkedRecordIDs: getLinkedRecordIDs,\n  getType: getType,\n  getValue: getValue,\n  hasValue: hasValue,\n  merge: merge,\n  setErrors: setErrors,\n  setValue: setValue,\n  setLinkedRecordID: setLinkedRecordID,\n  setLinkedRecordIDs: setLinkedRecordIDs,\n  update: update,\n  getActorLinkedRecordID: getActorLinkedRecordID,\n  setActorLinkedRecordID: setActorLinkedRecordID,\n  getResolverLinkedRecordID: getResolverLinkedRecordID,\n  getResolverLinkedRecordIDs: getResolverLinkedRecordIDs,\n  toJSON: toJSON\n};","map":{"version":3,"names":["_interopRequireDefault","require","_defineProperty2","_objectWithoutPropertiesLoose2","_toPropertyKey2","_objectSpread2","deepFreeze","_require","generateClientObjectClientID","isClientID","_require2","isSuspenseSentinel","_require3","ACTOR_IDENTIFIER_KEY","ERRORS_KEY","ID_KEY","INVALIDATED_AT_KEY","REF_KEY","REFS_KEY","RELAY_RESOLVER_VALUE_KEY","ROOT_ID","TYPENAME_KEY","areEqual","invariant","warning","clone","record","copyFields","source","sink","key","hasOwnProperty","create","dataID","typeName","fromObject","json","getDataID","getFields","Object","keys","filter","field","getType","getErrors","storageKey","_record$ERRORS_KEY","getValue","value","process","env","NODE_ENV","hasValue","getLinkedRecordID","maybeLink","link","JSON","stringify","undefined","getLinkedRecordIDs","links","Array","isArray","getInvalidationEpoch","invalidatedAt","update","prevRecord","nextRecord","_updated2","_getType","_getType2","prevID","nextID","prevType","nextType","prevErrorsByKey","nextErrorsByKey","updated","_updated","_storageKey2","nextValue","nextErrors","prevValue","prevErrors","setValue","setErrors","merge","record1","record2","_getType3","_getType4","errors1","fields1","map","errors2","fields2","updatedErrors","_storageKey3","_storageKey","freeze","errors","errorsByStorageKey","length","otherStorageKey","_getType5","setLinkedRecordID","linkedID","setLinkedRecordIDs","linkedIDs","setActorLinkedRecordID","actorIdentifier","getActorLinkedRecordID","getResolverLinkedRecordID","id","getResolverLinkedRecordIDs","resolverValue","toJSON","module","exports"],"sources":["/Users/joaoluismoraes/Desktop/woovi-challenge/web/node_modules/relay-runtime/lib/store/RelayModernRecord.js"],"sourcesContent":["'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _toPropertyKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toPropertyKey\"));\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\nvar deepFreeze = require('../util/deepFreeze');\nvar _require = require('./ClientID'),\n  generateClientObjectClientID = _require.generateClientObjectClientID,\n  isClientID = _require.isClientID;\nvar _require2 = require('./experimental-live-resolvers/LiveResolverSuspenseSentinel'),\n  isSuspenseSentinel = _require2.isSuspenseSentinel;\nvar _require3 = require('./RelayStoreUtils'),\n  ACTOR_IDENTIFIER_KEY = _require3.ACTOR_IDENTIFIER_KEY,\n  ERRORS_KEY = _require3.ERRORS_KEY,\n  ID_KEY = _require3.ID_KEY,\n  INVALIDATED_AT_KEY = _require3.INVALIDATED_AT_KEY,\n  REF_KEY = _require3.REF_KEY,\n  REFS_KEY = _require3.REFS_KEY,\n  RELAY_RESOLVER_VALUE_KEY = _require3.RELAY_RESOLVER_VALUE_KEY,\n  ROOT_ID = _require3.ROOT_ID,\n  TYPENAME_KEY = _require3.TYPENAME_KEY;\nvar areEqual = require(\"fbjs/lib/areEqual\");\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\nfunction clone(record) {\n  return (0, _objectSpread2[\"default\"])({}, record);\n}\nfunction copyFields(source, sink) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      if (key !== ID_KEY && key !== TYPENAME_KEY) {\n        sink[key] = source[key];\n      }\n    }\n  }\n}\nfunction create(dataID, typeName) {\n  var record = {};\n  record[ID_KEY] = dataID;\n  record[TYPENAME_KEY] = typeName;\n  return record;\n}\nfunction fromObject(json) {\n  return json;\n}\nfunction getDataID(record) {\n  return record[ID_KEY];\n}\nfunction getFields(record) {\n  if (ERRORS_KEY in record) {\n    return Object.keys(record).filter(function (field) {\n      return field !== ERRORS_KEY;\n    });\n  }\n  return Object.keys(record);\n}\nfunction getType(record) {\n  return record[TYPENAME_KEY];\n}\nfunction getErrors(record, storageKey) {\n  var _record$ERRORS_KEY;\n  return (_record$ERRORS_KEY = record[ERRORS_KEY]) === null || _record$ERRORS_KEY === void 0 ? void 0 : _record$ERRORS_KEY[storageKey];\n}\nfunction getValue(record, storageKey) {\n  var value = record[storageKey];\n  if (value && typeof value === 'object') {\n    !(!value.hasOwnProperty(REF_KEY) && !value.hasOwnProperty(REFS_KEY)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getValue(): Expected a scalar (non-link) value for `%s.%s` ' + 'but found %s.', record[ID_KEY], storageKey, value.hasOwnProperty(REF_KEY) ? 'a linked record' : 'plural linked records') : invariant(false) : void 0;\n  }\n  return value;\n}\nfunction hasValue(record, storageKey) {\n  return storageKey in record;\n}\nfunction getLinkedRecordID(record, storageKey) {\n  var maybeLink = record[storageKey];\n  if (maybeLink == null) {\n    return maybeLink;\n  }\n  var link = maybeLink;\n  !(typeof link === 'object' && link && typeof link[REF_KEY] === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getLinkedRecordID(): Expected `%s.%s` to be a linked ID, ' + 'was `%s`.%s', record[ID_KEY], storageKey, JSON.stringify(link), typeof link === 'object' && link[REFS_KEY] !== undefined ? ' It appears to be a plural linked record: did you mean to call ' + 'getLinkedRecords() instead of getLinkedRecord()?' : '') : invariant(false) : void 0;\n  return link[REF_KEY];\n}\nfunction getLinkedRecordIDs(record, storageKey) {\n  var links = record[storageKey];\n  if (links == null) {\n    return links;\n  }\n  !(typeof links === 'object' && Array.isArray(links[REFS_KEY])) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getLinkedRecordIDs(): Expected `%s.%s` to contain an array ' + 'of linked IDs, got `%s`.%s', record[ID_KEY], storageKey, JSON.stringify(links), typeof links === 'object' && links[REF_KEY] !== undefined ? ' It appears to be a singular linked record: did you mean to call ' + 'getLinkedRecord() instead of getLinkedRecords()?' : '') : invariant(false) : void 0;\n  return links[REFS_KEY];\n}\nfunction getInvalidationEpoch(record) {\n  if (record == null) {\n    return null;\n  }\n  var invalidatedAt = record[INVALIDATED_AT_KEY];\n  if (typeof invalidatedAt !== 'number') {\n    return null;\n  }\n  return invalidatedAt;\n}\nfunction update(prevRecord, nextRecord) {\n  var _updated2;\n  if (process.env.NODE_ENV !== \"production\") {\n    var _getType, _getType2;\n    var prevID = getDataID(prevRecord);\n    var nextID = getDataID(nextRecord);\n    process.env.NODE_ENV !== \"production\" ? warning(prevID === nextID, 'RelayModernRecord: Invalid record update, expected both versions of ' + 'the record to have the same id, got `%s` and `%s`.', prevID, nextID) : void 0;\n    var prevType = (_getType = getType(prevRecord)) !== null && _getType !== void 0 ? _getType : null;\n    var nextType = (_getType2 = getType(nextRecord)) !== null && _getType2 !== void 0 ? _getType2 : null;\n    process.env.NODE_ENV !== \"production\" ? warning(isClientID(nextID) && nextID !== ROOT_ID || prevType === nextType, 'RelayModernRecord: Invalid record update, expected both versions of ' + 'record `%s` to have the same `%s` but got conflicting types `%s` ' + 'and `%s`. The GraphQL server likely violated the globally unique ' + 'id requirement by returning the same id for different objects.', prevID, TYPENAME_KEY, prevType, nextType) : void 0;\n  }\n  var prevErrorsByKey = prevRecord[ERRORS_KEY];\n  var nextErrorsByKey = nextRecord[ERRORS_KEY];\n  var updated = null;\n  if (prevErrorsByKey == null && nextErrorsByKey == null) {\n    var _updated;\n    for (var storageKey in nextRecord) {\n      if (updated || !areEqual(prevRecord[storageKey], nextRecord[storageKey])) {\n        updated = updated !== null ? updated : (0, _objectSpread2[\"default\"])({}, prevRecord);\n        updated[storageKey] = nextRecord[storageKey];\n      }\n    }\n    return (_updated = updated) !== null && _updated !== void 0 ? _updated : prevRecord;\n  }\n  for (var _storageKey2 in nextRecord) {\n    if (_storageKey2 === ERRORS_KEY) {\n      continue;\n    }\n    var nextValue = nextRecord[_storageKey2];\n    var nextErrors = nextErrorsByKey === null || nextErrorsByKey === void 0 ? void 0 : nextErrorsByKey[_storageKey2];\n    if (updated == null) {\n      var prevValue = prevRecord[_storageKey2];\n      var prevErrors = prevErrorsByKey === null || prevErrorsByKey === void 0 ? void 0 : prevErrorsByKey[_storageKey2];\n      if (areEqual(prevValue, nextValue) && areEqual(prevErrors, nextErrors)) {\n        continue;\n      }\n      updated = (0, _objectSpread2[\"default\"])({}, prevRecord);\n      if (prevErrorsByKey != null) {\n        updated[ERRORS_KEY] = (0, _objectSpread2[\"default\"])({}, prevErrorsByKey);\n      }\n    }\n    setValue(updated, _storageKey2, nextValue);\n    setErrors(updated, _storageKey2, nextErrors);\n  }\n  return (_updated2 = updated) !== null && _updated2 !== void 0 ? _updated2 : prevRecord;\n}\nfunction merge(record1, record2) {\n  if (process.env.NODE_ENV !== \"production\") {\n    var _getType3, _getType4;\n    var prevID = getDataID(record1);\n    var nextID = getDataID(record2);\n    process.env.NODE_ENV !== \"production\" ? warning(prevID === nextID, 'RelayModernRecord: Invalid record merge, expected both versions of ' + 'the record to have the same id, got `%s` and `%s`.', prevID, nextID) : void 0;\n    var prevType = (_getType3 = getType(record1)) !== null && _getType3 !== void 0 ? _getType3 : null;\n    var nextType = (_getType4 = getType(record2)) !== null && _getType4 !== void 0 ? _getType4 : null;\n    process.env.NODE_ENV !== \"production\" ? warning(isClientID(nextID) && nextID !== ROOT_ID || prevType === nextType, 'RelayModernRecord: Invalid record merge, expected both versions of ' + 'record `%s` to have the same `%s` but got conflicting types `%s` ' + 'and `%s`. The GraphQL server likely violated the globally unique ' + 'id requirement by returning the same id for different objects.', prevID, TYPENAME_KEY, prevType, nextType) : void 0;\n  }\n  if (ERRORS_KEY in record1 || ERRORS_KEY in record2) {\n    var errors1 = record1[ERRORS_KEY],\n      fields1 = (0, _objectWithoutPropertiesLoose2[\"default\"])(record1, [ERRORS_KEY].map(_toPropertyKey2[\"default\"]));\n    var errors2 = record2[ERRORS_KEY],\n      fields2 = (0, _objectWithoutPropertiesLoose2[\"default\"])(record2, [ERRORS_KEY].map(_toPropertyKey2[\"default\"]));\n    var updated = (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, fields1), fields2);\n    if (errors1 == null && errors2 == null) {\n      return updated;\n    }\n    var updatedErrors = {};\n    for (var storageKey in errors1) {\n      if (fields2.hasOwnProperty(storageKey)) {\n        continue;\n      }\n      updatedErrors[storageKey] = errors1[storageKey];\n    }\n    for (var _storageKey3 in errors2) {\n      updatedErrors[_storageKey3] = errors2[_storageKey3];\n    }\n    for (var _storageKey in updatedErrors) {\n      updated[ERRORS_KEY] = updatedErrors;\n      break;\n    }\n    return updated;\n  } else {\n    return (0, _objectSpread2[\"default\"])((0, _objectSpread2[\"default\"])({}, record1), record2);\n  }\n}\nfunction freeze(record) {\n  deepFreeze(record);\n}\nfunction setErrors(record, storageKey, errors) {\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? warning(storageKey in record, 'RelayModernRecord: Invalid error update, `%s` should not be undefined.', storageKey) : void 0;\n  }\n  var errorsByStorageKey = record[ERRORS_KEY];\n  if (errors != null && errors.length > 0) {\n    if (errorsByStorageKey == null) {\n      record[ERRORS_KEY] = (0, _defineProperty2[\"default\"])({}, storageKey, errors);\n    } else {\n      errorsByStorageKey[storageKey] = errors;\n    }\n  } else if (errorsByStorageKey != null) {\n    if (delete errorsByStorageKey[storageKey]) {\n      for (var otherStorageKey in errorsByStorageKey) {\n        if (errorsByStorageKey.hasOwnProperty(otherStorageKey)) {\n          return;\n        }\n      }\n      delete record[ERRORS_KEY];\n    }\n  }\n}\nfunction setValue(record, storageKey, value) {\n  if (process.env.NODE_ENV !== \"production\") {\n    var prevID = getDataID(record);\n    if (storageKey === ID_KEY) {\n      process.env.NODE_ENV !== \"production\" ? warning(prevID === value, 'RelayModernRecord: Invalid field update, expected both versions of ' + 'the record to have the same id, got `%s` and `%s`.', prevID, value) : void 0;\n    } else if (storageKey === TYPENAME_KEY) {\n      var _getType5;\n      var prevType = (_getType5 = getType(record)) !== null && _getType5 !== void 0 ? _getType5 : null;\n      var nextType = value !== null && value !== void 0 ? value : null;\n      process.env.NODE_ENV !== \"production\" ? warning(isClientID(getDataID(record)) && getDataID(record) !== ROOT_ID || prevType === nextType, 'RelayModernRecord: Invalid field update, expected both versions of ' + 'record `%s` to have the same `%s` but got conflicting types `%s` ' + 'and `%s`. The GraphQL server likely violated the globally unique ' + 'id requirement by returning the same id for different objects.', prevID, TYPENAME_KEY, prevType, nextType) : void 0;\n    }\n  }\n  record[storageKey] = value;\n}\nfunction setLinkedRecordID(record, storageKey, linkedID) {\n  var link = {};\n  link[REF_KEY] = linkedID;\n  record[storageKey] = link;\n}\nfunction setLinkedRecordIDs(record, storageKey, linkedIDs) {\n  var links = {};\n  links[REFS_KEY] = linkedIDs;\n  record[storageKey] = links;\n}\nfunction setActorLinkedRecordID(record, storageKey, actorIdentifier, linkedID) {\n  var link = {};\n  link[REF_KEY] = linkedID;\n  link[ACTOR_IDENTIFIER_KEY] = actorIdentifier;\n  record[storageKey] = link;\n}\nfunction getActorLinkedRecordID(record, storageKey) {\n  var link = record[storageKey];\n  if (link == null) {\n    return link;\n  }\n  !(typeof link === 'object' && typeof link[REF_KEY] === 'string' && link[ACTOR_IDENTIFIER_KEY] != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getActorLinkedRecordID(): Expected `%s.%s` to be an actor specific linked ID, ' + 'was `%s`.', record[ID_KEY], storageKey, JSON.stringify(link)) : invariant(false) : void 0;\n  return [link[ACTOR_IDENTIFIER_KEY], link[REF_KEY]];\n}\nfunction getResolverLinkedRecordID(record, typeName) {\n  var id = getValue(record, RELAY_RESOLVER_VALUE_KEY);\n  if (id == null || isSuspenseSentinel(id)) {\n    return null;\n  }\n  if (typeof id === 'object') {\n    id = id.id;\n  }\n  !(typeof id === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getResolverLinkedRecordID(): Expected value to be a linked ID, ' + 'was `%s`.', JSON.stringify(id)) : invariant(false) : void 0;\n  return generateClientObjectClientID(typeName, id);\n}\nfunction getResolverLinkedRecordIDs(record, typeName) {\n  var resolverValue = getValue(record, RELAY_RESOLVER_VALUE_KEY);\n  if (resolverValue == null || isSuspenseSentinel(resolverValue)) {\n    return null;\n  }\n  !Array.isArray(resolverValue) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getResolverLinkedRecordIDs(): Expected value to be an array of linked IDs, ' + 'was `%s`.', JSON.stringify(resolverValue)) : invariant(false) : void 0;\n  return resolverValue.map(function (id) {\n    if (id == null) {\n      return null;\n    }\n    if (typeof id === 'object') {\n      id = id.id;\n    }\n    !(typeof id === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernRecord.getResolverLinkedRecordIDs(): Expected item within resolver linked field to be a DataID, ' + 'was `%s`.', JSON.stringify(id)) : invariant(false) : void 0;\n    return generateClientObjectClientID(typeName, id);\n  });\n}\nfunction toJSON(record) {\n  return record;\n}\nmodule.exports = {\n  clone: clone,\n  copyFields: copyFields,\n  create: create,\n  freeze: freeze,\n  fromObject: fromObject,\n  getDataID: getDataID,\n  getErrors: getErrors,\n  getFields: getFields,\n  getInvalidationEpoch: getInvalidationEpoch,\n  getLinkedRecordID: getLinkedRecordID,\n  getLinkedRecordIDs: getLinkedRecordIDs,\n  getType: getType,\n  getValue: getValue,\n  hasValue: hasValue,\n  merge: merge,\n  setErrors: setErrors,\n  setValue: setValue,\n  setLinkedRecordID: setLinkedRecordID,\n  setLinkedRecordIDs: setLinkedRecordIDs,\n  update: update,\n  getActorLinkedRecordID: getActorLinkedRecordID,\n  setActorLinkedRecordID: setActorLinkedRecordID,\n  getResolverLinkedRecordID: getResolverLinkedRecordID,\n  getResolverLinkedRecordIDs: getResolverLinkedRecordIDs,\n  toJSON: toJSON\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}