{"ast":null,"code":"'use strict';\n\nvar _require = require('../query/GraphQLTag'),\n  getRequest = _require.getRequest;\nvar isRelayModernEnvironment = require('../store/isRelayModernEnvironment');\nvar _require2 = require('../store/RelayModernOperationDescriptor'),\n  createOperationDescriptor = _require2.createOperationDescriptor;\nvar RelayDeclarativeMutationConfig = require('./RelayDeclarativeMutationConfig');\nvar invariant = require('invariant');\nfunction applyOptimisticMutation(environment, config) {\n  !isRelayModernEnvironment(environment) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'commitMutation: expected `environment` to be an instance of ' + '`RelayModernEnvironment`.') : invariant(false) : void 0;\n  var mutation = getRequest(config.mutation);\n  if (mutation.params.operationKind !== 'mutation') {\n    throw new Error('commitMutation: Expected mutation operation');\n  }\n  var optimisticUpdater = config.optimisticUpdater;\n  var configs = config.configs,\n    optimisticResponse = config.optimisticResponse,\n    variables = config.variables;\n  var operation = createOperationDescriptor(mutation, variables);\n  if (configs) {\n    var _RelayDeclarativeMuta = RelayDeclarativeMutationConfig.convert(configs, mutation, optimisticUpdater);\n    optimisticUpdater = _RelayDeclarativeMuta.optimisticUpdater;\n  }\n  return environment.applyMutation({\n    operation: operation,\n    response: optimisticResponse,\n    updater: optimisticUpdater\n  });\n}\nmodule.exports = applyOptimisticMutation;","map":{"version":3,"names":["_require","require","getRequest","isRelayModernEnvironment","_require2","createOperationDescriptor","RelayDeclarativeMutationConfig","invariant","applyOptimisticMutation","environment","config","process","env","NODE_ENV","mutation","params","operationKind","Error","optimisticUpdater","configs","optimisticResponse","variables","operation","_RelayDeclarativeMuta","convert","applyMutation","response","updater","module","exports"],"sources":["/Users/joaoluismoraes/Desktop/woovi-challenge/web/node_modules/relay-runtime/lib/mutations/applyOptimisticMutation.js"],"sourcesContent":["'use strict';\n\nvar _require = require('../query/GraphQLTag'),\n  getRequest = _require.getRequest;\nvar isRelayModernEnvironment = require('../store/isRelayModernEnvironment');\nvar _require2 = require('../store/RelayModernOperationDescriptor'),\n  createOperationDescriptor = _require2.createOperationDescriptor;\nvar RelayDeclarativeMutationConfig = require('./RelayDeclarativeMutationConfig');\nvar invariant = require('invariant');\nfunction applyOptimisticMutation(environment, config) {\n  !isRelayModernEnvironment(environment) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'commitMutation: expected `environment` to be an instance of ' + '`RelayModernEnvironment`.') : invariant(false) : void 0;\n  var mutation = getRequest(config.mutation);\n  if (mutation.params.operationKind !== 'mutation') {\n    throw new Error('commitMutation: Expected mutation operation');\n  }\n  var optimisticUpdater = config.optimisticUpdater;\n  var configs = config.configs,\n    optimisticResponse = config.optimisticResponse,\n    variables = config.variables;\n  var operation = createOperationDescriptor(mutation, variables);\n  if (configs) {\n    var _RelayDeclarativeMuta = RelayDeclarativeMutationConfig.convert(configs, mutation, optimisticUpdater);\n    optimisticUpdater = _RelayDeclarativeMuta.optimisticUpdater;\n  }\n  return environment.applyMutation({\n    operation: operation,\n    response: optimisticResponse,\n    updater: optimisticUpdater\n  });\n}\nmodule.exports = applyOptimisticMutation;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,QAAQ,GAAGC,OAAO,CAAC,qBAAqB,CAAC;EAC3CC,UAAU,GAAGF,QAAQ,CAACE,UAAU;AAClC,IAAIC,wBAAwB,GAAGF,OAAO,CAAC,mCAAmC,CAAC;AAC3E,IAAIG,SAAS,GAAGH,OAAO,CAAC,yCAAyC,CAAC;EAChEI,yBAAyB,GAAGD,SAAS,CAACC,yBAAyB;AACjE,IAAIC,8BAA8B,GAAGL,OAAO,CAAC,kCAAkC,CAAC;AAChF,IAAIM,SAAS,GAAGN,OAAO,CAAC,WAAW,CAAC;AACpC,SAASO,uBAAuBA,CAACC,WAAW,EAAEC,MAAM,EAAE;EACpD,CAACP,wBAAwB,CAACM,WAAW,CAAC,GAAGE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGN,SAAS,CAAC,KAAK,EAAE,8DAA8D,GAAG,2BAA2B,CAAC,GAAGA,SAAS,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;EAC3N,IAAIO,QAAQ,GAAGZ,UAAU,CAACQ,MAAM,CAACI,QAAQ,CAAC;EAC1C,IAAIA,QAAQ,CAACC,MAAM,CAACC,aAAa,KAAK,UAAU,EAAE;IAChD,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,IAAIC,iBAAiB,GAAGR,MAAM,CAACQ,iBAAiB;EAChD,IAAIC,OAAO,GAAGT,MAAM,CAACS,OAAO;IAC1BC,kBAAkB,GAAGV,MAAM,CAACU,kBAAkB;IAC9CC,SAAS,GAAGX,MAAM,CAACW,SAAS;EAC9B,IAAIC,SAAS,GAAGjB,yBAAyB,CAACS,QAAQ,EAAEO,SAAS,CAAC;EAC9D,IAAIF,OAAO,EAAE;IACX,IAAII,qBAAqB,GAAGjB,8BAA8B,CAACkB,OAAO,CAACL,OAAO,EAAEL,QAAQ,EAAEI,iBAAiB,CAAC;IACxGA,iBAAiB,GAAGK,qBAAqB,CAACL,iBAAiB;EAC7D;EACA,OAAOT,WAAW,CAACgB,aAAa,CAAC;IAC/BH,SAAS,EAAEA,SAAS;IACpBI,QAAQ,EAAEN,kBAAkB;IAC5BO,OAAO,EAAET;EACX,CAAC,CAAC;AACJ;AACAU,MAAM,CAACC,OAAO,GAAGrB,uBAAuB"},"metadata":{},"sourceType":"script","externalDependencies":[]}