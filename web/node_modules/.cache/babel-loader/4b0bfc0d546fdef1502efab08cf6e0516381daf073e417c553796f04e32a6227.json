{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar invariant = require('invariant');\nvar _require = require('relay-runtime'),\n  fetchQuery = _require.__internal.fetchQuery,\n  createOperationDescriptor = _require.createOperationDescriptor,\n  isRelayModernEnvironment = _require.isRelayModernEnvironment;\nvar ReactRelayQueryFetcher = /*#__PURE__*/function () {\n  function ReactRelayQueryFetcher(args) {\n    (0, _defineProperty2[\"default\"])(this, \"_selectionReferences\", []);\n    (0, _defineProperty2[\"default\"])(this, \"_didFetchFinish\", false);\n    if (args != null) {\n      this._cacheSelectionReference = args.cacheSelectionReference;\n      this._selectionReferences = args.selectionReferences;\n    }\n  }\n  var _proto = ReactRelayQueryFetcher.prototype;\n  _proto.getSelectionReferences = function getSelectionReferences() {\n    return {\n      cacheSelectionReference: this._cacheSelectionReference,\n      selectionReferences: this._selectionReferences\n    };\n  };\n  _proto.lookupInStore = function lookupInStore(environment, operation, fetchPolicy) {\n    if (fetchPolicy === 'store-and-network' || fetchPolicy === 'store-or-network') {\n      if (environment.check(operation).status === 'available') {\n        this._retainCachedOperation(environment, operation);\n        return environment.lookup(operation.fragment);\n      }\n    }\n    return null;\n  };\n  _proto.getFetchResult = function getFetchResult() {\n    if (this._didFetchFinish) {\n      if (this._error != null) {\n        return {\n          error: this._error\n        };\n      } else if (this._snapshot != null) {\n        return {\n          snapshot: this._snapshot\n        };\n      }\n    } else {\n      return null;\n    }\n  };\n  _proto.execute = function execute(_ref) {\n    var _this = this;\n    var environment = _ref.environment,\n      operation = _ref.operation,\n      _ref$preservePrevious = _ref.preservePreviousReferences,\n      preservePreviousReferences = _ref$preservePrevious === void 0 ? false : _ref$preservePrevious;\n    var reference = environment.retain(operation);\n    var error = function error() {\n      _this._selectionReferences = _this._selectionReferences.concat(reference);\n    };\n    var complete = function complete() {\n      if (!preservePreviousReferences) {\n        _this.disposeSelectionReferences();\n      }\n      _this._selectionReferences = _this._selectionReferences.concat(reference);\n    };\n    var unsubscribe = function unsubscribe() {\n      _this._selectionReferences = _this._selectionReferences.concat(reference);\n    };\n    if (!isRelayModernEnvironment(environment)) {\n      return environment.execute({\n        operation: operation\n      })[\"do\"]({\n        error: error,\n        complete: complete,\n        unsubscribe: unsubscribe\n      });\n    }\n    return fetchQuery(environment, operation)[\"do\"]({\n      error: error,\n      complete: complete,\n      unsubscribe: unsubscribe\n    });\n  };\n  _proto.setOnDataChange = function setOnDataChange(onDataChange) {\n    !this._fetchOptions ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayQueryFetcher: `setOnDataChange` should have been called after having called `fetch`') : invariant(false) : void 0;\n    if (typeof onDataChange === 'function') {\n      this._fetchOptions.onDataChangeCallbacks = this._fetchOptions.onDataChangeCallbacks || [];\n      this._fetchOptions.onDataChangeCallbacks.push(onDataChange);\n      if (this._didFetchFinish) {\n        if (this._error != null) {\n          onDataChange({\n            error: this._error\n          });\n        } else if (this._snapshot != null) {\n          onDataChange({\n            snapshot: this._snapshot\n          });\n        }\n      }\n    }\n  };\n  _proto.fetch = function fetch(fetchOptions, cacheConfigOverride) {\n    var _this2 = this;\n    var environment = fetchOptions.environment,\n      operation = fetchOptions.operation,\n      onDataChange = fetchOptions.onDataChange;\n    var fetchHasReturned = false;\n    var _error;\n    this.disposeRequest();\n    var oldOnDataChangeCallbacks = this._fetchOptions && this._fetchOptions.onDataChangeCallbacks;\n    this._fetchOptions = {\n      environment: environment,\n      onDataChangeCallbacks: oldOnDataChangeCallbacks || [],\n      operation: operation\n    };\n    if (onDataChange && this._fetchOptions.onDataChangeCallbacks.indexOf(onDataChange) === -1) {\n      this._fetchOptions.onDataChangeCallbacks.push(onDataChange);\n    }\n    var operationOverride = cacheConfigOverride ? createOperationDescriptor(operation.request.node, operation.request.variables, cacheConfigOverride) : operation;\n    var request = this.execute({\n      environment: environment,\n      operation: operationOverride\n    })[\"finally\"](function () {\n      _this2._pendingRequest = null;\n    }).subscribe({\n      next: function next() {\n        _this2._didFetchFinish = true;\n        _this2._error = null;\n        _this2._onQueryDataAvailable({\n          notifyFirstResult: fetchHasReturned\n        });\n      },\n      error: function error(err) {\n        _this2._didFetchFinish = true;\n        _this2._error = err;\n        _this2._snapshot = null;\n        var onDataChangeCallbacks = _this2._fetchOptions && _this2._fetchOptions.onDataChangeCallbacks;\n        if (fetchHasReturned) {\n          if (onDataChangeCallbacks) {\n            onDataChangeCallbacks.forEach(function (onDataChange) {\n              onDataChange({\n                error: err\n              });\n            });\n          }\n        } else {\n          _error = err;\n        }\n      }\n    });\n    this._pendingRequest = {\n      dispose: function dispose() {\n        request.unsubscribe();\n      }\n    };\n    fetchHasReturned = true;\n    if (_error) {\n      throw _error;\n    }\n    return this._snapshot;\n  };\n  _proto.retry = function retry(cacheConfigOverride) {\n    !this._fetchOptions ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayQueryFetcher: `retry` should be called after having called `fetch`') : invariant(false) : void 0;\n    return this.fetch({\n      environment: this._fetchOptions.environment,\n      operation: this._fetchOptions.operation,\n      onDataChange: null\n    }, cacheConfigOverride);\n  };\n  _proto.dispose = function dispose() {\n    this.disposeRequest();\n    this.disposeSelectionReferences();\n  };\n  _proto.disposeRequest = function disposeRequest() {\n    this._error = null;\n    this._snapshot = null;\n    if (this._pendingRequest) {\n      this._pendingRequest.dispose();\n    }\n    if (this._rootSubscription) {\n      this._rootSubscription.dispose();\n      this._rootSubscription = null;\n    }\n  };\n  _proto._retainCachedOperation = function _retainCachedOperation(environment, operation) {\n    this._disposeCacheSelectionReference();\n    this._cacheSelectionReference = environment.retain(operation);\n  };\n  _proto._disposeCacheSelectionReference = function _disposeCacheSelectionReference() {\n    this._cacheSelectionReference && this._cacheSelectionReference.dispose();\n    this._cacheSelectionReference = null;\n  };\n  _proto.disposeSelectionReferences = function disposeSelectionReferences() {\n    this._disposeCacheSelectionReference();\n    this._selectionReferences.forEach(function (r) {\n      return r.dispose();\n    });\n    this._selectionReferences = [];\n  };\n  _proto._onQueryDataAvailable = function _onQueryDataAvailable(_ref2) {\n    var _this3 = this;\n    var notifyFirstResult = _ref2.notifyFirstResult;\n    !this._fetchOptions ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayQueryFetcher: `_onQueryDataAvailable` should have been called after having called `fetch`') : invariant(false) : void 0;\n    var _this$_fetchOptions = this._fetchOptions,\n      environment = _this$_fetchOptions.environment,\n      onDataChangeCallbacks = _this$_fetchOptions.onDataChangeCallbacks,\n      operation = _this$_fetchOptions.operation;\n    if (this._snapshot) {\n      return;\n    }\n    this._snapshot = environment.lookup(operation.fragment);\n    this._rootSubscription = environment.subscribe(this._snapshot, function (snapshot) {\n      if (_this3._fetchOptions != null) {\n        var maybeNewOnDataChangeCallbacks = _this3._fetchOptions.onDataChangeCallbacks;\n        if (Array.isArray(maybeNewOnDataChangeCallbacks)) {\n          maybeNewOnDataChangeCallbacks.forEach(function (onDataChange) {\n            return onDataChange({\n              snapshot: snapshot\n            });\n          });\n        }\n      }\n    });\n    if (this._snapshot && notifyFirstResult && Array.isArray(onDataChangeCallbacks)) {\n      var snapshot = this._snapshot;\n      onDataChangeCallbacks.forEach(function (onDataChange) {\n        return onDataChange({\n          snapshot: snapshot\n        });\n      });\n    }\n  };\n  return ReactRelayQueryFetcher;\n}();\nmodule.exports = ReactRelayQueryFetcher;","map":{"version":3,"names":["_interopRequireDefault","require","_defineProperty2","invariant","_require","fetchQuery","__internal","createOperationDescriptor","isRelayModernEnvironment","ReactRelayQueryFetcher","args","_cacheSelectionReference","cacheSelectionReference","_selectionReferences","selectionReferences","_proto","prototype","getSelectionReferences","lookupInStore","environment","operation","fetchPolicy","check","status","_retainCachedOperation","lookup","fragment","getFetchResult","_didFetchFinish","_error","error","_snapshot","snapshot","execute","_ref","_this","_ref$preservePrevious","preservePreviousReferences","reference","retain","concat","complete","disposeSelectionReferences","unsubscribe","setOnDataChange","onDataChange","_fetchOptions","process","env","NODE_ENV","onDataChangeCallbacks","push","fetch","fetchOptions","cacheConfigOverride","_this2","fetchHasReturned","disposeRequest","oldOnDataChangeCallbacks","indexOf","operationOverride","request","node","variables","_pendingRequest","subscribe","next","_onQueryDataAvailable","notifyFirstResult","err","forEach","dispose","retry","_rootSubscription","_disposeCacheSelectionReference","r","_ref2","_this3","_this$_fetchOptions","maybeNewOnDataChangeCallbacks","Array","isArray","module","exports"],"sources":["/Users/joaoluismoraes/Desktop/woovi-challenge/web/node_modules/react-relay/lib/ReactRelayQueryFetcher.js"],"sourcesContent":["'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar invariant = require('invariant');\nvar _require = require('relay-runtime'),\n  fetchQuery = _require.__internal.fetchQuery,\n  createOperationDescriptor = _require.createOperationDescriptor,\n  isRelayModernEnvironment = _require.isRelayModernEnvironment;\nvar ReactRelayQueryFetcher = /*#__PURE__*/function () {\n  function ReactRelayQueryFetcher(args) {\n    (0, _defineProperty2[\"default\"])(this, \"_selectionReferences\", []);\n    (0, _defineProperty2[\"default\"])(this, \"_didFetchFinish\", false);\n    if (args != null) {\n      this._cacheSelectionReference = args.cacheSelectionReference;\n      this._selectionReferences = args.selectionReferences;\n    }\n  }\n  var _proto = ReactRelayQueryFetcher.prototype;\n  _proto.getSelectionReferences = function getSelectionReferences() {\n    return {\n      cacheSelectionReference: this._cacheSelectionReference,\n      selectionReferences: this._selectionReferences\n    };\n  };\n  _proto.lookupInStore = function lookupInStore(environment, operation, fetchPolicy) {\n    if (fetchPolicy === 'store-and-network' || fetchPolicy === 'store-or-network') {\n      if (environment.check(operation).status === 'available') {\n        this._retainCachedOperation(environment, operation);\n        return environment.lookup(operation.fragment);\n      }\n    }\n    return null;\n  };\n  _proto.getFetchResult = function getFetchResult() {\n    if (this._didFetchFinish) {\n      if (this._error != null) {\n        return {\n          error: this._error\n        };\n      } else if (this._snapshot != null) {\n        return {\n          snapshot: this._snapshot\n        };\n      }\n    } else {\n      return null;\n    }\n  };\n  _proto.execute = function execute(_ref) {\n    var _this = this;\n    var environment = _ref.environment,\n      operation = _ref.operation,\n      _ref$preservePrevious = _ref.preservePreviousReferences,\n      preservePreviousReferences = _ref$preservePrevious === void 0 ? false : _ref$preservePrevious;\n    var reference = environment.retain(operation);\n    var error = function error() {\n      _this._selectionReferences = _this._selectionReferences.concat(reference);\n    };\n    var complete = function complete() {\n      if (!preservePreviousReferences) {\n        _this.disposeSelectionReferences();\n      }\n      _this._selectionReferences = _this._selectionReferences.concat(reference);\n    };\n    var unsubscribe = function unsubscribe() {\n      _this._selectionReferences = _this._selectionReferences.concat(reference);\n    };\n    if (!isRelayModernEnvironment(environment)) {\n      return environment.execute({\n        operation: operation\n      })[\"do\"]({\n        error: error,\n        complete: complete,\n        unsubscribe: unsubscribe\n      });\n    }\n    return fetchQuery(environment, operation)[\"do\"]({\n      error: error,\n      complete: complete,\n      unsubscribe: unsubscribe\n    });\n  };\n  _proto.setOnDataChange = function setOnDataChange(onDataChange) {\n    !this._fetchOptions ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayQueryFetcher: `setOnDataChange` should have been called after having called `fetch`') : invariant(false) : void 0;\n    if (typeof onDataChange === 'function') {\n      this._fetchOptions.onDataChangeCallbacks = this._fetchOptions.onDataChangeCallbacks || [];\n      this._fetchOptions.onDataChangeCallbacks.push(onDataChange);\n      if (this._didFetchFinish) {\n        if (this._error != null) {\n          onDataChange({\n            error: this._error\n          });\n        } else if (this._snapshot != null) {\n          onDataChange({\n            snapshot: this._snapshot\n          });\n        }\n      }\n    }\n  };\n  _proto.fetch = function fetch(fetchOptions, cacheConfigOverride) {\n    var _this2 = this;\n    var environment = fetchOptions.environment,\n      operation = fetchOptions.operation,\n      onDataChange = fetchOptions.onDataChange;\n    var fetchHasReturned = false;\n    var _error;\n    this.disposeRequest();\n    var oldOnDataChangeCallbacks = this._fetchOptions && this._fetchOptions.onDataChangeCallbacks;\n    this._fetchOptions = {\n      environment: environment,\n      onDataChangeCallbacks: oldOnDataChangeCallbacks || [],\n      operation: operation\n    };\n    if (onDataChange && this._fetchOptions.onDataChangeCallbacks.indexOf(onDataChange) === -1) {\n      this._fetchOptions.onDataChangeCallbacks.push(onDataChange);\n    }\n    var operationOverride = cacheConfigOverride ? createOperationDescriptor(operation.request.node, operation.request.variables, cacheConfigOverride) : operation;\n    var request = this.execute({\n      environment: environment,\n      operation: operationOverride\n    })[\"finally\"](function () {\n      _this2._pendingRequest = null;\n    }).subscribe({\n      next: function next() {\n        _this2._didFetchFinish = true;\n        _this2._error = null;\n        _this2._onQueryDataAvailable({\n          notifyFirstResult: fetchHasReturned\n        });\n      },\n      error: function error(err) {\n        _this2._didFetchFinish = true;\n        _this2._error = err;\n        _this2._snapshot = null;\n        var onDataChangeCallbacks = _this2._fetchOptions && _this2._fetchOptions.onDataChangeCallbacks;\n        if (fetchHasReturned) {\n          if (onDataChangeCallbacks) {\n            onDataChangeCallbacks.forEach(function (onDataChange) {\n              onDataChange({\n                error: err\n              });\n            });\n          }\n        } else {\n          _error = err;\n        }\n      }\n    });\n    this._pendingRequest = {\n      dispose: function dispose() {\n        request.unsubscribe();\n      }\n    };\n    fetchHasReturned = true;\n    if (_error) {\n      throw _error;\n    }\n    return this._snapshot;\n  };\n  _proto.retry = function retry(cacheConfigOverride) {\n    !this._fetchOptions ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayQueryFetcher: `retry` should be called after having called `fetch`') : invariant(false) : void 0;\n    return this.fetch({\n      environment: this._fetchOptions.environment,\n      operation: this._fetchOptions.operation,\n      onDataChange: null\n    }, cacheConfigOverride);\n  };\n  _proto.dispose = function dispose() {\n    this.disposeRequest();\n    this.disposeSelectionReferences();\n  };\n  _proto.disposeRequest = function disposeRequest() {\n    this._error = null;\n    this._snapshot = null;\n    if (this._pendingRequest) {\n      this._pendingRequest.dispose();\n    }\n    if (this._rootSubscription) {\n      this._rootSubscription.dispose();\n      this._rootSubscription = null;\n    }\n  };\n  _proto._retainCachedOperation = function _retainCachedOperation(environment, operation) {\n    this._disposeCacheSelectionReference();\n    this._cacheSelectionReference = environment.retain(operation);\n  };\n  _proto._disposeCacheSelectionReference = function _disposeCacheSelectionReference() {\n    this._cacheSelectionReference && this._cacheSelectionReference.dispose();\n    this._cacheSelectionReference = null;\n  };\n  _proto.disposeSelectionReferences = function disposeSelectionReferences() {\n    this._disposeCacheSelectionReference();\n    this._selectionReferences.forEach(function (r) {\n      return r.dispose();\n    });\n    this._selectionReferences = [];\n  };\n  _proto._onQueryDataAvailable = function _onQueryDataAvailable(_ref2) {\n    var _this3 = this;\n    var notifyFirstResult = _ref2.notifyFirstResult;\n    !this._fetchOptions ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'ReactRelayQueryFetcher: `_onQueryDataAvailable` should have been called after having called `fetch`') : invariant(false) : void 0;\n    var _this$_fetchOptions = this._fetchOptions,\n      environment = _this$_fetchOptions.environment,\n      onDataChangeCallbacks = _this$_fetchOptions.onDataChangeCallbacks,\n      operation = _this$_fetchOptions.operation;\n    if (this._snapshot) {\n      return;\n    }\n    this._snapshot = environment.lookup(operation.fragment);\n    this._rootSubscription = environment.subscribe(this._snapshot, function (snapshot) {\n      if (_this3._fetchOptions != null) {\n        var maybeNewOnDataChangeCallbacks = _this3._fetchOptions.onDataChangeCallbacks;\n        if (Array.isArray(maybeNewOnDataChangeCallbacks)) {\n          maybeNewOnDataChangeCallbacks.forEach(function (onDataChange) {\n            return onDataChange({\n              snapshot: snapshot\n            });\n          });\n        }\n      }\n    });\n    if (this._snapshot && notifyFirstResult && Array.isArray(onDataChangeCallbacks)) {\n      var snapshot = this._snapshot;\n      onDataChangeCallbacks.forEach(function (onDataChange) {\n        return onDataChange({\n          snapshot: snapshot\n        });\n      });\n    }\n  };\n  return ReactRelayQueryFetcher;\n}();\nmodule.exports = ReactRelayQueryFetcher;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}