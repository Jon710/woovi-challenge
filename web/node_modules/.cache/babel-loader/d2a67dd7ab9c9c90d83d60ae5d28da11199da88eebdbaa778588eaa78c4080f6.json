{"ast":null,"code":"'use strict';\n\nvar RelayModernRecord = require('../store/RelayModernRecord');\nvar _require = require('../store/RelayRecordState'),\n  EXISTENT = _require.EXISTENT,\n  NONEXISTENT = _require.NONEXISTENT;\nvar _require2 = require('../store/RelayStoreUtils'),\n  ROOT_ID = _require2.ROOT_ID,\n  ROOT_TYPE = _require2.ROOT_TYPE;\nvar _require3 = require('./readUpdatableFragment'),\n  _readUpdatableFragment = _require3.readUpdatableFragment;\nvar _require4 = require('./readUpdatableQuery'),\n  _readUpdatableQuery = _require4.readUpdatableQuery;\nvar RelayRecordProxy = require('./RelayRecordProxy');\nvar invariant = require('invariant');\nvar RelayRecordSourceProxy = /*#__PURE__*/function () {\n  function RelayRecordSourceProxy(mutator, getDataID, handlerProvider, missingFieldHandlers) {\n    this.__mutator = mutator;\n    this._handlerProvider = handlerProvider || null;\n    this._proxies = {};\n    this._getDataID = getDataID;\n    this._invalidatedStore = false;\n    this._idsMarkedForInvalidation = new Set();\n    this._missingFieldHandlers = missingFieldHandlers;\n  }\n  var _proto = RelayRecordSourceProxy.prototype;\n  _proto.publishSource = function publishSource(source, fieldPayloads) {\n    var _this = this;\n    var dataIDs = source.getRecordIDs();\n    dataIDs.forEach(function (dataID) {\n      var status = source.getStatus(dataID);\n      if (status === EXISTENT) {\n        var sourceRecord = source.get(dataID);\n        if (sourceRecord) {\n          if (_this.__mutator.getStatus(dataID) !== EXISTENT) {\n            _this.create(dataID, RelayModernRecord.getType(sourceRecord));\n          }\n          _this.__mutator.copyFieldsFromRecord(sourceRecord, dataID);\n        }\n      } else if (status === NONEXISTENT) {\n        _this[\"delete\"](dataID);\n      }\n    });\n    if (fieldPayloads && fieldPayloads.length) {\n      fieldPayloads.forEach(function (fieldPayload) {\n        var handler = _this._handlerProvider && _this._handlerProvider(fieldPayload.handle);\n        !handler ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernEnvironment: Expected a handler to be provided for handle `%s`.', fieldPayload.handle) : invariant(false) : void 0;\n        handler.update(_this, fieldPayload);\n      });\n    }\n  };\n  _proto.create = function create(dataID, typeName) {\n    this.__mutator.create(dataID, typeName);\n    delete this._proxies[dataID];\n    var record = this.get(dataID);\n    !record ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceProxy#create(): Expected the created record to exist.') : invariant(false) : void 0;\n    return record;\n  };\n  _proto[\"delete\"] = function _delete(dataID) {\n    !(dataID !== ROOT_ID) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceProxy#delete(): Cannot delete the root record.') : invariant(false) : void 0;\n    delete this._proxies[dataID];\n    this.__mutator[\"delete\"](dataID);\n  };\n  _proto.get = function get(dataID) {\n    if (!this._proxies.hasOwnProperty(dataID)) {\n      var status = this.__mutator.getStatus(dataID);\n      if (status === EXISTENT) {\n        this._proxies[dataID] = new RelayRecordProxy(this, this.__mutator, dataID);\n      } else {\n        this._proxies[dataID] = status === NONEXISTENT ? null : undefined;\n      }\n    }\n    return this._proxies[dataID];\n  };\n  _proto.getRoot = function getRoot() {\n    var root = this.get(ROOT_ID);\n    if (!root) {\n      root = this.create(ROOT_ID, ROOT_TYPE);\n    }\n    !(root && root.getType() === ROOT_TYPE) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceProxy#getRoot(): Expected the source to contain a ' + 'root record, %s.', root == null ? 'no root record found' : \"found a root record of type `\".concat(root.getType(), \"`\")) : invariant(false) : void 0;\n    return root;\n  };\n  _proto.invalidateStore = function invalidateStore() {\n    this._invalidatedStore = true;\n  };\n  _proto.isStoreMarkedForInvalidation = function isStoreMarkedForInvalidation() {\n    return this._invalidatedStore;\n  };\n  _proto.markIDForInvalidation = function markIDForInvalidation(dataID) {\n    this._idsMarkedForInvalidation.add(dataID);\n  };\n  _proto.getIDsMarkedForInvalidation = function getIDsMarkedForInvalidation() {\n    return this._idsMarkedForInvalidation;\n  };\n  _proto.readUpdatableQuery = function readUpdatableQuery(query, variables) {\n    return _readUpdatableQuery(query, variables, this, this._missingFieldHandlers);\n  };\n  _proto.readUpdatableFragment = function readUpdatableFragment(fragment, fragmentReference) {\n    return _readUpdatableFragment(fragment, fragmentReference, this, this._missingFieldHandlers);\n  };\n  return RelayRecordSourceProxy;\n}();\nmodule.exports = RelayRecordSourceProxy;","map":{"version":3,"names":["RelayModernRecord","require","_require","EXISTENT","NONEXISTENT","_require2","ROOT_ID","ROOT_TYPE","_require3","_readUpdatableFragment","readUpdatableFragment","_require4","_readUpdatableQuery","readUpdatableQuery","RelayRecordProxy","invariant","RelayRecordSourceProxy","mutator","getDataID","handlerProvider","missingFieldHandlers","__mutator","_handlerProvider","_proxies","_getDataID","_invalidatedStore","_idsMarkedForInvalidation","Set","_missingFieldHandlers","_proto","prototype","publishSource","source","fieldPayloads","_this","dataIDs","getRecordIDs","forEach","dataID","status","getStatus","sourceRecord","get","create","getType","copyFieldsFromRecord","length","fieldPayload","handler","handle","process","env","NODE_ENV","update","typeName","record","_delete","hasOwnProperty","undefined","getRoot","root","concat","invalidateStore","isStoreMarkedForInvalidation","markIDForInvalidation","add","getIDsMarkedForInvalidation","query","variables","fragment","fragmentReference","module","exports"],"sources":["/Users/joaoluismoraes/Desktop/woovi-challenge/web/node_modules/relay-runtime/lib/mutations/RelayRecordSourceProxy.js"],"sourcesContent":["'use strict';\n\nvar RelayModernRecord = require('../store/RelayModernRecord');\nvar _require = require('../store/RelayRecordState'),\n  EXISTENT = _require.EXISTENT,\n  NONEXISTENT = _require.NONEXISTENT;\nvar _require2 = require('../store/RelayStoreUtils'),\n  ROOT_ID = _require2.ROOT_ID,\n  ROOT_TYPE = _require2.ROOT_TYPE;\nvar _require3 = require('./readUpdatableFragment'),\n  _readUpdatableFragment = _require3.readUpdatableFragment;\nvar _require4 = require('./readUpdatableQuery'),\n  _readUpdatableQuery = _require4.readUpdatableQuery;\nvar RelayRecordProxy = require('./RelayRecordProxy');\nvar invariant = require('invariant');\nvar RelayRecordSourceProxy = /*#__PURE__*/function () {\n  function RelayRecordSourceProxy(mutator, getDataID, handlerProvider, missingFieldHandlers) {\n    this.__mutator = mutator;\n    this._handlerProvider = handlerProvider || null;\n    this._proxies = {};\n    this._getDataID = getDataID;\n    this._invalidatedStore = false;\n    this._idsMarkedForInvalidation = new Set();\n    this._missingFieldHandlers = missingFieldHandlers;\n  }\n  var _proto = RelayRecordSourceProxy.prototype;\n  _proto.publishSource = function publishSource(source, fieldPayloads) {\n    var _this = this;\n    var dataIDs = source.getRecordIDs();\n    dataIDs.forEach(function (dataID) {\n      var status = source.getStatus(dataID);\n      if (status === EXISTENT) {\n        var sourceRecord = source.get(dataID);\n        if (sourceRecord) {\n          if (_this.__mutator.getStatus(dataID) !== EXISTENT) {\n            _this.create(dataID, RelayModernRecord.getType(sourceRecord));\n          }\n          _this.__mutator.copyFieldsFromRecord(sourceRecord, dataID);\n        }\n      } else if (status === NONEXISTENT) {\n        _this[\"delete\"](dataID);\n      }\n    });\n    if (fieldPayloads && fieldPayloads.length) {\n      fieldPayloads.forEach(function (fieldPayload) {\n        var handler = _this._handlerProvider && _this._handlerProvider(fieldPayload.handle);\n        !handler ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayModernEnvironment: Expected a handler to be provided for handle `%s`.', fieldPayload.handle) : invariant(false) : void 0;\n        handler.update(_this, fieldPayload);\n      });\n    }\n  };\n  _proto.create = function create(dataID, typeName) {\n    this.__mutator.create(dataID, typeName);\n    delete this._proxies[dataID];\n    var record = this.get(dataID);\n    !record ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceProxy#create(): Expected the created record to exist.') : invariant(false) : void 0;\n    return record;\n  };\n  _proto[\"delete\"] = function _delete(dataID) {\n    !(dataID !== ROOT_ID) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceProxy#delete(): Cannot delete the root record.') : invariant(false) : void 0;\n    delete this._proxies[dataID];\n    this.__mutator[\"delete\"](dataID);\n  };\n  _proto.get = function get(dataID) {\n    if (!this._proxies.hasOwnProperty(dataID)) {\n      var status = this.__mutator.getStatus(dataID);\n      if (status === EXISTENT) {\n        this._proxies[dataID] = new RelayRecordProxy(this, this.__mutator, dataID);\n      } else {\n        this._proxies[dataID] = status === NONEXISTENT ? null : undefined;\n      }\n    }\n    return this._proxies[dataID];\n  };\n  _proto.getRoot = function getRoot() {\n    var root = this.get(ROOT_ID);\n    if (!root) {\n      root = this.create(ROOT_ID, ROOT_TYPE);\n    }\n    !(root && root.getType() === ROOT_TYPE) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayRecordSourceProxy#getRoot(): Expected the source to contain a ' + 'root record, %s.', root == null ? 'no root record found' : \"found a root record of type `\".concat(root.getType(), \"`\")) : invariant(false) : void 0;\n    return root;\n  };\n  _proto.invalidateStore = function invalidateStore() {\n    this._invalidatedStore = true;\n  };\n  _proto.isStoreMarkedForInvalidation = function isStoreMarkedForInvalidation() {\n    return this._invalidatedStore;\n  };\n  _proto.markIDForInvalidation = function markIDForInvalidation(dataID) {\n    this._idsMarkedForInvalidation.add(dataID);\n  };\n  _proto.getIDsMarkedForInvalidation = function getIDsMarkedForInvalidation() {\n    return this._idsMarkedForInvalidation;\n  };\n  _proto.readUpdatableQuery = function readUpdatableQuery(query, variables) {\n    return _readUpdatableQuery(query, variables, this, this._missingFieldHandlers);\n  };\n  _proto.readUpdatableFragment = function readUpdatableFragment(fragment, fragmentReference) {\n    return _readUpdatableFragment(fragment, fragmentReference, this, this._missingFieldHandlers);\n  };\n  return RelayRecordSourceProxy;\n}();\nmodule.exports = RelayRecordSourceProxy;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}