{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nfunction handlePotentialSnapshotErrors(environment, missingRequiredFields, relayResolverErrors) {\n  var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(relayResolverErrors),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var resolverError = _step.value;\n      environment.requiredFieldLogger({\n        kind: 'relay_resolver.error',\n        owner: resolverError.field.owner,\n        fieldPath: resolverError.field.path,\n        error: resolverError.error\n      });\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  if (missingRequiredFields != null) {\n    switch (missingRequiredFields.action) {\n      case 'THROW':\n        {\n          var _missingRequiredField = missingRequiredFields.field,\n            path = _missingRequiredField.path,\n            owner = _missingRequiredField.owner;\n          environment.requiredFieldLogger({\n            kind: 'missing_field.throw',\n            owner: owner,\n            fieldPath: path\n          });\n          throw new Error(\"Relay: Missing @required value at path '\".concat(path, \"' in '\").concat(owner, \"'.\"));\n        }\n      case 'LOG':\n        missingRequiredFields.fields.forEach(function (_ref) {\n          var path = _ref.path,\n            owner = _ref.owner;\n          environment.requiredFieldLogger({\n            kind: 'missing_field.log',\n            owner: owner,\n            fieldPath: path\n          });\n        });\n        break;\n      default:\n        {\n          missingRequiredFields.action;\n        }\n    }\n  }\n}\nmodule.exports = handlePotentialSnapshotErrors;","map":{"version":3,"names":["_interopRequireDefault","require","_createForOfIteratorHelper2","handlePotentialSnapshotErrors","environment","missingRequiredFields","relayResolverErrors","_iterator","_step","s","n","done","resolverError","value","requiredFieldLogger","kind","owner","field","fieldPath","path","error","err","e","f","action","_missingRequiredField","Error","concat","fields","forEach","_ref","module","exports"],"sources":["/Users/joaoluismoraes/Desktop/woovi-challenge/web/node_modules/relay-runtime/lib/util/handlePotentialSnapshotErrors.js"],"sourcesContent":["'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nfunction handlePotentialSnapshotErrors(environment, missingRequiredFields, relayResolverErrors) {\n  var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(relayResolverErrors),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var resolverError = _step.value;\n      environment.requiredFieldLogger({\n        kind: 'relay_resolver.error',\n        owner: resolverError.field.owner,\n        fieldPath: resolverError.field.path,\n        error: resolverError.error\n      });\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  if (missingRequiredFields != null) {\n    switch (missingRequiredFields.action) {\n      case 'THROW':\n        {\n          var _missingRequiredField = missingRequiredFields.field,\n            path = _missingRequiredField.path,\n            owner = _missingRequiredField.owner;\n          environment.requiredFieldLogger({\n            kind: 'missing_field.throw',\n            owner: owner,\n            fieldPath: path\n          });\n          throw new Error(\"Relay: Missing @required value at path '\".concat(path, \"' in '\").concat(owner, \"'.\"));\n        }\n      case 'LOG':\n        missingRequiredFields.fields.forEach(function (_ref) {\n          var path = _ref.path,\n            owner = _ref.owner;\n          environment.requiredFieldLogger({\n            kind: 'missing_field.log',\n            owner: owner,\n            fieldPath: path\n          });\n        });\n        break;\n      default:\n        {\n          missingRequiredFields.action;\n        }\n    }\n  }\n}\nmodule.exports = handlePotentialSnapshotErrors;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC,CAAC,SAAS,CAAC;AAC/F,IAAIC,2BAA2B,GAAGF,sBAAsB,CAACC,OAAO,CAAC,kDAAkD,CAAC,CAAC;AACrH,SAASE,6BAA6BA,CAACC,WAAW,EAAEC,qBAAqB,EAAEC,mBAAmB,EAAE;EAC9F,IAAIC,SAAS,GAAG,CAAC,CAAC,EAAEL,2BAA2B,CAAC,SAAS,CAAC,EAAEI,mBAAmB,CAAC;IAC9EE,KAAK;EACP,IAAI;IACF,KAAKD,SAAS,CAACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAACD,KAAK,GAAGD,SAAS,CAACG,CAAC,CAAC,CAAC,EAAEC,IAAI,GAAG;MAClD,IAAIC,aAAa,GAAGJ,KAAK,CAACK,KAAK;MAC/BT,WAAW,CAACU,mBAAmB,CAAC;QAC9BC,IAAI,EAAE,sBAAsB;QAC5BC,KAAK,EAAEJ,aAAa,CAACK,KAAK,CAACD,KAAK;QAChCE,SAAS,EAAEN,aAAa,CAACK,KAAK,CAACE,IAAI;QACnCC,KAAK,EAAER,aAAa,CAACQ;MACvB,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZd,SAAS,CAACe,CAAC,CAACD,GAAG,CAAC;EAClB,CAAC,SAAS;IACRd,SAAS,CAACgB,CAAC,CAAC,CAAC;EACf;EACA,IAAIlB,qBAAqB,IAAI,IAAI,EAAE;IACjC,QAAQA,qBAAqB,CAACmB,MAAM;MAClC,KAAK,OAAO;QACV;UACE,IAAIC,qBAAqB,GAAGpB,qBAAqB,CAACY,KAAK;YACrDE,IAAI,GAAGM,qBAAqB,CAACN,IAAI;YACjCH,KAAK,GAAGS,qBAAqB,CAACT,KAAK;UACrCZ,WAAW,CAACU,mBAAmB,CAAC;YAC9BC,IAAI,EAAE,qBAAqB;YAC3BC,KAAK,EAAEA,KAAK;YACZE,SAAS,EAAEC;UACb,CAAC,CAAC;UACF,MAAM,IAAIO,KAAK,CAAC,0CAA0C,CAACC,MAAM,CAACR,IAAI,EAAE,QAAQ,CAAC,CAACQ,MAAM,CAACX,KAAK,EAAE,IAAI,CAAC,CAAC;QACxG;MACF,KAAK,KAAK;QACRX,qBAAqB,CAACuB,MAAM,CAACC,OAAO,CAAC,UAAUC,IAAI,EAAE;UACnD,IAAIX,IAAI,GAAGW,IAAI,CAACX,IAAI;YAClBH,KAAK,GAAGc,IAAI,CAACd,KAAK;UACpBZ,WAAW,CAACU,mBAAmB,CAAC;YAC9BC,IAAI,EAAE,mBAAmB;YACzBC,KAAK,EAAEA,KAAK;YACZE,SAAS,EAAEC;UACb,CAAC,CAAC;QACJ,CAAC,CAAC;QACF;MACF;QACE;UACEd,qBAAqB,CAACmB,MAAM;QAC9B;IACJ;EACF;AACF;AACAO,MAAM,CAACC,OAAO,GAAG7B,6BAA6B"},"metadata":{},"sourceType":"script","externalDependencies":[]}