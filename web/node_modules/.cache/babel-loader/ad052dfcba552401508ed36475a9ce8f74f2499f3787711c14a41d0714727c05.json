{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar recycleNodesInto = require('../util/recycleNodesInto');\nvar _require = require('../util/RelayConcreteNode'),\n  RELAY_LIVE_RESOLVER = _require.RELAY_LIVE_RESOLVER;\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar shallowFreeze = require('../util/shallowFreeze');\nvar _require2 = require('./ClientID'),\n  generateClientID = _require2.generateClientID;\nvar RelayModernRecord = require('./RelayModernRecord');\nvar _require3 = require('./RelayStoreUtils'),\n  RELAY_RESOLVER_ERROR_KEY = _require3.RELAY_RESOLVER_ERROR_KEY,\n  RELAY_RESOLVER_INVALIDATION_KEY = _require3.RELAY_RESOLVER_INVALIDATION_KEY,\n  RELAY_RESOLVER_SNAPSHOT_KEY = _require3.RELAY_RESOLVER_SNAPSHOT_KEY,\n  RELAY_RESOLVER_VALUE_KEY = _require3.RELAY_RESOLVER_VALUE_KEY,\n  getStorageKey = _require3.getStorageKey;\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\nvar emptySet = new Set();\nvar NoopResolverCache = /*#__PURE__*/function () {\n  function NoopResolverCache() {}\n  var _proto = NoopResolverCache.prototype;\n  _proto.readFromCacheOrEvaluate = function readFromCacheOrEvaluate(recordID, field, variables, evaluate, getDataForResolverFragment) {\n    !(field.kind !== RELAY_LIVE_RESOLVER) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'This store does not support Live Resolvers') : invariant(false) : void 0;\n    var _evaluate = evaluate(),\n      resolverResult = _evaluate.resolverResult,\n      snapshot = _evaluate.snapshot,\n      error = _evaluate.error;\n    return [resolverResult, undefined, error, snapshot, undefined, undefined];\n  };\n  _proto.invalidateDataIDs = function invalidateDataIDs(updatedDataIDs) {};\n  _proto.ensureClientRecord = function ensureClientRecord(id, typeName) {\n    !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Client Edges to Client Objects are not supported in this version of Relay Store') : invariant(false) : void 0;\n  };\n  _proto.notifyUpdatedSubscribers = function notifyUpdatedSubscribers(updatedDataIDs) {};\n  return NoopResolverCache;\n}();\nfunction addDependencyEdge(edges, from, to) {\n  var set = edges.get(from);\n  if (!set) {\n    set = new Set();\n    edges.set(from, set);\n  }\n  set.add(to);\n}\nvar RecordResolverCache = /*#__PURE__*/function () {\n  function RecordResolverCache(getRecordSource) {\n    this._resolverIDToRecordIDs = new Map();\n    this._recordIDToResolverIDs = new Map();\n    this._getRecordSource = getRecordSource;\n  }\n  var _proto2 = RecordResolverCache.prototype;\n  _proto2.readFromCacheOrEvaluate = function readFromCacheOrEvaluate(recordID, field, variables, evaluate, getDataForResolverFragment) {\n    var recordSource = this._getRecordSource();\n    var record = recordSource.get(recordID);\n    !(record != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'We expect record to exist in the store.') : invariant(false) : void 0;\n    var storageKey = getStorageKey(field, variables);\n    var linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n    var linkedRecord = linkedID == null ? null : recordSource.get(linkedID);\n    if (linkedRecord == null || this._isInvalid(linkedRecord, getDataForResolverFragment)) {\n      var _linkedID;\n      linkedID = (_linkedID = linkedID) !== null && _linkedID !== void 0 ? _linkedID : generateClientID(recordID, storageKey);\n      linkedRecord = RelayModernRecord.create(linkedID, '__RELAY_RESOLVER__');\n      var evaluationResult = evaluate();\n      if (RelayFeatureFlags.ENABLE_SHALLOW_FREEZE_RESOLVER_VALUES) {\n        shallowFreeze(evaluationResult.resolverResult);\n      }\n      RelayModernRecord.setValue(linkedRecord, RELAY_RESOLVER_VALUE_KEY, evaluationResult.resolverResult);\n      RelayModernRecord.setValue(linkedRecord, RELAY_RESOLVER_SNAPSHOT_KEY, evaluationResult.snapshot);\n      RelayModernRecord.setValue(linkedRecord, RELAY_RESOLVER_ERROR_KEY, evaluationResult.error);\n      recordSource.set(linkedID, linkedRecord);\n      var currentRecord = recordSource.get(recordID);\n      !(currentRecord != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected the parent record to still be in the record source.') : invariant(false) : void 0;\n      var nextRecord = RelayModernRecord.clone(currentRecord);\n      RelayModernRecord.setLinkedRecordID(nextRecord, storageKey, linkedID);\n      recordSource.set(recordID, nextRecord);\n      if (field.fragment != null) {\n        var _evaluationResult$sna;\n        var fragmentStorageKey = getStorageKey(field.fragment, variables);\n        var resolverID = generateClientID(recordID, fragmentStorageKey);\n        addDependencyEdge(this._resolverIDToRecordIDs, resolverID, linkedID);\n        addDependencyEdge(this._recordIDToResolverIDs, recordID, resolverID);\n        var seenRecordIds = (_evaluationResult$sna = evaluationResult.snapshot) === null || _evaluationResult$sna === void 0 ? void 0 : _evaluationResult$sna.seenRecords;\n        if (seenRecordIds != null) {\n          var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(seenRecordIds),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var seenRecordID = _step.value;\n              addDependencyEdge(this._recordIDToResolverIDs, seenRecordID, resolverID);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n      }\n    }\n    var answer = RelayModernRecord.getValue(linkedRecord, RELAY_RESOLVER_VALUE_KEY);\n    var snapshot = RelayModernRecord.getValue(linkedRecord, RELAY_RESOLVER_SNAPSHOT_KEY);\n    var error = RelayModernRecord.getValue(linkedRecord, RELAY_RESOLVER_ERROR_KEY);\n    return [answer, linkedID, error, snapshot, undefined, undefined];\n  };\n  _proto2.invalidateDataIDs = function invalidateDataIDs(updatedDataIDs) {\n    var recordSource = this._getRecordSource();\n    var visited = new Set();\n    var recordsToVisit = Array.from(updatedDataIDs);\n    while (recordsToVisit.length) {\n      var recordID = recordsToVisit.pop();\n      updatedDataIDs.add(recordID);\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])((_this$_recordIDToReso = this._recordIDToResolverIDs.get(recordID)) !== null && _this$_recordIDToReso !== void 0 ? _this$_recordIDToReso : emptySet),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _this$_recordIDToReso;\n          var fragment = _step2.value;\n          if (!visited.has(fragment)) {\n            var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])((_this$_resolverIDToRe = this._resolverIDToRecordIDs.get(fragment)) !== null && _this$_resolverIDToRe !== void 0 ? _this$_resolverIDToRe : emptySet),\n              _step3;\n            try {\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                var _this$_resolverIDToRe;\n                var anotherRecordID = _step3.value;\n                this._markInvalidatedResolverRecord(anotherRecordID, recordSource, updatedDataIDs);\n                if (!visited.has(anotherRecordID)) {\n                  recordsToVisit.push(anotherRecordID);\n                }\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  };\n  _proto2._markInvalidatedResolverRecord = function _markInvalidatedResolverRecord(dataID, recordSource, updatedDataIDs) {\n    var record = recordSource.get(dataID);\n    if (!record) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Expected a resolver record with ID %s, but it was missing.', dataID) : void 0;\n      return;\n    }\n    var nextRecord = RelayModernRecord.clone(record);\n    RelayModernRecord.setValue(nextRecord, RELAY_RESOLVER_INVALIDATION_KEY, true);\n    recordSource.set(dataID, nextRecord);\n  };\n  _proto2._isInvalid = function _isInvalid(record, getDataForResolverFragment) {\n    if (!RelayModernRecord.getValue(record, RELAY_RESOLVER_INVALIDATION_KEY)) {\n      return false;\n    }\n    var snapshot = RelayModernRecord.getValue(record, RELAY_RESOLVER_SNAPSHOT_KEY);\n    var originalInputs = snapshot === null || snapshot === void 0 ? void 0 : snapshot.data;\n    var readerSelector = snapshot === null || snapshot === void 0 ? void 0 : snapshot.selector;\n    if (originalInputs == null || readerSelector == null) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Expected previous inputs and reader selector on resolver record with ID %s, but they were missing.', RelayModernRecord.getDataID(record)) : void 0;\n      return true;\n    }\n    var _getDataForResolverFr = getDataForResolverFragment(readerSelector),\n      latestValues = _getDataForResolverFr.data;\n    var recycled = recycleNodesInto(originalInputs, latestValues);\n    if (recycled !== originalInputs) {\n      return true;\n    }\n    return false;\n  };\n  _proto2.ensureClientRecord = function ensureClientRecord(id, typename) {\n    !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Client Edges to Client Objects are not supported in this version of Relay Store') : invariant(false) : void 0;\n  };\n  _proto2.notifyUpdatedSubscribers = function notifyUpdatedSubscribers(updatedDataIDs) {\n    !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Processing @outputType records is not supported in this version of Relay Store') : invariant(false) : void 0;\n  };\n  return RecordResolverCache;\n}();\nmodule.exports = {\n  NoopResolverCache: NoopResolverCache,\n  RecordResolverCache: RecordResolverCache\n};","map":{"version":3,"names":["_interopRequireDefault","require","_createForOfIteratorHelper2","recycleNodesInto","_require","RELAY_LIVE_RESOLVER","RelayFeatureFlags","shallowFreeze","_require2","generateClientID","RelayModernRecord","_require3","RELAY_RESOLVER_ERROR_KEY","RELAY_RESOLVER_INVALIDATION_KEY","RELAY_RESOLVER_SNAPSHOT_KEY","RELAY_RESOLVER_VALUE_KEY","getStorageKey","invariant","warning","emptySet","Set","NoopResolverCache","_proto","prototype","readFromCacheOrEvaluate","recordID","field","variables","evaluate","getDataForResolverFragment","kind","process","env","NODE_ENV","_evaluate","resolverResult","snapshot","error","undefined","invalidateDataIDs","updatedDataIDs","ensureClientRecord","id","typeName","notifyUpdatedSubscribers","addDependencyEdge","edges","from","to","set","get","add","RecordResolverCache","getRecordSource","_resolverIDToRecordIDs","Map","_recordIDToResolverIDs","_getRecordSource","_proto2","recordSource","record","storageKey","linkedID","getLinkedRecordID","linkedRecord","_isInvalid","_linkedID","create","evaluationResult","ENABLE_SHALLOW_FREEZE_RESOLVER_VALUES","setValue","currentRecord","nextRecord","clone","setLinkedRecordID","fragment","_evaluationResult$sna","fragmentStorageKey","resolverID","seenRecordIds","seenRecords","_iterator","_step","s","n","done","seenRecordID","value","err","e","f","answer","getValue","visited","recordsToVisit","Array","length","pop","_iterator2","_this$_recordIDToReso","_step2","has","_iterator3","_this$_resolverIDToRe","_step3","anotherRecordID","_markInvalidatedResolverRecord","push","dataID","originalInputs","data","readerSelector","selector","getDataID","_getDataForResolverFr","latestValues","recycled","typename","module","exports"],"sources":["/Users/joaoluismoraes/Desktop/woovi-challenge/web/node_modules/relay-runtime/lib/store/ResolverCache.js"],"sourcesContent":["'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar recycleNodesInto = require('../util/recycleNodesInto');\nvar _require = require('../util/RelayConcreteNode'),\n  RELAY_LIVE_RESOLVER = _require.RELAY_LIVE_RESOLVER;\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar shallowFreeze = require('../util/shallowFreeze');\nvar _require2 = require('./ClientID'),\n  generateClientID = _require2.generateClientID;\nvar RelayModernRecord = require('./RelayModernRecord');\nvar _require3 = require('./RelayStoreUtils'),\n  RELAY_RESOLVER_ERROR_KEY = _require3.RELAY_RESOLVER_ERROR_KEY,\n  RELAY_RESOLVER_INVALIDATION_KEY = _require3.RELAY_RESOLVER_INVALIDATION_KEY,\n  RELAY_RESOLVER_SNAPSHOT_KEY = _require3.RELAY_RESOLVER_SNAPSHOT_KEY,\n  RELAY_RESOLVER_VALUE_KEY = _require3.RELAY_RESOLVER_VALUE_KEY,\n  getStorageKey = _require3.getStorageKey;\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\nvar emptySet = new Set();\nvar NoopResolverCache = /*#__PURE__*/function () {\n  function NoopResolverCache() {}\n  var _proto = NoopResolverCache.prototype;\n  _proto.readFromCacheOrEvaluate = function readFromCacheOrEvaluate(recordID, field, variables, evaluate, getDataForResolverFragment) {\n    !(field.kind !== RELAY_LIVE_RESOLVER) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'This store does not support Live Resolvers') : invariant(false) : void 0;\n    var _evaluate = evaluate(),\n      resolverResult = _evaluate.resolverResult,\n      snapshot = _evaluate.snapshot,\n      error = _evaluate.error;\n    return [resolverResult, undefined, error, snapshot, undefined, undefined];\n  };\n  _proto.invalidateDataIDs = function invalidateDataIDs(updatedDataIDs) {};\n  _proto.ensureClientRecord = function ensureClientRecord(id, typeName) {\n    !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Client Edges to Client Objects are not supported in this version of Relay Store') : invariant(false) : void 0;\n  };\n  _proto.notifyUpdatedSubscribers = function notifyUpdatedSubscribers(updatedDataIDs) {};\n  return NoopResolverCache;\n}();\nfunction addDependencyEdge(edges, from, to) {\n  var set = edges.get(from);\n  if (!set) {\n    set = new Set();\n    edges.set(from, set);\n  }\n  set.add(to);\n}\nvar RecordResolverCache = /*#__PURE__*/function () {\n  function RecordResolverCache(getRecordSource) {\n    this._resolverIDToRecordIDs = new Map();\n    this._recordIDToResolverIDs = new Map();\n    this._getRecordSource = getRecordSource;\n  }\n  var _proto2 = RecordResolverCache.prototype;\n  _proto2.readFromCacheOrEvaluate = function readFromCacheOrEvaluate(recordID, field, variables, evaluate, getDataForResolverFragment) {\n    var recordSource = this._getRecordSource();\n    var record = recordSource.get(recordID);\n    !(record != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'We expect record to exist in the store.') : invariant(false) : void 0;\n    var storageKey = getStorageKey(field, variables);\n    var linkedID = RelayModernRecord.getLinkedRecordID(record, storageKey);\n    var linkedRecord = linkedID == null ? null : recordSource.get(linkedID);\n    if (linkedRecord == null || this._isInvalid(linkedRecord, getDataForResolverFragment)) {\n      var _linkedID;\n      linkedID = (_linkedID = linkedID) !== null && _linkedID !== void 0 ? _linkedID : generateClientID(recordID, storageKey);\n      linkedRecord = RelayModernRecord.create(linkedID, '__RELAY_RESOLVER__');\n      var evaluationResult = evaluate();\n      if (RelayFeatureFlags.ENABLE_SHALLOW_FREEZE_RESOLVER_VALUES) {\n        shallowFreeze(evaluationResult.resolverResult);\n      }\n      RelayModernRecord.setValue(linkedRecord, RELAY_RESOLVER_VALUE_KEY, evaluationResult.resolverResult);\n      RelayModernRecord.setValue(linkedRecord, RELAY_RESOLVER_SNAPSHOT_KEY, evaluationResult.snapshot);\n      RelayModernRecord.setValue(linkedRecord, RELAY_RESOLVER_ERROR_KEY, evaluationResult.error);\n      recordSource.set(linkedID, linkedRecord);\n      var currentRecord = recordSource.get(recordID);\n      !(currentRecord != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected the parent record to still be in the record source.') : invariant(false) : void 0;\n      var nextRecord = RelayModernRecord.clone(currentRecord);\n      RelayModernRecord.setLinkedRecordID(nextRecord, storageKey, linkedID);\n      recordSource.set(recordID, nextRecord);\n      if (field.fragment != null) {\n        var _evaluationResult$sna;\n        var fragmentStorageKey = getStorageKey(field.fragment, variables);\n        var resolverID = generateClientID(recordID, fragmentStorageKey);\n        addDependencyEdge(this._resolverIDToRecordIDs, resolverID, linkedID);\n        addDependencyEdge(this._recordIDToResolverIDs, recordID, resolverID);\n        var seenRecordIds = (_evaluationResult$sna = evaluationResult.snapshot) === null || _evaluationResult$sna === void 0 ? void 0 : _evaluationResult$sna.seenRecords;\n        if (seenRecordIds != null) {\n          var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(seenRecordIds),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var seenRecordID = _step.value;\n              addDependencyEdge(this._recordIDToResolverIDs, seenRecordID, resolverID);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n      }\n    }\n    var answer = RelayModernRecord.getValue(linkedRecord, RELAY_RESOLVER_VALUE_KEY);\n    var snapshot = RelayModernRecord.getValue(linkedRecord, RELAY_RESOLVER_SNAPSHOT_KEY);\n    var error = RelayModernRecord.getValue(linkedRecord, RELAY_RESOLVER_ERROR_KEY);\n    return [answer, linkedID, error, snapshot, undefined, undefined];\n  };\n  _proto2.invalidateDataIDs = function invalidateDataIDs(updatedDataIDs) {\n    var recordSource = this._getRecordSource();\n    var visited = new Set();\n    var recordsToVisit = Array.from(updatedDataIDs);\n    while (recordsToVisit.length) {\n      var recordID = recordsToVisit.pop();\n      updatedDataIDs.add(recordID);\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])((_this$_recordIDToReso = this._recordIDToResolverIDs.get(recordID)) !== null && _this$_recordIDToReso !== void 0 ? _this$_recordIDToReso : emptySet),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _this$_recordIDToReso;\n          var fragment = _step2.value;\n          if (!visited.has(fragment)) {\n            var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])((_this$_resolverIDToRe = this._resolverIDToRecordIDs.get(fragment)) !== null && _this$_resolverIDToRe !== void 0 ? _this$_resolverIDToRe : emptySet),\n              _step3;\n            try {\n              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                var _this$_resolverIDToRe;\n                var anotherRecordID = _step3.value;\n                this._markInvalidatedResolverRecord(anotherRecordID, recordSource, updatedDataIDs);\n                if (!visited.has(anotherRecordID)) {\n                  recordsToVisit.push(anotherRecordID);\n                }\n              }\n            } catch (err) {\n              _iterator3.e(err);\n            } finally {\n              _iterator3.f();\n            }\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  };\n  _proto2._markInvalidatedResolverRecord = function _markInvalidatedResolverRecord(dataID, recordSource, updatedDataIDs) {\n    var record = recordSource.get(dataID);\n    if (!record) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Expected a resolver record with ID %s, but it was missing.', dataID) : void 0;\n      return;\n    }\n    var nextRecord = RelayModernRecord.clone(record);\n    RelayModernRecord.setValue(nextRecord, RELAY_RESOLVER_INVALIDATION_KEY, true);\n    recordSource.set(dataID, nextRecord);\n  };\n  _proto2._isInvalid = function _isInvalid(record, getDataForResolverFragment) {\n    if (!RelayModernRecord.getValue(record, RELAY_RESOLVER_INVALIDATION_KEY)) {\n      return false;\n    }\n    var snapshot = RelayModernRecord.getValue(record, RELAY_RESOLVER_SNAPSHOT_KEY);\n    var originalInputs = snapshot === null || snapshot === void 0 ? void 0 : snapshot.data;\n    var readerSelector = snapshot === null || snapshot === void 0 ? void 0 : snapshot.selector;\n    if (originalInputs == null || readerSelector == null) {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'Expected previous inputs and reader selector on resolver record with ID %s, but they were missing.', RelayModernRecord.getDataID(record)) : void 0;\n      return true;\n    }\n    var _getDataForResolverFr = getDataForResolverFragment(readerSelector),\n      latestValues = _getDataForResolverFr.data;\n    var recycled = recycleNodesInto(originalInputs, latestValues);\n    if (recycled !== originalInputs) {\n      return true;\n    }\n    return false;\n  };\n  _proto2.ensureClientRecord = function ensureClientRecord(id, typename) {\n    !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Client Edges to Client Objects are not supported in this version of Relay Store') : invariant(false) : void 0;\n  };\n  _proto2.notifyUpdatedSubscribers = function notifyUpdatedSubscribers(updatedDataIDs) {\n    !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Processing @outputType records is not supported in this version of Relay Store') : invariant(false) : void 0;\n  };\n  return RecordResolverCache;\n}();\nmodule.exports = {\n  NoopResolverCache: NoopResolverCache,\n  RecordResolverCache: RecordResolverCache\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}