{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _require = require('../query/GraphQLTag'),\n  getRequest = _require.getRequest;\nvar _require2 = require('../store/ClientID'),\n  generateUniqueClientID = _require2.generateUniqueClientID;\nvar isRelayModernEnvironment = require('../store/isRelayModernEnvironment');\nvar _require3 = require('../store/RelayModernOperationDescriptor'),\n  createOperationDescriptor = _require3.createOperationDescriptor;\nvar RelayDeclarativeMutationConfig = require('./RelayDeclarativeMutationConfig');\nvar validateMutation = require('./validateMutation');\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\nfunction commitMutation(environment, config) {\n  !isRelayModernEnvironment(environment) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'commitMutation: expected `environment` to be an instance of ' + '`RelayModernEnvironment`.') : invariant(false) : void 0;\n  var mutation = getRequest(config.mutation);\n  if (mutation.params.operationKind !== 'mutation') {\n    throw new Error('commitMutation: Expected mutation operation');\n  }\n  if (mutation.kind !== 'Request') {\n    throw new Error('commitMutation: Expected mutation to be of type request');\n  }\n  var optimisticResponse = config.optimisticResponse,\n    optimisticUpdater = config.optimisticUpdater,\n    updater = config.updater;\n  var configs = config.configs,\n    cacheConfig = config.cacheConfig,\n    onError = config.onError,\n    onUnsubscribe = config.onUnsubscribe,\n    variables = config.variables,\n    uploadables = config.uploadables;\n  var operation = createOperationDescriptor(mutation, variables, cacheConfig, generateUniqueClientID());\n  if (typeof optimisticResponse === 'function') {\n    optimisticResponse = optimisticResponse();\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'commitMutation: Expected `optimisticResponse` to be an object, ' + 'received a function.') : void 0;\n  }\n  if (process.env.NODE_ENV !== \"production\") {\n    if (optimisticResponse instanceof Object) {\n      validateMutation(optimisticResponse, mutation, variables);\n    }\n  }\n  if (configs) {\n    var _RelayDeclarativeMuta = RelayDeclarativeMutationConfig.convert(configs, mutation, optimisticUpdater, updater);\n    optimisticUpdater = _RelayDeclarativeMuta.optimisticUpdater;\n    updater = _RelayDeclarativeMuta.updater;\n  }\n  var errors = [];\n  var subscription = environment.executeMutation({\n    operation: operation,\n    optimisticResponse: optimisticResponse,\n    optimisticUpdater: optimisticUpdater,\n    updater: updater,\n    uploadables: uploadables\n  }).subscribe({\n    next: function next(payload) {\n      var _config$onNext;\n      if (Array.isArray(payload)) {\n        payload.forEach(function (item) {\n          if (item.errors) {\n            errors.push.apply(errors, (0, _toConsumableArray2[\"default\"])(item.errors));\n          }\n        });\n      } else {\n        if (payload.errors) {\n          errors.push.apply(errors, (0, _toConsumableArray2[\"default\"])(payload.errors));\n        }\n      }\n      (_config$onNext = config.onNext) === null || _config$onNext === void 0 ? void 0 : _config$onNext.call(config);\n    },\n    complete: function complete() {\n      var onCompleted = config.onCompleted;\n      if (onCompleted) {\n        var snapshot = environment.lookup(operation.fragment);\n        onCompleted(snapshot.data, errors.length !== 0 ? errors : null);\n      }\n    },\n    error: onError,\n    unsubscribe: onUnsubscribe\n  });\n  return {\n    dispose: subscription.unsubscribe\n  };\n}\nmodule.exports = commitMutation;","map":{"version":3,"names":["_interopRequireDefault","require","_toConsumableArray2","_require","getRequest","_require2","generateUniqueClientID","isRelayModernEnvironment","_require3","createOperationDescriptor","RelayDeclarativeMutationConfig","validateMutation","invariant","warning","commitMutation","environment","config","process","env","NODE_ENV","mutation","params","operationKind","Error","kind","optimisticResponse","optimisticUpdater","updater","configs","cacheConfig","onError","onUnsubscribe","variables","uploadables","operation","Object","_RelayDeclarativeMuta","convert","errors","subscription","executeMutation","subscribe","next","payload","_config$onNext","Array","isArray","forEach","item","push","apply","onNext","call","complete","onCompleted","snapshot","lookup","fragment","data","length","error","unsubscribe","dispose","module","exports"],"sources":["/Users/joaoluismoraes/Desktop/woovi-challenge/web/node_modules/relay-runtime/lib/mutations/commitMutation.js"],"sourcesContent":["'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _require = require('../query/GraphQLTag'),\n  getRequest = _require.getRequest;\nvar _require2 = require('../store/ClientID'),\n  generateUniqueClientID = _require2.generateUniqueClientID;\nvar isRelayModernEnvironment = require('../store/isRelayModernEnvironment');\nvar _require3 = require('../store/RelayModernOperationDescriptor'),\n  createOperationDescriptor = _require3.createOperationDescriptor;\nvar RelayDeclarativeMutationConfig = require('./RelayDeclarativeMutationConfig');\nvar validateMutation = require('./validateMutation');\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\nfunction commitMutation(environment, config) {\n  !isRelayModernEnvironment(environment) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'commitMutation: expected `environment` to be an instance of ' + '`RelayModernEnvironment`.') : invariant(false) : void 0;\n  var mutation = getRequest(config.mutation);\n  if (mutation.params.operationKind !== 'mutation') {\n    throw new Error('commitMutation: Expected mutation operation');\n  }\n  if (mutation.kind !== 'Request') {\n    throw new Error('commitMutation: Expected mutation to be of type request');\n  }\n  var optimisticResponse = config.optimisticResponse,\n    optimisticUpdater = config.optimisticUpdater,\n    updater = config.updater;\n  var configs = config.configs,\n    cacheConfig = config.cacheConfig,\n    onError = config.onError,\n    onUnsubscribe = config.onUnsubscribe,\n    variables = config.variables,\n    uploadables = config.uploadables;\n  var operation = createOperationDescriptor(mutation, variables, cacheConfig, generateUniqueClientID());\n  if (typeof optimisticResponse === 'function') {\n    optimisticResponse = optimisticResponse();\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'commitMutation: Expected `optimisticResponse` to be an object, ' + 'received a function.') : void 0;\n  }\n  if (process.env.NODE_ENV !== \"production\") {\n    if (optimisticResponse instanceof Object) {\n      validateMutation(optimisticResponse, mutation, variables);\n    }\n  }\n  if (configs) {\n    var _RelayDeclarativeMuta = RelayDeclarativeMutationConfig.convert(configs, mutation, optimisticUpdater, updater);\n    optimisticUpdater = _RelayDeclarativeMuta.optimisticUpdater;\n    updater = _RelayDeclarativeMuta.updater;\n  }\n  var errors = [];\n  var subscription = environment.executeMutation({\n    operation: operation,\n    optimisticResponse: optimisticResponse,\n    optimisticUpdater: optimisticUpdater,\n    updater: updater,\n    uploadables: uploadables\n  }).subscribe({\n    next: function next(payload) {\n      var _config$onNext;\n      if (Array.isArray(payload)) {\n        payload.forEach(function (item) {\n          if (item.errors) {\n            errors.push.apply(errors, (0, _toConsumableArray2[\"default\"])(item.errors));\n          }\n        });\n      } else {\n        if (payload.errors) {\n          errors.push.apply(errors, (0, _toConsumableArray2[\"default\"])(payload.errors));\n        }\n      }\n      (_config$onNext = config.onNext) === null || _config$onNext === void 0 ? void 0 : _config$onNext.call(config);\n    },\n    complete: function complete() {\n      var onCompleted = config.onCompleted;\n      if (onCompleted) {\n        var snapshot = environment.lookup(operation.fragment);\n        onCompleted(snapshot.data, errors.length !== 0 ? errors : null);\n      }\n    },\n    error: onError,\n    unsubscribe: onUnsubscribe\n  });\n  return {\n    dispose: subscription.unsubscribe\n  };\n}\nmodule.exports = commitMutation;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}